<?xml version="1.0" encoding="UTF-8"?>
<testsuites tests="2622" failures="0" disabled="7" errors="0" timestamp="2020-04-28T17:30:21" time="5.408" name="AllTests">
  <testsuite name="TypedArrayViewTestAndConst/0" tests="8" failures="0" disabled="0" errors="0" time="0">
    <testcase name="creationOfViewAndIterator" type_param="ramses_internal::ArrayView&lt;char&gt;" status="run" time="0" classname="TypedArrayViewTestAndConst/0" />
    <testcase name="beginAndEnd" type_param="ramses_internal::ArrayView&lt;char&gt;" status="run" time="0" classname="TypedArrayViewTestAndConst/0" />
    <testcase name="acceptsNullptr" type_param="ramses_internal::ArrayView&lt;char&gt;" status="run" time="0" classname="TypedArrayViewTestAndConst/0" />
    <testcase name="acceptsZeroSize" type_param="ramses_internal::ArrayView&lt;char&gt;" status="run" time="0" classname="TypedArrayViewTestAndConst/0" />
    <testcase name="constIteratorAccessOperatorTest" type_param="ramses_internal::ArrayView&lt;char&gt;" status="run" time="0" classname="TypedArrayViewTestAndConst/0" />
    <testcase name="iteratorIncreaseDecreaseOperatorTest" type_param="ramses_internal::ArrayView&lt;char&gt;" status="run" time="0" classname="TypedArrayViewTestAndConst/0" />
    <testcase name="iteratorArithmeticOperatorTest" type_param="ramses_internal::ArrayView&lt;char&gt;" status="run" time="0" classname="TypedArrayViewTestAndConst/0" />
    <testcase name="iteratorComparingOperatorTest" type_param="ramses_internal::ArrayView&lt;char&gt;" status="run" time="0" classname="TypedArrayViewTestAndConst/0" />
  </testsuite>
  <testsuite name="TypedArrayViewTestAndConst/1" tests="8" failures="0" disabled="0" errors="0" time="0">
    <testcase name="creationOfViewAndIterator" type_param="ramses_internal::ArrayView&lt;char&gt;" status="run" time="0" classname="TypedArrayViewTestAndConst/1" />
    <testcase name="beginAndEnd" type_param="ramses_internal::ArrayView&lt;char&gt;" status="run" time="0" classname="TypedArrayViewTestAndConst/1" />
    <testcase name="acceptsNullptr" type_param="ramses_internal::ArrayView&lt;char&gt;" status="run" time="0" classname="TypedArrayViewTestAndConst/1" />
    <testcase name="acceptsZeroSize" type_param="ramses_internal::ArrayView&lt;char&gt;" status="run" time="0" classname="TypedArrayViewTestAndConst/1" />
    <testcase name="constIteratorAccessOperatorTest" type_param="ramses_internal::ArrayView&lt;char&gt;" status="run" time="0" classname="TypedArrayViewTestAndConst/1" />
    <testcase name="iteratorIncreaseDecreaseOperatorTest" type_param="ramses_internal::ArrayView&lt;char&gt;" status="run" time="0" classname="TypedArrayViewTestAndConst/1" />
    <testcase name="iteratorArithmeticOperatorTest" type_param="ramses_internal::ArrayView&lt;char&gt;" status="run" time="0" classname="TypedArrayViewTestAndConst/1" />
    <testcase name="iteratorComparingOperatorTest" type_param="ramses_internal::ArrayView&lt;char&gt;" status="run" time="0" classname="TypedArrayViewTestAndConst/1" />
  </testsuite>
  <testsuite name="TypedArrayViewTestAndConst/2" tests="8" failures="0" disabled="0" errors="0" time="0">
    <testcase name="creationOfViewAndIterator" type_param="ramses_internal::ArrayView&lt;unsigned int&gt;" status="run" time="0" classname="TypedArrayViewTestAndConst/2" />
    <testcase name="beginAndEnd" type_param="ramses_internal::ArrayView&lt;unsigned int&gt;" status="run" time="0" classname="TypedArrayViewTestAndConst/2" />
    <testcase name="acceptsNullptr" type_param="ramses_internal::ArrayView&lt;unsigned int&gt;" status="run" time="0" classname="TypedArrayViewTestAndConst/2" />
    <testcase name="acceptsZeroSize" type_param="ramses_internal::ArrayView&lt;unsigned int&gt;" status="run" time="0" classname="TypedArrayViewTestAndConst/2" />
    <testcase name="constIteratorAccessOperatorTest" type_param="ramses_internal::ArrayView&lt;unsigned int&gt;" status="run" time="0" classname="TypedArrayViewTestAndConst/2" />
    <testcase name="iteratorIncreaseDecreaseOperatorTest" type_param="ramses_internal::ArrayView&lt;unsigned int&gt;" status="run" time="0" classname="TypedArrayViewTestAndConst/2" />
    <testcase name="iteratorArithmeticOperatorTest" type_param="ramses_internal::ArrayView&lt;unsigned int&gt;" status="run" time="0" classname="TypedArrayViewTestAndConst/2" />
    <testcase name="iteratorComparingOperatorTest" type_param="ramses_internal::ArrayView&lt;unsigned int&gt;" status="run" time="0" classname="TypedArrayViewTestAndConst/2" />
  </testsuite>
  <testsuite name="TypedArrayViewTestAndConst/3" tests="8" failures="0" disabled="0" errors="0" time="0">
    <testcase name="creationOfViewAndIterator" type_param="ramses_internal::ArrayView&lt;unsigned short&gt;" status="run" time="0" classname="TypedArrayViewTestAndConst/3" />
    <testcase name="beginAndEnd" type_param="ramses_internal::ArrayView&lt;unsigned short&gt;" status="run" time="0" classname="TypedArrayViewTestAndConst/3" />
    <testcase name="acceptsNullptr" type_param="ramses_internal::ArrayView&lt;unsigned short&gt;" status="run" time="0" classname="TypedArrayViewTestAndConst/3" />
    <testcase name="acceptsZeroSize" type_param="ramses_internal::ArrayView&lt;unsigned short&gt;" status="run" time="0" classname="TypedArrayViewTestAndConst/3" />
    <testcase name="constIteratorAccessOperatorTest" type_param="ramses_internal::ArrayView&lt;unsigned short&gt;" status="run" time="0" classname="TypedArrayViewTestAndConst/3" />
    <testcase name="iteratorIncreaseDecreaseOperatorTest" type_param="ramses_internal::ArrayView&lt;unsigned short&gt;" status="run" time="0" classname="TypedArrayViewTestAndConst/3" />
    <testcase name="iteratorArithmeticOperatorTest" type_param="ramses_internal::ArrayView&lt;unsigned short&gt;" status="run" time="0" classname="TypedArrayViewTestAndConst/3" />
    <testcase name="iteratorComparingOperatorTest" type_param="ramses_internal::ArrayView&lt;unsigned short&gt;" status="run" time="0" classname="TypedArrayViewTestAndConst/3" />
  </testsuite>
  <testsuite name="TypedArrayViewTest/0" tests="3" failures="0" disabled="0" errors="0" time="0">
    <testcase name="iteratorAccessOperatorTest" type_param="ramses_internal::ArrayView&lt;char&gt;" status="run" time="0" classname="TypedArrayViewTest/0" />
    <testcase name="ConstIteratorAccessOperatorTest" type_param="ramses_internal::ArrayView&lt;char&gt;" status="run" time="0" classname="TypedArrayViewTest/0" />
    <testcase name="simpleIteration" type_param="ramses_internal::ArrayView&lt;char&gt;" status="run" time="0" classname="TypedArrayViewTest/0" />
  </testsuite>
  <testsuite name="TypedArrayViewTest/1" tests="3" failures="0" disabled="0" errors="0" time="0">
    <testcase name="iteratorAccessOperatorTest" type_param="ramses_internal::ArrayView&lt;unsigned int&gt;" status="run" time="0" classname="TypedArrayViewTest/1" />
    <testcase name="ConstIteratorAccessOperatorTest" type_param="ramses_internal::ArrayView&lt;unsigned int&gt;" status="run" time="0" classname="TypedArrayViewTest/1" />
    <testcase name="simpleIteration" type_param="ramses_internal::ArrayView&lt;unsigned int&gt;" status="run" time="0" classname="TypedArrayViewTest/1" />
  </testsuite>
  <testsuite name="TypedArrayViewTest/2" tests="3" failures="0" disabled="0" errors="0" time="0">
    <testcase name="iteratorAccessOperatorTest" type_param="ramses_internal::ArrayView&lt;unsigned short&gt;" status="run" time="0" classname="TypedArrayViewTest/2" />
    <testcase name="ConstIteratorAccessOperatorTest" type_param="ramses_internal::ArrayView&lt;unsigned short&gt;" status="run" time="0" classname="TypedArrayViewTest/2" />
    <testcase name="simpleIteration" type_param="ramses_internal::ArrayView&lt;unsigned short&gt;" status="run" time="0" classname="TypedArrayViewTest/2" />
  </testsuite>
  <testsuite name="ArrayViewTest" tests="1" failures="0" disabled="0" errors="0" time="0">
    <testcase name="worksWithRandomIteratorAlgorithms" status="run" time="0" classname="ArrayViewTest" />
  </testsuite>
  <testsuite name="ABlockingQueue" tests="5" failures="0" disabled="0" errors="0" time="0.621">
    <testcase name="canPushAndPopValue" status="run" time="0" classname="ABlockingQueue" />
    <testcase name="canPushAndPopMultipleValuesAsFifo" status="run" time="0.001" classname="ABlockingQueue" />
    <testcase name="hasTimeoutWhenPoppingEmptyQueue" status="run" time="0.01" classname="ABlockingQueue" />
    <testcase name="isEmptyIfNoElementsInside" status="run" time="0" classname="ABlockingQueue" />
    <testcase name="confidence_canPushAndPopFromMultipleThreads" status="run" time="0.61" classname="ABlockingQueue" />
  </testsuite>
  <testsuite name="GuidTest" tests="28" failures="0" disabled="0" errors="0" time="0.001">
    <testcase name="TestNewAreNotEqual" status="run" time="0.001" classname="GuidTest" />
    <testcase name="TestParseAreEqual1" status="run" time="0" classname="GuidTest" />
    <testcase name="TestParseInvalidGuid1" status="run" time="0" classname="GuidTest" />
    <testcase name="TestParseInvalidGuid2" status="run" time="0" classname="GuidTest" />
    <testcase name="TestParseInvalidGuid3" status="run" time="0" classname="GuidTest" />
    <testcase name="TestParseToString1" status="run" time="0" classname="GuidTest" />
    <testcase name="TestParseToString2" status="run" time="0" classname="GuidTest" />
    <testcase name="TestCopyConstructor" status="run" time="0" classname="GuidTest" />
    <testcase name="TestAssignmentOperator1" status="run" time="0" classname="GuidTest" />
    <testcase name="TestParse1" status="run" time="0" classname="GuidTest" />
    <testcase name="TestParse2" status="run" time="0" classname="GuidTest" />
    <testcase name="CopyConstructor" status="run" time="0" classname="GuidTest" />
    <testcase name="ExpectUuidStructPacked" status="run" time="0" classname="GuidTest" />
    <testcase name="HashGuid" status="run" time="0" classname="GuidTest" />
    <testcase name="HashersForGuidEqual" status="run" time="0" classname="GuidTest" />
    <testcase name="createsRandom" status="run" time="0" classname="GuidTest" />
    <testcase name="copyConstructor" status="run" time="0" classname="GuidTest" />
    <testcase name="createFromString" status="run" time="0" classname="GuidTest" />
    <testcase name="canCreateAlwaysSameInvalidGuid" status="run" time="0" classname="GuidTest" />
    <testcase name="InvalidGuidIsInvalidOthersNot" status="run" time="0" classname="GuidTest" />
    <testcase name="writeToStringOutputStream_full" status="run" time="0" classname="GuidTest" />
    <testcase name="writeToStringOutputStream_leading_zeros" status="run" time="0" classname="GuidTest" />
    <testcase name="writeToStringOutputStream_zero" status="run" time="0" classname="GuidTest" />
    <testcase name="writeToStringOutputStream_specialNumber" status="run" time="0" classname="GuidTest" />
    <testcase name="get64" status="run" time="0" classname="GuidTest" />
    <testcase name="initFrom64" status="run" time="0" classname="GuidTest" />
    <testcase name="writeReadToBinaryStream" status="run" time="0" classname="GuidTest" />
    <testcase name="readBinaryStreamWithUpperBytesSet" status="run" time="0" classname="GuidTest" />
  </testsuite>
  <testsuite name="AHeapArray" tests="9" failures="0" disabled="0" errors="0" time="0">
    <testcase name="DefaultCtorCreatesEmpty" status="run" time="0" classname="AHeapArray" />
    <testcase name="CanCreateWithSize" status="run" time="0" classname="AHeapArray" />
    <testcase name="CanCreateWithSizeAndData" status="run" time="0" classname="AHeapArray" />
    <testcase name="CanGetConstData" status="run" time="0" classname="AHeapArray" />
    <testcase name="IsZeroAfterSetZero" status="run" time="0" classname="AHeapArray" />
    <testcase name="CanMoveConstruct" status="run" time="0" classname="AHeapArray" />
    <testcase name="CanMoveAssign" status="run" time="0" classname="AHeapArray" />
    <testcase name="canBeStronglyTyped" status="run" time="0" classname="AHeapArray" />
    <testcase name="canBeReconstructedWithOtherSize" status="run" time="0" classname="AHeapArray" />
  </testsuite>
  <testsuite name="AIInutOutputStream" tests="12" failures="0" disabled="0" errors="0" time="0">
    <testcase name="verifyUint32" status="run" time="0" classname="AIInutOutputStream" />
    <testcase name="verifyInt32" status="run" time="0" classname="AIInutOutputStream" />
    <testcase name="verifyUint64" status="run" time="0" classname="AIInutOutputStream" />
    <testcase name="verifyInt64" status="run" time="0" classname="AIInutOutputStream" />
    <testcase name="verifyUint16" status="run" time="0" classname="AIInutOutputStream" />
    <testcase name="verifyInt16" status="run" time="0" classname="AIInutOutputStream" />
    <testcase name="verifyUint8" status="run" time="0" classname="AIInutOutputStream" />
    <testcase name="verifyInt8" status="run" time="0" classname="AIInutOutputStream" />
    <testcase name="verifyBool" status="run" time="0" classname="AIInutOutputStream" />
    <testcase name="verifyFloat" status="run" time="0" classname="AIInutOutputStream" />
    <testcase name="verifyEnum" status="run" time="0" classname="AIInutOutputStream" />
    <testcase name="verifyEnum8" status="run" time="0" classname="AIInutOutputStream" />
  </testsuite>
  <testsuite name="PlatformMath" tests="3" failures="0" disabled="0" errors="0" time="0">
    <testcase name="PI" status="run" time="0" classname="PlatformMath" />
    <testcase name="Rad2Deg" status="run" time="0" classname="PlatformMath" />
    <testcase name="Deg2Rad" status="run" time="0" classname="PlatformMath" />
  </testsuite>
  <testsuite name="NumericLimits" tests="2" failures="0" disabled="0" errors="0" time="0">
    <testcase name="ensureAvailableForAlltypes" status="run" time="0" classname="NumericLimits" />
    <testcase name="testLimits" status="run" time="0" classname="NumericLimits" />
  </testsuite>
  <testsuite name="Endianess" tests="1" failures="0" disabled="0" errors="0" time="0">
    <testcase name="isLittleEndianOnAllRamsesSystems" status="run" time="0" classname="Endianess" />
  </testsuite>
  <testsuite name="EnvironmentVariables" tests="4" failures="0" disabled="0" errors="0" time="0">
    <testcase name="getTest" status="run" time="0" classname="EnvironmentVariables" />
    <testcase name="hasTest" status="run" time="0" classname="EnvironmentVariables" />
    <testcase name="setTest" status="run" time="0" classname="EnvironmentVariables" />
    <testcase name="unsetTest" status="run" time="0" classname="EnvironmentVariables" />
  </testsuite>
  <testsuite name="PlatformSignal" tests="1" failures="0" disabled="0" errors="0" time="0">
    <testcase name="signalAndRaise" status="run" time="0" classname="PlatformSignal" />
  </testsuite>
  <testsuite name="APlatformThread" tests="7" failures="0" disabled="0" errors="0" time="0.011">
    <testcase name="Constructor" status="run" time="0" classname="APlatformThread" />
    <testcase name="TwoThreadsAtOnce" status="run" time="0.001" classname="APlatformThread" />
    <testcase name="reuseThread" status="run" time="0" classname="APlatformThread" />
    <testcase name="startAndCancelTest" status="run" time="0" classname="APlatformThread" />
    <testcase name="joinWithoutStartingIsOK" status="run" time="0" classname="APlatformThread" />
    <testcase name="cancelWithoutRunnable" status="run" time="0" classname="APlatformThread" />
    <testcase name="stateLifecycle" status="run" time="0.01" classname="APlatformThread" />
  </testsuite>
  <testsuite name="Thread" tests="1" failures="0" disabled="0" errors="0" time="0">
    <testcase name="getId" status="run" time="0" classname="Thread" />
  </testsuite>
  <testsuite name="PlatformTimeSynchronized" tests="5" failures="0" disabled="1" errors="0" time="0.06">
    <testcase name="nowNotZero" status="run" time="0" classname="PlatformTimeSynchronized" />
    <testcase name="expectTimeProgressed" status="run" time="0.06" classname="PlatformTimeSynchronized" />
    <testcase name="non_ptp_behavesAsSystemClock" status="run" time="0" classname="PlatformTimeSynchronized" />
    <testcase name="integralConversionsWork" status="run" time="0" classname="PlatformTimeSynchronized" />
    <testcase name="DISABLED_longerTimeDiffTest" status="notrun" time="0" classname="PlatformTimeSynchronized" />
  </testsuite>
  <testsuite name="PlatformTimeMonotonic" tests="6" failures="0" disabled="1" errors="0" time="0.181">
    <testcase name="notZero" status="run" time="0" classname="PlatformTimeMonotonic" />
    <testcase name="doesNotMoveBackward" status="run" time="0.06" classname="PlatformTimeMonotonic" />
    <testcase name="expectTimeProgressed_Milliseconds" status="run" time="0.061" classname="PlatformTimeMonotonic" />
    <testcase name="expectTimeProgressed_Microseconds" status="run" time="0.06" classname="PlatformTimeMonotonic" />
    <testcase name="integralConversionsWork" status="run" time="0" classname="PlatformTimeMonotonic" />
    <testcase name="DISABLED_getMicrosecondsTestLongTime_Monotonic" status="notrun" time="0" classname="PlatformTimeMonotonic" />
  </testsuite>
  <testsuite name="PlatformTimeAbsolute" tests="4" failures="0" disabled="1" errors="0" time="0">
    <testcase name="notZero" status="run" time="0" classname="PlatformTimeAbsolute" />
    <testcase name="isBiggerThanSomeReferenceTime" status="run" time="0" classname="PlatformTimeAbsolute" />
    <testcase name="integralConversionsWork" status="run" time="0" classname="PlatformTimeAbsolute" />
    <testcase name="DISABLED_getMicrosecondsTestLongTime_Absolute" status="notrun" time="0" classname="PlatformTimeAbsolute" />
  </testsuite>
  <testsuite name="AStringOutputStream" tests="48" failures="0" disabled="0" errors="0" time="0">
    <testcase name="WriteFloatWithDefaultPrecision" status="run" time="0" classname="AStringOutputStream" />
    <testcase name="WriteFloatMaximumNegativeWithDefaultPrecision" status="run" time="0" classname="AStringOutputStream" />
    <testcase name="WriteFloatZeroWithMaximumPrecision" status="run" time="0" classname="AStringOutputStream" />
    <testcase name="WriteFloatZeroWithCappedToMaximumPrecision" status="run" time="0" classname="AStringOutputStream" />
    <testcase name="WriteFloatSmallestNegativeWithMaximumPrecision" status="run" time="0" classname="AStringOutputStream" />
    <testcase name="WriteInt32" status="run" time="0" classname="AStringOutputStream" />
    <testcase name="WriteUInt32" status="run" time="0" classname="AStringOutputStream" />
    <testcase name="WriteInt64" status="run" time="0" classname="AStringOutputStream" />
    <testcase name="WriteUInt64" status="run" time="0" classname="AStringOutputStream" />
    <testcase name="WriteString" status="run" time="0" classname="AStringOutputStream" />
    <testcase name="WriteStdString" status="run" time="0" classname="AStringOutputStream" />
    <testcase name="WriteBoolTrue" status="run" time="0" classname="AStringOutputStream" />
    <testcase name="WriteBoolFalse" status="run" time="0" classname="AStringOutputStream" />
    <testcase name="WriteCharArray" status="run" time="0" classname="AStringOutputStream" />
    <testcase name="WriteChar" status="run" time="0" classname="AStringOutputStream" />
    <testcase name="WriteUInt16" status="run" time="0" classname="AStringOutputStream" />
    <testcase name="WriteFixed" status="run" time="0" classname="AStringOutputStream" />
    <testcase name="Clear" status="run" time="0" classname="AStringOutputStream" />
    <testcase name="AutoFlush" status="run" time="0" classname="AStringOutputStream" />
    <testcase name="Flush" status="run" time="0" classname="AStringOutputStream" />
    <testcase name="MultipleData" status="run" time="0" classname="AStringOutputStream" />
    <testcase name="Resize" status="run" time="0" classname="AStringOutputStream" />
    <testcase name="C_StrIsNullTerminatedForConstStreams" status="run" time="0" classname="AStringOutputStream" />
    <testcase name="WriteUInt32HexNoLeadingZero" status="run" time="0" classname="AStringOutputStream" />
    <testcase name="WriteUInt32HexLeadingZero" status="run" time="0" classname="AStringOutputStream" />
    <testcase name="WriteInt32HexNoLeadingZero" status="run" time="0" classname="AStringOutputStream" />
    <testcase name="WriteInt32HexLeadingZero" status="run" time="0" classname="AStringOutputStream" />
    <testcase name="WriteInt32HexNegativeValue" status="run" time="0" classname="AStringOutputStream" />
    <testcase name="WriteUInt64HexNoLeadingZero" status="run" time="0" classname="AStringOutputStream" />
    <testcase name="WriteUInt64HexLeadingZero" status="run" time="0" classname="AStringOutputStream" />
    <testcase name="WriteInt64HexNoLeadingZero" status="run" time="0" classname="AStringOutputStream" />
    <testcase name="WriteInt64HexLeadingZero" status="run" time="0" classname="AStringOutputStream" />
    <testcase name="WriteInt64HexNegativeValue" status="run" time="0" classname="AStringOutputStream" />
    <testcase name="WriteUInt16HexLeadingZero" status="run" time="0" classname="AStringOutputStream" />
    <testcase name="WriteUInt16HexNoLeadingZero" status="run" time="0" classname="AStringOutputStream" />
    <testcase name="WriteInt16HexLeadingZero" status="run" time="0" classname="AStringOutputStream" />
    <testcase name="WriteInt16HexNoLeadingZero" status="run" time="0" classname="AStringOutputStream" />
    <testcase name="WriteInt16HexNegativeValue" status="run" time="0" classname="AStringOutputStream" />
    <testcase name="hasLengthZeroIntially" status="run" time="0" classname="AStringOutputStream" />
    <testcase name="returnsCorrectLength" status="run" time="0" classname="AStringOutputStream" />
    <testcase name="PrintsNullVoidPointerAsHex" status="run" time="0" classname="AStringOutputStream" />
    <testcase name="PrintsNonNullVoidPointerAsHex" status="run" time="0" classname="AStringOutputStream" />
    <testcase name="Matrix44f" status="run" time="0" classname="AStringOutputStream" />
    <testcase name="releaseReturnsStringAndClearsStream" status="run" time="0" classname="AStringOutputStream" />
    <testcase name="ToStringWorksForStreamableTypes" status="run" time="0" classname="AStringOutputStream" />
    <testcase name="CanGetUnderlayingString" status="run" time="0" classname="AStringOutputStream" />
    <testcase name="CanConstructWithString" status="run" time="0" classname="AStringOutputStream" />
    <testcase name="CanConstructWithStdString" status="run" time="0" classname="AStringOutputStream" />
  </testsuite>
  <testsuite name="String" tests="75" failures="0" disabled="0" errors="0" time="0.001">
    <testcase name="TestCTor" status="run" time="0" classname="String" />
    <testcase name="TestCStr" status="run" time="0" classname="String" />
    <testcase name="TestCopyConstructor" status="run" time="0" classname="String" />
    <testcase name="InitialSizeConstructor" status="run" time="0" classname="String" />
    <testcase name="ConstructWithEmptyStringIsEmpty" status="run" time="0" classname="String" />
    <testcase name="TestAssignOperator1" status="run" time="0" classname="String" />
    <testcase name="MoveConstructor" status="run" time="0" classname="String" />
    <testcase name="MoveAssignment" status="run" time="0" classname="String" />
    <testcase name="TestToLowerCase1" status="run" time="0" classname="String" />
    <testcase name="TestToLowerCase2" status="run" time="0" classname="String" />
    <testcase name="TestToLowerCase3" status="run" time="0" classname="String" />
    <testcase name="TestToLowerCase4" status="run" time="0" classname="String" />
    <testcase name="TestToLowerCase5" status="run" time="0" classname="String" />
    <testcase name="TestToUpperCase1" status="run" time="0" classname="String" />
    <testcase name="TestToUpperCase2" status="run" time="0" classname="String" />
    <testcase name="TestToUpperCase3" status="run" time="0" classname="String" />
    <testcase name="TestToUpperCase4" status="run" time="0" classname="String" />
    <testcase name="TestToUpperCase5" status="run" time="0" classname="String" />
    <testcase name="TestAssignOperator2" status="run" time="0" classname="String" />
    <testcase name="TestAssignOperator3" status="run" time="0" classname="String" />
    <testcase name="TestAssignOperator4" status="run" time="0" classname="String" />
    <testcase name="TestAssignOperator5" status="run" time="0" classname="String" />
    <testcase name="TestAssignOperator6" status="run" time="0" classname="String" />
    <testcase name="TestAppend1" status="run" time="0" classname="String" />
    <testcase name="TestAppend2" status="run" time="0" classname="String" />
    <testcase name="TestAppend3" status="run" time="0" classname="String" />
    <testcase name="TestAppend4" status="run" time="0" classname="String" />
    <testcase name="TestAppend5" status="run" time="0" classname="String" />
    <testcase name="TestPlusOperator1" status="run" time="0" classname="String" />
    <testcase name="TestPlusOperator2" status="run" time="0" classname="String" />
    <testcase name="TestPlusOperator3" status="run" time="0" classname="String" />
    <testcase name="TestPlusOperator4" status="run" time="0" classname="String" />
    <testcase name="TestPlusOperator5" status="run" time="0" classname="String" />
    <testcase name="TestAddition" status="run" time="0" classname="String" />
    <testcase name="TestAddAssignString" status="run" time="0" classname="String" />
    <testcase name="TestAddAssignChar" status="run" time="0" classname="String" />
    <testcase name="TestSubStringCTor1" status="run" time="0" classname="String" />
    <testcase name="TestSubStringCTor4" status="run" time="0" classname="String" />
    <testcase name="TestSubStringCTor5" status="run" time="0" classname="String" />
    <testcase name="TestSubStringCTor6" status="run" time="0" classname="String" />
    <testcase name="TestSubStringCTorWithoutNullTermintor" status="run" time="0" classname="String" />
    <testcase name="AccessOperator" status="run" time="0" classname="String" />
    <testcase name="AutoCast" status="run" time="0" classname="String" />
    <testcase name="Equals1" status="run" time="0" classname="String" />
    <testcase name="Equals2" status="run" time="0" classname="String" />
    <testcase name="Equals3" status="run" time="0" classname="String" />
    <testcase name="Equals4" status="run" time="0" classname="String" />
    <testcase name="NotEquals1" status="run" time="0" classname="String" />
    <testcase name="NotEquals2" status="run" time="0" classname="String" />
    <testcase name="NotEquals3" status="run" time="0" classname="String" />
    <testcase name="SmallerGreater1" status="run" time="0" classname="String" />
    <testcase name="SmallerGreater2" status="run" time="0" classname="String" />
    <testcase name="SmallerGreater3" status="run" time="0" classname="String" />
    <testcase name="SmallerGreater4" status="run" time="0" classname="String" />
    <testcase name="FindChar" status="run" time="0" classname="String" />
    <testcase name="FindCharOffset" status="run" time="0" classname="String" />
    <testcase name="FindStringOffset" status="run" time="0" classname="String" />
    <testcase name="RFindChar" status="run" time="0" classname="String" />
    <testcase name="FindSubstring" status="run" time="0" classname="String" />
    <testcase name="GetSubstring" status="run" time="0" classname="String" />
    <testcase name="StartsWith" status="run" time="0" classname="String" />
    <testcase name="EndsWith" status="run" time="0" classname="String" />
    <testcase name="TestDataGetterOnEmptyString" status="run" time="0" classname="String" />
    <testcase name="TestDataGetterOnNonEmptyString" status="run" time="0" classname="String" />
    <testcase name="ResizeAnEmptyString" status="run" time="0" classname="String" />
    <testcase name="ResizeToSmaller" status="run" time="0" classname="String" />
    <testcase name="IsNullterminatedAlsoAfterResizing" status="run" time="0" classname="String" />
    <testcase name="IsNullterminatedAlsoAfterResizingToZero" status="run" time="0" classname="String" />
    <testcase name="ResizeReallyAllocatesEnough" status="run" time="0" classname="String" />
    <testcase name="ReservePreventReallocAndCapacityChange" status="run" time="0" classname="String" />
    <testcase name="reserveOnEmptyStringSetCapacityOnAtLeastThisValue" status="run" time="0" classname="String" />
    <testcase name="reserveMoreOnNonOnEmptyStringSetCapacityOnAtLeastThisValue" status="run" time="0" classname="String" />
    <testcase name="reserveLessThanSizeDoesNothing" status="run" time="0" classname="String" />
    <testcase name="HashMapWithString" status="run" time="0" classname="String" />
    <testcase name="HashMapWithStdString" status="run" time="0" classname="String" />
  </testsuite>
  <testsuite name="AString" tests="4" failures="0" disabled="0" errors="0" time="0">
    <testcase name="serializeDeserializeString" status="run" time="0" classname="AString" />
    <testcase name="serializeDeserializeStdString" status="run" time="0" classname="AString" />
    <testcase name="serializeDeserializeRamsesToStdString" status="run" time="0" classname="AString" />
    <testcase name="serializeDeserializeStdToRamsesString" status="run" time="0" classname="AString" />
  </testsuite>
  <testsuite name="AVector" tests="8" failures="0" disabled="0" errors="0" time="0">
    <testcase name="isInitiallyEmpty" status="run" time="0" classname="AVector" />
    <testcase name="canBeConstructedWithDefaultValues" status="run" time="0" classname="AVector" />
    <testcase name="canBeConstructedWithGivenValue" status="run" time="0" classname="AVector" />
    <testcase name="canBeInitializedFromInitializerList" status="run" time="0" classname="AVector" />
    <testcase name="canBeCopyConstructed" status="run" time="0" classname="AVector" />
    <testcase name="canBeAssignTo" status="run" time="0" classname="AVector" />
    <testcase name="canBeMoveConstructed" status="run" time="0" classname="AVector" />
    <testcase name="canBeMoveAssigned" status="run" time="0" classname="AVector" />
  </testsuite>
  <testsuite name="APILoggingHelperTest" tests="3" failures="0" disabled="0" errors="0" time="0">
    <testcase name="emptyArgumentsTest" status="run" time="0" classname="APILoggingHelperTest" />
    <testcase name="singleArgumentTest" status="run" time="0" classname="APILoggingHelperTest" />
    <testcase name="multiArgumentsTest" status="run" time="0" classname="APILoggingHelperTest" />
  </testsuite>
  <testsuite name="ACommandContainer" tests="4" failures="0" disabled="0" errors="0" time="0">
    <testcase name="isEmptyAfterCreation" status="run" time="0" classname="ACommandContainer" />
    <testcase name="canAddAndGetCommand" status="run" time="0" classname="ACommandContainer" />
    <testcase name="canClearCommands" status="run" time="0" classname="ACommandContainer" />
    <testcase name="canSwapContent" status="run" time="0" classname="ACommandContainer" />
  </testsuite>
  <testsuite name="ACommand" tests="2" failures="0" disabled="0" errors="0" time="0">
    <testcase name="CanBeCreated" status="run" time="0" classname="ACommand" />
    <testcase name="canConvertToItsType" status="run" time="0" classname="ACommand" />
  </testsuite>
  <testsuite name="DcsmApiTypes" tests="2" failures="0" disabled="0" errors="0" time="0">
    <testcase name="hasSizeInfoComparison" status="run" time="0" classname="DcsmApiTypes" />
    <testcase name="hasAnimationInformationComparison" status="run" time="0" classname="DcsmApiTypes" />
  </testsuite>
  <testsuite name="ADcsmConsumer" tests="7" failures="0" disabled="0" errors="0" time="0.003">
    <testcase name="canCreateAndDestroy" status="run" time="0.001" classname="ADcsmConsumer" />
    <testcase name="canCreateAndLetFrameworkDestroy" status="run" time="0" classname="ADcsmConsumer" />
    <testcase name="cannotCreateTwiceOnSameFramework" status="run" time="0" classname="ADcsmConsumer" />
    <testcase name="cannotDestroyConsumerFromOtherFramework" status="run" time="0.001" classname="ADcsmConsumer" />
    <testcase name="canCreateAndDestroyConsumerOnDifferentFrameworksSimultaneously" status="run" time="0.001" classname="ADcsmConsumer" />
    <testcase name="emptyDispatchSucceeds" status="run" time="0" classname="ADcsmConsumer" />
    <testcase name="sendCallWithUnknownContentFails" status="run" time="0" classname="ADcsmConsumer" />
  </testsuite>
  <testsuite name="ADcsmMetadataCreator" tests="10" failures="0" disabled="0" errors="0" time="0">
    <testcase name="initiallyEmpty" status="run" time="0" classname="ADcsmMetadataCreator" />
    <testcase name="canSetPreviewImagePng" status="run" time="0" classname="ADcsmMetadataCreator" />
    <testcase name="failsForInvalidPreviewImagePng" status="run" time="0" classname="ADcsmMetadataCreator" />
    <testcase name="canSetPreviewDescription" status="run" time="0" classname="ADcsmMetadataCreator" />
    <testcase name="canSetWidgetOrder" status="run" time="0" classname="ADcsmMetadataCreator" />
    <testcase name="canSetWidgetBackgroundID" status="run" time="0" classname="ADcsmMetadataCreator" />
    <testcase name="canSetWidgetHUDLineID" status="run" time="0" classname="ADcsmMetadataCreator" />
    <testcase name="canSetCarModel" status="run" time="0" classname="ADcsmMetadataCreator" />
    <testcase name="canSetCarModelView" status="run" time="0" classname="ADcsmMetadataCreator" />
    <testcase name="canSetCarModelVisibility" status="run" time="0" classname="ADcsmMetadataCreator" />
  </testsuite>
  <testsuite name="ADcsmMetadataUpdate" tests="9" failures="0" disabled="0" errors="0" time="0">
    <testcase name="emptyObjectReturnsEmptyMetadata" status="run" time="0" classname="ADcsmMetadataUpdate" />
    <testcase name="returnsPreviewImagePng" status="run" time="0" classname="ADcsmMetadataUpdate" />
    <testcase name="returnsPreviewDescription" status="run" time="0" classname="ADcsmMetadataUpdate" />
    <testcase name="returnsWidgetOrder" status="run" time="0" classname="ADcsmMetadataUpdate" />
    <testcase name="returnsWidgetBackgroundID" status="run" time="0" classname="ADcsmMetadataUpdate" />
    <testcase name="returnsWidgetHUDLineID" status="run" time="0" classname="ADcsmMetadataUpdate" />
    <testcase name="returnsCarModel" status="run" time="0" classname="ADcsmMetadataUpdate" />
    <testcase name="returnsCarModelView" status="run" time="0" classname="ADcsmMetadataUpdate" />
    <testcase name="returnsCarModelVisibility" status="run" time="0" classname="ADcsmMetadataUpdate" />
  </testsuite>
  <testsuite name="ADcsmProvider" tests="47" failures="0" disabled="0" errors="0" time="0.005">
    <testcase name="callsLocalProviderAvailabilityOnConstructionAndDestruction" status="run" time="0" classname="ADcsmProvider" />
    <testcase name="callsDispatchOnDcsmClientWhenDispatchIsCalledAndReturnsOK" status="run" time="0" classname="ADcsmProvider" />
    <testcase name="canOfferContent" status="run" time="0" classname="ADcsmProvider" />
    <testcase name="canOfferContentWithMetadata" status="run" time="0" classname="ADcsmProvider" />
    <testcase name="willIgnoreAllButOneOfferContent" status="run" time="0" classname="ADcsmProvider" />
    <testcase name="willIgnoreAllButOneOfferContentAfterOfferWithMetadata" status="run" time="0" classname="ADcsmProvider" />
    <testcase name="willAcceptSameSceneIDForDifferentContents" status="run" time="0" classname="ADcsmProvider" />
    <testcase name="willAutomaticallyReplyContentReadyIfContentIsMarkedReadyAndNotCallCallback" status="run" time="0" classname="ADcsmProvider" />
    <testcase name="willCallCallbackIfContentNotMarkedReady" status="run" time="0" classname="ADcsmProvider" />
    <testcase name="willReplyContentReadyOnceContentIsMarkedReady" status="run" time="0" classname="ADcsmProvider" />
    <testcase name="ignoresStateChangeRequestToSameState" status="run" time="0" classname="ADcsmProvider" />
    <testcase name="callsCallbackForEachSizeChangedWithCorrectSizeInfoAndAnimInformation" status="run" time="0" classname="ADcsmProvider" />
    <testcase name="callsCallbackForEachStatusChangedWithCorrectAnimInformation" status="run" time="0.001" classname="ADcsmProvider" />
    <testcase name="callsSizeChangedCallbackOnStatusChangedToAssignedFromOffered" status="run" time="0" classname="ADcsmProvider" />
    <testcase name="doesNotCallSizeChangedCallbackOnStatusChangedToAssignedFromAboveButContentReleasedCallback" status="run" time="0" classname="ADcsmProvider" />
    <testcase name="doesNotCallSizeChangedCallbackOnStatusChangedToAnyOtherStateThanAssignedUpwards" status="run" time="0" classname="ADcsmProvider" />
    <testcase name="sendsRequestStopOfferMessageAndCallsStopOfferAcceptedOnStatusChange" status="run" time="0" classname="ADcsmProvider" />
    <testcase name="sendsRequestContentFacosMessageToConsumerIfUserCallsRequestContentFocus" status="run" time="0" classname="ADcsmProvider" />
    <testcase name="doesNothingIfUserUsesWrongContentIDOnStopOfferContent" status="run" time="0" classname="ADcsmProvider" />
    <testcase name="doesNothingIfUserUsesWrongContentIDOnRequestContentFocus" status="run" time="0" classname="ADcsmProvider" />
    <testcase name="doesNothingIfUserUsesWrongContentIDOnMarkContentReady" status="run" time="0.001" classname="ADcsmProvider" />
    <testcase name="marksContentReadyOnlyOnce" status="run" time="0" classname="ADcsmProvider" />
    <testcase name="callsNoCanvasSizeCallbackIfDcsmSizeMessageHasUnknownContentID" status="run" time="0" classname="ADcsmProvider" />
    <testcase name="doesNothingIfContentStateMessageHasWrongContentID" status="run" time="0" classname="ADcsmProvider" />
    <testcase name="allowsToReofferContentWithSameOrDifferentParameters" status="run" time="0" classname="ADcsmProvider" />
    <testcase name="offerContentFailsIfSendOfferContentFails" status="run" time="0" classname="ADcsmProvider" />
    <testcase name="offerContentWithMetadataFailsIfSendOfferContentFails" status="run" time="0" classname="ADcsmProvider" />
    <testcase name="offerContentWithMetadataFailsIfSendMetadataFails" status="run" time="0" classname="ADcsmProvider" />
    <testcase name="requestStopOfferContentFailsIfSendRequestUnregisterContentFails" status="run" time="0" classname="ADcsmProvider" />
    <testcase name="markContentReadyFailsIfsendContentReadyFails" status="run" time="0" classname="ADcsmProvider" />
    <testcase name="requestContentFocusFailsIfSendContentFocusRequestFails" status="run" time="0" classname="ADcsmProvider" />
    <testcase name="dispatchesToTheHandlerProvidedByUser" status="run" time="0.001" classname="ADcsmProvider" />
    <testcase name="callsShowCallbackIfNewStateIsShown" status="run" time="0" classname="ADcsmProvider" />
    <testcase name="callsHideCallbackIfNewStateIsReadyAndWasShown" status="run" time="0" classname="ADcsmProvider" />
    <testcase name="callsReleaseCallbackIfNewStateIsAssignedAndWasShown" status="run" time="0" classname="ADcsmProvider" />
    <testcase name="callsReleaseCallbackIfNewStateIsAssignedAndWasReady" status="run" time="0" classname="ADcsmProvider" />
    <testcase name="callsStopOfferCallbackIfNewStateIsUnregisteredAndWasShown" status="run" time="0" classname="ADcsmProvider" />
    <testcase name="callsStopOfferCallbackIfNewStateIsUnregisteredAndWasReady" status="run" time="0" classname="ADcsmProvider" />
    <testcase name="callsStopOfferCallbackIfNewStateIsUnregisteredAndWasAssigned" status="run" time="0" classname="ADcsmProvider" />
    <testcase name="needsANewMarkReadyAfterContentHasBeenSetToAssigned" status="run" time="0.001" classname="ADcsmProvider" />
    <testcase name="needsANewMarkReadyAfterContentHasBeenSetToOffered" status="run" time="0" classname="ADcsmProvider" />
    <testcase name="allowsUserToCallMarkReadyWithinContentReleaseCallback" status="run" time="0" classname="ADcsmProvider" />
    <testcase name="doesNotCallSendContentReadyWhenContentHasBeenMarkedReadyButNotRequestedAfterUnreadying" status="run" time="0" classname="ADcsmProvider" />
    <testcase name="doesNotCallSendContentReadyWhenContentHasBeenMarkedReadyButNotRequestedAfterReassigning" status="run" time="0" classname="ADcsmProvider" />
    <testcase name="canUpdateContentMetadata" status="run" time="0" classname="ADcsmProvider" />
    <testcase name="updateContentMetadataFailsWithoutOffer" status="run" time="0" classname="ADcsmProvider" />
    <testcase name="updateContentMetadataFailsWhenSendUpdateContentMetadataFails" status="run" time="0" classname="ADcsmProvider" />
  </testsuite>
  <testsuite name="ADcsmProviderFromFramework" tests="6" failures="0" disabled="0" errors="0" time="0.002">
    <testcase name="canCreateAndDestroy" status="run" time="0.001" classname="ADcsmProviderFromFramework" />
    <testcase name="canCreateAndLetFrameworkDestroy" status="run" time="0" classname="ADcsmProviderFromFramework" />
    <testcase name="cannotCreateTwiceOnSameFramework" status="run" time="0" classname="ADcsmProviderFromFramework" />
    <testcase name="cannotDestroyProviderFromOtherFramework" status="run" time="0.001" classname="ADcsmProviderFromFramework" />
    <testcase name="canCreateAndDestroyProviderOnDifferentFrameworksSimultaneously" status="run" time="0" classname="ADcsmProviderFromFramework" />
    <testcase name="emptyDispatchSucceeds" status="run" time="0" classname="ADcsmProviderFromFramework" />
  </testsuite>
  <testsuite name="ADcsmSystem" tests="6" failures="0" disabled="0" errors="0" time="0.004">
    <testcase name="canDoAFullContentLifecycle" status="run" time="0.001" classname="ADcsmSystem" />
    <testcase name="canDoAFullContentLifecycleLateMarkReady" status="run" time="0.001" classname="ADcsmSystem" />
    <testcase name="allowsToAssignAndUnassignToSameContentRepeatedly" status="run" time="0" classname="ADcsmSystem" />
    <testcase name="allowsToRereadyTheSameContentRepeatedly" status="run" time="0.001" classname="ADcsmSystem" />
    <testcase name="canDoOfferWithMetadata" status="run" time="0.001" classname="ADcsmSystem" />
    <testcase name="canUpdateMetadataAfterOffer" status="run" time="0" classname="ADcsmSystem" />
  </testsuite>
  <testsuite name="ARamsesFrameworkConfig" tests="6" failures="0" disabled="0" errors="0" time="0">
    <testcase name="IsInitializedCorrectly" status="run" time="0" classname="ARamsesFrameworkConfig" />
    <testcase name="CanSetShellConsoleType" status="run" time="0" classname="ARamsesFrameworkConfig" />
    <testcase name="CanSetShellTypeNone" status="run" time="0" classname="ARamsesFrameworkConfig" />
    <testcase name="CanSetShellTypeDefault" status="run" time="0" classname="ARamsesFrameworkConfig" />
    <testcase name="CanEnableRamshFromCommandLine" status="run" time="0" classname="ARamsesFrameworkConfig" />
    <testcase name="TestSetandGetApplicationInformation" status="run" time="0" classname="ARamsesFrameworkConfig" />
  </testsuite>
  <testsuite name="ARamsesFrameworkImpl" tests="2" failures="0" disabled="0" errors="0" time="0.001">
    <testcase name="canCreateFrameworkImplFromDefaultConfig" status="run" time="0" classname="ARamsesFrameworkImpl" />
    <testcase name="defaultConfigGeneratesGuidNotStartingWithZeros" status="run" time="0.001" classname="ARamsesFrameworkImpl" />
  </testsuite>
  <testsuite name="AStatusObject" tests="4" failures="0" disabled="0" errors="0" time="0">
    <testcase name="allValidationLevelsContainObjectNames" status="run" time="0" classname="AStatusObject" />
    <testcase name="filteresValidationInfosCorrectly" status="run" time="0" classname="AStatusObject" />
    <testcase name="filteresValidationWarningsCorrectly" status="run" time="0" classname="AStatusObject" />
    <testcase name="filteresValidationErrorsCorrectly" status="run" time="0" classname="AStatusObject" />
  </testsuite>
  <testsuite name="AStronglyTypedValue" tests="28" failures="0" disabled="0" errors="0" time="0">
    <testcase name="CanBeCreatedWithDefaultValue" status="run" time="0" classname="AStronglyTypedValue" />
    <testcase name="ReturnsInvalidValueFromInvalid" status="run" time="0" classname="AStronglyTypedValue" />
    <testcase name="CanBeCreatedWithUInt32" status="run" time="0" classname="AStronglyTypedValue" />
    <testcase name="ReturnsCorrectUInt32Value" status="run" time="0" classname="AStronglyTypedValue" />
    <testcase name="ReturnsCorrectUInt32Reference" status="run" time="0" classname="AStronglyTypedValue" />
    <testcase name="ReturnedReferenceChangeEffectsValue_UInt32" status="run" time="0" classname="AStronglyTypedValue" />
    <testcase name="EqualsToOtherIfSameUInt32Value" status="run" time="0" classname="AStronglyTypedValue" />
    <testcase name="DoesNotEqualToOtherIfDifferentUInt32Value" status="run" time="0" classname="AStronglyTypedValue" />
    <testcase name="CanBeCopiedWithUInt32AsValue" status="run" time="0" classname="AStronglyTypedValue" />
    <testcase name="CanBeCopyAssignedWithUInt32AsValue" status="run" time="0" classname="AStronglyTypedValue" />
    <testcase name="canBeUsedWithPointer" status="run" time="0" classname="AStronglyTypedValue" />
    <testcase name="canBeUsedInStdHashContainerWithIntegral" status="run" time="0" classname="AStronglyTypedValue" />
    <testcase name="canBeUsedInStdHashContainerWithPointer" status="run" time="0" classname="AStronglyTypedValue" />
    <testcase name="canBeCheckedForValid" status="run" time="0" classname="AStronglyTypedValue" />
    <testcase name="CanBeCreatedWithDefaultValue" status="run" time="0" classname="AStronglyTypedValue" />
    <testcase name="ReturnsInvalidValueFromInvalid" status="run" time="0" classname="AStronglyTypedValue" />
    <testcase name="CanBeCreatedWithUInt32" status="run" time="0" classname="AStronglyTypedValue" />
    <testcase name="ReturnsCorrectUInt32Value" status="run" time="0" classname="AStronglyTypedValue" />
    <testcase name="ReturnsCorrectUInt32Reference" status="run" time="0" classname="AStronglyTypedValue" />
    <testcase name="ReturnedReferenceChangeEffectsValue_UInt32" status="run" time="0" classname="AStronglyTypedValue" />
    <testcase name="EqualsToOtherIfSameUInt32Value" status="run" time="0" classname="AStronglyTypedValue" />
    <testcase name="DoesNotEqualToOtherIfDifferentUInt32Value" status="run" time="0" classname="AStronglyTypedValue" />
    <testcase name="CanBeCopiedWithUInt32AsValue" status="run" time="0" classname="AStronglyTypedValue" />
    <testcase name="CanBeCopyAssignedWithUInt32AsValue" status="run" time="0" classname="AStronglyTypedValue" />
    <testcase name="canBeUsedWithPointer" status="run" time="0" classname="AStronglyTypedValue" />
    <testcase name="canBeUsedInStdHashContainerWithIntegral" status="run" time="0" classname="AStronglyTypedValue" />
    <testcase name="canBeUsedInStdHashContainerWithPointer" status="run" time="0" classname="AStronglyTypedValue" />
    <testcase name="canBeCheckedForValid" status="run" time="0" classname="AStronglyTypedValue" />
  </testsuite>
  <testsuite name="ACameraMatrixHelper" tests="2" failures="0" disabled="0" errors="0" time="0">
    <testcase name="ComputesProjectionMatrix" status="run" time="0" classname="ACameraMatrixHelper" />
    <testcase name="ComputesOrthographicMatrix" status="run" time="0" classname="ACameraMatrixHelper" />
  </testsuite>
  <testsuite name="APerspectiveProjectionMatrix" tests="1" failures="0" disabled="0" errors="0" time="0">
    <testcase name="ProjectsPointsCloserToViewerFartherFromCenterInNormalizedDeviceSpace" status="run" time="0" classname="APerspectiveProjectionMatrix" />
  </testsuite>
  <testsuite name="AOrthographicProjectionMatrix" tests="1" failures="0" disabled="0" errors="0" time="0">
    <testcase name="ProjectsPointsWithDifferentDepthToTheSamePixelInNormalizedDeviceSpace" status="run" time="0" classname="AOrthographicProjectionMatrix" />
  </testsuite>
  <testsuite name="Matrix22fTest" tests="12" failures="0" disabled="0" errors="0" time="0">
    <testcase name="DefaultConstructor" status="run" time="0" classname="Matrix22fTest" />
    <testcase name="CopyConstructor" status="run" time="0" classname="Matrix22fTest" />
    <testcase name="ValueConstructor" status="run" time="0" classname="Matrix22fTest" />
    <testcase name="VectorConstructor" status="run" time="0" classname="Matrix22fTest" />
    <testcase name="IdentityMatrix" status="run" time="0" classname="Matrix22fTest" />
    <testcase name="EmptyMatrix" status="run" time="0" classname="Matrix22fTest" />
    <testcase name="MatrixMultiplication" status="run" time="0" classname="Matrix22fTest" />
    <testcase name="MatrixMultiplicationAndAssign" status="run" time="0" classname="Matrix22fTest" />
    <testcase name="Equality" status="run" time="0" classname="Matrix22fTest" />
    <testcase name="UnEquality" status="run" time="0" classname="Matrix22fTest" />
    <testcase name="SetSingleValues" status="run" time="0" classname="Matrix22fTest" />
    <testcase name="SetValues" status="run" time="0" classname="Matrix22fTest" />
  </testsuite>
  <testsuite name="Matrix33fTest" tests="12" failures="0" disabled="0" errors="0" time="0">
    <testcase name="DefaultConstructor" status="run" time="0" classname="Matrix33fTest" />
    <testcase name="CopyConstructor" status="run" time="0" classname="Matrix33fTest" />
    <testcase name="ValueConstructor" status="run" time="0" classname="Matrix33fTest" />
    <testcase name="VectorConstructor" status="run" time="0" classname="Matrix33fTest" />
    <testcase name="IdentityMatrix" status="run" time="0" classname="Matrix33fTest" />
    <testcase name="EmptyMatrix" status="run" time="0" classname="Matrix33fTest" />
    <testcase name="MatrixMultiplication" status="run" time="0" classname="Matrix33fTest" />
    <testcase name="MatrixMultiplicationAndAssign" status="run" time="0" classname="Matrix33fTest" />
    <testcase name="Equality" status="run" time="0" classname="Matrix33fTest" />
    <testcase name="UnEquality" status="run" time="0" classname="Matrix33fTest" />
    <testcase name="SetSingleValues" status="run" time="0" classname="Matrix33fTest" />
    <testcase name="SetValues" status="run" time="0" classname="Matrix33fTest" />
  </testsuite>
  <testsuite name="Matrix44Test" tests="24" failures="0" disabled="0" errors="0" time="0.001">
    <testcase name="DefaultConstructor" status="run" time="0.001" classname="Matrix44Test" />
    <testcase name="CopyConstructor" status="run" time="0" classname="Matrix44Test" />
    <testcase name="ValueConstructor" status="run" time="0" classname="Matrix44Test" />
    <testcase name="ValueArrayConstructor" status="run" time="0" classname="Matrix44Test" />
    <testcase name="VectorConstructor" status="run" time="0" classname="Matrix44Test" />
    <testcase name="IdentityMatrix" status="run" time="0" classname="Matrix44Test" />
    <testcase name="EulerRotationMatrixZYX" status="run" time="0" classname="Matrix44Test" />
    <testcase name="EulerRotationXMatrixZYX" status="run" time="0" classname="Matrix44Test" />
    <testcase name="EulerRotationYMatrixZYX" status="run" time="0" classname="Matrix44Test" />
    <testcase name="EulerRotationZMatrixZYX" status="run" time="0" classname="Matrix44Test" />
    <testcase name="EmptyMatrix" status="run" time="0" classname="Matrix44Test" />
    <testcase name="VectorMultiplication" status="run" time="0" classname="Matrix44Test" />
    <testcase name="MatrixMultiplication" status="run" time="0" classname="Matrix44Test" />
    <testcase name="MatrixMultiplicationAndAssign" status="run" time="0" classname="Matrix44Test" />
    <testcase name="Equality" status="run" time="0" classname="Matrix44Test" />
    <testcase name="UnEquality" status="run" time="0" classname="Matrix44Test" />
    <testcase name="Transpose" status="run" time="0" classname="Matrix44Test" />
    <testcase name="SetSingleValues" status="run" time="0" classname="Matrix44Test" />
    <testcase name="SetValues" status="run" time="0" classname="Matrix44Test" />
    <testcase name="AccessByIndex" status="run" time="0" classname="Matrix44Test" />
    <testcase name="Determinant" status="run" time="0" classname="Matrix44Test" />
    <testcase name="Inverse" status="run" time="0" classname="Matrix44Test" />
    <testcase name="GetScalingMatrix" status="run" time="0" classname="Matrix44Test" />
    <testcase name="RotateUsingMatrix44ZYX" status="run" time="0" classname="Matrix44Test" />
  </testsuite>
  <testsuite name="AProjectionParams" tests="12" failures="0" disabled="0" errors="0" time="0">
    <testcase name="EqualsToSimilarPerspectiveProjParams" status="run" time="0" classname="AProjectionParams" />
    <testcase name="EqualsToSimilarOrthographicProjParams" status="run" time="0" classname="AProjectionParams" />
    <testcase name="PerspectiveDoesNotEqualOrthographicWithSameCalculatedPlaneValues" status="run" time="0" classname="AProjectionParams" />
    <testcase name="PerspectiveDoesNotEqualOrthographicWithSamePlaneValues" status="run" time="0" classname="AProjectionParams" />
    <testcase name="CanBeConstructedFromOrthographicParameters" status="run" time="0" classname="AProjectionParams" />
    <testcase name="CanUpdateOrthographicParameters" status="run" time="0" classname="AProjectionParams" />
    <testcase name="CanBeConstructedFromPerspectiveParameters" status="run" time="0" classname="AProjectionParams" />
    <testcase name="CanUpdateAspectRatioOnPerspectiveProjection" status="run" time="0" classname="AProjectionParams" />
    <testcase name="CanUpdateFovYOnPerspectiveProjection" status="run" time="0" classname="AProjectionParams" />
    <testcase name="GetFovYOnNonSymmectricPerspectiveProjection" status="run" time="0" classname="AProjectionParams" />
    <testcase name="GetAspectRatioOnOrthographicProjection" status="run" time="0" classname="AProjectionParams" />
    <testcase name="GetAspectRatioOnUnsymmetricPerspectiveProjection" status="run" time="0" classname="AProjectionParams" />
  </testsuite>
  <testsuite name="QuadTest" tests="10" failures="0" disabled="0" errors="0" time="0">
    <testcase name="CanCreateQuad_DefaultConstructor" status="run" time="0" classname="QuadTest" />
    <testcase name="CanCreateQuad_AllParamsSet" status="run" time="0" classname="QuadTest" />
    <testcase name="CanCompareQuads" status="run" time="0" classname="QuadTest" />
    <testcase name="CanGetArea" status="run" time="0" classname="QuadTest" />
    <testcase name="CanGetBoundingQuad_EmptyQuad" status="run" time="0" classname="QuadTest" />
    <testcase name="CanGetBoundingQuad_ZeroWidth" status="run" time="0" classname="QuadTest" />
    <testcase name="CanGetBoundingQuad_ZeroHeight" status="run" time="0" classname="QuadTest" />
    <testcase name="CanGetBoundingQuad_OneInsideOther" status="run" time="0" classname="QuadTest" />
    <testcase name="CanGetBoundingQuad_OverlappingQuads" status="run" time="0" classname="QuadTest" />
    <testcase name="CanGetBoundingQuad_NonOverlappingQuads" status="run" time="0" classname="QuadTest" />
  </testsuite>
  <testsuite name="Vector2Test" tests="23" failures="0" disabled="0" errors="0" time="0.001">
    <testcase name="DefaultConstructor" status="run" time="0" classname="Vector2Test" />
    <testcase name="CopyConstructor" status="run" time="0" classname="Vector2Test" />
    <testcase name="ValueConstructor" status="run" time="0" classname="Vector2Test" />
    <testcase name="ScalarValueConstructor" status="run" time="0" classname="Vector2Test" />
    <testcase name="AssignmentOperator" status="run" time="0" classname="Vector2Test" />
    <testcase name="AddOperator" status="run" time="0" classname="Vector2Test" />
    <testcase name="AddAssignOperator" status="run" time="0" classname="Vector2Test" />
    <testcase name="SubOperator" status="run" time="0" classname="Vector2Test" />
    <testcase name="SubAssignOperator" status="run" time="0" classname="Vector2Test" />
    <testcase name="MulOperator" status="run" time="0" classname="Vector2Test" />
    <testcase name="MulFriendOperator" status="run" time="0" classname="Vector2Test" />
    <testcase name="MulAssignOperator" status="run" time="0" classname="Vector2Test" />
    <testcase name="MulVector" status="run" time="0" classname="Vector2Test" />
    <testcase name="MulAssignVector" status="run" time="0" classname="Vector2Test" />
    <testcase name="Dot" status="run" time="0" classname="Vector2Test" />
    <testcase name="Length" status="run" time="0" classname="Vector2Test" />
    <testcase name="Angle" status="run" time="0" classname="Vector2Test" />
    <testcase name="Equality" status="run" time="0" classname="Vector2Test" />
    <testcase name="UnEquality" status="run" time="0" classname="Vector2Test" />
    <testcase name="Empty" status="run" time="0" classname="Vector2Test" />
    <testcase name="SetSingleValues" status="run" time="0" classname="Vector2Test" />
    <testcase name="SetAllValues" status="run" time="0" classname="Vector2Test" />
    <testcase name="Normalize" status="run" time="0" classname="Vector2Test" />
  </testsuite>
  <testsuite name="Vector2iTest" tests="22" failures="0" disabled="0" errors="0" time="0">
    <testcase name="DefaultConstructor" status="run" time="0" classname="Vector2iTest" />
    <testcase name="CopyConstructor" status="run" time="0" classname="Vector2iTest" />
    <testcase name="ValueConstructor" status="run" time="0" classname="Vector2iTest" />
    <testcase name="ScalarValueConstructor" status="run" time="0" classname="Vector2iTest" />
    <testcase name="AssignmentOperator" status="run" time="0" classname="Vector2iTest" />
    <testcase name="AddOperator" status="run" time="0" classname="Vector2iTest" />
    <testcase name="AddAssignOperator" status="run" time="0" classname="Vector2iTest" />
    <testcase name="SubOperator" status="run" time="0" classname="Vector2iTest" />
    <testcase name="SubAssignOperator" status="run" time="0" classname="Vector2iTest" />
    <testcase name="MulOperator" status="run" time="0" classname="Vector2iTest" />
    <testcase name="MulFriendOperator" status="run" time="0" classname="Vector2iTest" />
    <testcase name="MulAssignOperator" status="run" time="0" classname="Vector2iTest" />
    <testcase name="MulVector" status="run" time="0" classname="Vector2iTest" />
    <testcase name="MulAssignVector" status="run" time="0" classname="Vector2iTest" />
    <testcase name="Dot" status="run" time="0" classname="Vector2iTest" />
    <testcase name="Length" status="run" time="0" classname="Vector2iTest" />
    <testcase name="Angle" status="run" time="0" classname="Vector2iTest" />
    <testcase name="Equality" status="run" time="0" classname="Vector2iTest" />
    <testcase name="UnEquality" status="run" time="0" classname="Vector2iTest" />
    <testcase name="Empty" status="run" time="0" classname="Vector2iTest" />
    <testcase name="SetSingleValues" status="run" time="0" classname="Vector2iTest" />
    <testcase name="SetAllValues" status="run" time="0" classname="Vector2iTest" />
  </testsuite>
  <testsuite name="Vector3Test" tests="25" failures="0" disabled="0" errors="0" time="0">
    <testcase name="DefaultConstructor" status="run" time="0" classname="Vector3Test" />
    <testcase name="CopyConstructor" status="run" time="0" classname="Vector3Test" />
    <testcase name="ValueConstructor" status="run" time="0" classname="Vector3Test" />
    <testcase name="ScalarValueConstructor" status="run" time="0" classname="Vector3Test" />
    <testcase name="ConstructorFromvector4" status="run" time="0" classname="Vector3Test" />
    <testcase name="AssignmentOperator" status="run" time="0" classname="Vector3Test" />
    <testcase name="AddOperator" status="run" time="0" classname="Vector3Test" />
    <testcase name="AddAssignOperator" status="run" time="0" classname="Vector3Test" />
    <testcase name="SubOperator" status="run" time="0" classname="Vector3Test" />
    <testcase name="SubAssignOperator" status="run" time="0" classname="Vector3Test" />
    <testcase name="MulOperator" status="run" time="0" classname="Vector3Test" />
    <testcase name="MulFriendOperator" status="run" time="0" classname="Vector3Test" />
    <testcase name="MulAssignOperator" status="run" time="0" classname="Vector3Test" />
    <testcase name="MulVector" status="run" time="0" classname="Vector3Test" />
    <testcase name="MulAssignVector" status="run" time="0" classname="Vector3Test" />
    <testcase name="Dot" status="run" time="0" classname="Vector3Test" />
    <testcase name="Cross" status="run" time="0" classname="Vector3Test" />
    <testcase name="Length" status="run" time="0" classname="Vector3Test" />
    <testcase name="Angle" status="run" time="0" classname="Vector3Test" />
    <testcase name="Equality" status="run" time="0" classname="Vector3Test" />
    <testcase name="UnEquality" status="run" time="0" classname="Vector3Test" />
    <testcase name="Empty" status="run" time="0" classname="Vector3Test" />
    <testcase name="SetSingleValues" status="run" time="0" classname="Vector3Test" />
    <testcase name="SetAllValues" status="run" time="0" classname="Vector3Test" />
    <testcase name="Normalize" status="run" time="0" classname="Vector3Test" />
  </testsuite>
  <testsuite name="Vector3iTest" tests="23" failures="0" disabled="0" errors="0" time="0">
    <testcase name="DefaultConstructor" status="run" time="0" classname="Vector3iTest" />
    <testcase name="CopyConstructor" status="run" time="0" classname="Vector3iTest" />
    <testcase name="ValueConstructor" status="run" time="0" classname="Vector3iTest" />
    <testcase name="ScalarValueConstructor" status="run" time="0" classname="Vector3iTest" />
    <testcase name="AssignmentOperator" status="run" time="0" classname="Vector3iTest" />
    <testcase name="AddOperator" status="run" time="0" classname="Vector3iTest" />
    <testcase name="AddAssignOperator" status="run" time="0" classname="Vector3iTest" />
    <testcase name="SubOperator" status="run" time="0" classname="Vector3iTest" />
    <testcase name="SubAssignOperator" status="run" time="0" classname="Vector3iTest" />
    <testcase name="MulOperator" status="run" time="0" classname="Vector3iTest" />
    <testcase name="MulFriendOperator" status="run" time="0" classname="Vector3iTest" />
    <testcase name="MulAssignOperator" status="run" time="0" classname="Vector3iTest" />
    <testcase name="MulVector" status="run" time="0" classname="Vector3iTest" />
    <testcase name="MulAssignVector" status="run" time="0" classname="Vector3iTest" />
    <testcase name="Dot" status="run" time="0" classname="Vector3iTest" />
    <testcase name="Cross" status="run" time="0" classname="Vector3iTest" />
    <testcase name="Length" status="run" time="0" classname="Vector3iTest" />
    <testcase name="Angle" status="run" time="0" classname="Vector3iTest" />
    <testcase name="Equality" status="run" time="0" classname="Vector3iTest" />
    <testcase name="UnEquality" status="run" time="0" classname="Vector3iTest" />
    <testcase name="Empty" status="run" time="0" classname="Vector3iTest" />
    <testcase name="SetSingleValues" status="run" time="0" classname="Vector3iTest" />
    <testcase name="SetAllValues" status="run" time="0" classname="Vector3iTest" />
  </testsuite>
  <testsuite name="Vector4Test" tests="25" failures="0" disabled="0" errors="0" time="0.001">
    <testcase name="DefaultConstructor" status="run" time="0" classname="Vector4Test" />
    <testcase name="CopyConstructor" status="run" time="0" classname="Vector4Test" />
    <testcase name="ValueConstructor" status="run" time="0" classname="Vector4Test" />
    <testcase name="ScalarValueConstructor" status="run" time="0" classname="Vector4Test" />
    <testcase name="AssignmentOperator" status="run" time="0" classname="Vector4Test" />
    <testcase name="AddOperator" status="run" time="0" classname="Vector4Test" />
    <testcase name="AddAssignOperator" status="run" time="0" classname="Vector4Test" />
    <testcase name="SubOperator" status="run" time="0" classname="Vector4Test" />
    <testcase name="SubAssignOperator" status="run" time="0" classname="Vector4Test" />
    <testcase name="MulOperator" status="run" time="0" classname="Vector4Test" />
    <testcase name="DivOperator" status="run" time="0" classname="Vector4Test" />
    <testcase name="MulFriendOperator" status="run" time="0" classname="Vector4Test" />
    <testcase name="MulAssignOperator" status="run" time="0" classname="Vector4Test" />
    <testcase name="MulVector" status="run" time="0" classname="Vector4Test" />
    <testcase name="MulAssignVector" status="run" time="0" classname="Vector4Test" />
    <testcase name="DivAssignVectorByScalar" status="run" time="0" classname="Vector4Test" />
    <testcase name="Equality" status="run" time="0" classname="Vector4Test" />
    <testcase name="UnEquality" status="run" time="0" classname="Vector4Test" />
    <testcase name="Dot" status="run" time="0" classname="Vector4Test" />
    <testcase name="Cross" status="run" time="0" classname="Vector4Test" />
    <testcase name="Length" status="run" time="0" classname="Vector4Test" />
    <testcase name="Angle" status="run" time="0" classname="Vector4Test" />
    <testcase name="Empty" status="run" time="0" classname="Vector4Test" />
    <testcase name="SetSingleValues" status="run" time="0" classname="Vector4Test" />
    <testcase name="SetAllValues" status="run" time="0" classname="Vector4Test" />
  </testsuite>
  <testsuite name="Vector4iTest" tests="23" failures="0" disabled="0" errors="0" time="0">
    <testcase name="DefaultConstructor" status="run" time="0" classname="Vector4iTest" />
    <testcase name="CopyConstructor" status="run" time="0" classname="Vector4iTest" />
    <testcase name="ValueConstructor" status="run" time="0" classname="Vector4iTest" />
    <testcase name="ScalarValueConstructor" status="run" time="0" classname="Vector4iTest" />
    <testcase name="AssignmentOperator" status="run" time="0" classname="Vector4iTest" />
    <testcase name="AddOperator" status="run" time="0" classname="Vector4iTest" />
    <testcase name="AddAssignOperator" status="run" time="0" classname="Vector4iTest" />
    <testcase name="SubOperator" status="run" time="0" classname="Vector4iTest" />
    <testcase name="SubAssignOperator" status="run" time="0" classname="Vector4iTest" />
    <testcase name="MulOperator" status="run" time="0" classname="Vector4iTest" />
    <testcase name="MulFriendOperator" status="run" time="0" classname="Vector4iTest" />
    <testcase name="MulAssignOperator" status="run" time="0" classname="Vector4iTest" />
    <testcase name="MulVector" status="run" time="0" classname="Vector4iTest" />
    <testcase name="MulAssignVector" status="run" time="0" classname="Vector4iTest" />
    <testcase name="Equality" status="run" time="0" classname="Vector4iTest" />
    <testcase name="UnEquality" status="run" time="0" classname="Vector4iTest" />
    <testcase name="Dot" status="run" time="0" classname="Vector4iTest" />
    <testcase name="Cross" status="run" time="0" classname="Vector4iTest" />
    <testcase name="Length" status="run" time="0" classname="Vector4iTest" />
    <testcase name="Angle" status="run" time="0" classname="Vector4iTest" />
    <testcase name="Empty" status="run" time="0" classname="Vector4iTest" />
    <testcase name="SetSingleValues" status="run" time="0" classname="Vector4iTest" />
    <testcase name="SetAllValues" status="run" time="0" classname="Vector4iTest" />
  </testsuite>
  <testsuite name="BinaryFileInputStreamTest" tests="3" failures="0" disabled="0" errors="0" time="0">
    <testcase name="ReadSomeData" status="run" time="0" classname="BinaryFileInputStreamTest" />
    <testcase name="BadFileObj" status="run" time="0" classname="BinaryFileInputStreamTest" />
    <testcase name="Matrix44f" status="run" time="0" classname="BinaryFileInputStreamTest" />
  </testsuite>
  <testsuite name="BinaryFileOutputStreamTest" tests="3" failures="0" disabled="0" errors="0" time="0">
    <testcase name="WriteSomeData" status="run" time="0" classname="BinaryFileOutputStreamTest" />
    <testcase name="BadFileObj" status="run" time="0" classname="BinaryFileOutputStreamTest" />
    <testcase name="Matrix44f" status="run" time="0" classname="BinaryFileOutputStreamTest" />
  </testsuite>
  <testsuite name="BinaryInputStreamTest" tests="15" failures="0" disabled="0" errors="0" time="0">
    <testcase name="ReadInt32Value" status="run" time="0" classname="BinaryInputStreamTest" />
    <testcase name="ReadUInt32Value" status="run" time="0" classname="BinaryInputStreamTest" />
    <testcase name="ReadInt64Value" status="run" time="0" classname="BinaryInputStreamTest" />
    <testcase name="ReadUInt64Value" status="run" time="0" classname="BinaryInputStreamTest" />
    <testcase name="ReadUInt16Value" status="run" time="0" classname="BinaryInputStreamTest" />
    <testcase name="ReadStringValue" status="run" time="0" classname="BinaryInputStreamTest" />
    <testcase name="ReadEmptyStringValue" status="run" time="0" classname="BinaryInputStreamTest" />
    <testcase name="ReadBoolValue" status="run" time="0" classname="BinaryInputStreamTest" />
    <testcase name="ReadFloatValue" status="run" time="0" classname="BinaryInputStreamTest" />
    <testcase name="ReadMultipleData" status="run" time="0" classname="BinaryInputStreamTest" />
    <testcase name="Matrix44f" status="run" time="0" classname="BinaryInputStreamTest" />
    <testcase name="ReadStronglyTypedEnum" status="run" time="0" classname="BinaryInputStreamTest" />
    <testcase name="GetReadPosition" status="run" time="0" classname="BinaryInputStreamTest" />
    <testcase name="CanSkipForward" status="run" time="0" classname="BinaryInputStreamTest" />
    <testcase name="CanSkipBackward" status="run" time="0" classname="BinaryInputStreamTest" />
  </testsuite>
  <testsuite name="BinaryOutputStreamTest" tests="15" failures="0" disabled="0" errors="0" time="0">
    <testcase name="Constructor" status="run" time="0" classname="BinaryOutputStreamTest" />
    <testcase name="ConstructorWithCapacity" status="run" time="0" classname="BinaryOutputStreamTest" />
    <testcase name="InsertUInt16" status="run" time="0" classname="BinaryOutputStreamTest" />
    <testcase name="InsertBool" status="run" time="0" classname="BinaryOutputStreamTest" />
    <testcase name="InsertInt" status="run" time="0" classname="BinaryOutputStreamTest" />
    <testcase name="InsertUInt" status="run" time="0" classname="BinaryOutputStreamTest" />
    <testcase name="InsertInt64" status="run" time="0" classname="BinaryOutputStreamTest" />
    <testcase name="InsertUInt64" status="run" time="0" classname="BinaryOutputStreamTest" />
    <testcase name="InsertFloat" status="run" time="0" classname="BinaryOutputStreamTest" />
    <testcase name="InsertGuid" status="run" time="0" classname="BinaryOutputStreamTest" />
    <testcase name="InsertMultipleData" status="run" time="0" classname="BinaryOutputStreamTest" />
    <testcase name="InsertString" status="run" time="0" classname="BinaryOutputStreamTest" />
    <testcase name="Matrix44f" status="run" time="0" classname="BinaryOutputStreamTest" />
    <testcase name="InserStronglyTypedEnum" status="run" time="0" classname="BinaryOutputStreamTest" />
    <testcase name="Release" status="run" time="0" classname="BinaryOutputStreamTest" />
  </testsuite>
  <testsuite name="CommandLineParserTest" tests="32" failures="0" disabled="0" errors="0" time="0.001">
    <testcase name="NoArguments" status="run" time="0" classname="CommandLineParserTest" />
    <testcase name="GetProgramName" status="run" time="0" classname="CommandLineParserTest" />
    <testcase name="shortStringArg" status="run" time="0" classname="CommandLineParserTest" />
    <testcase name="stripsWhiteSpacesFromArgumentsWithDashPrefix" status="run" time="0" classname="CommandLineParserTest" />
    <testcase name="doesNotTrimArgumentsWithQuotes" status="run" time="0" classname="CommandLineParserTest" />
    <testcase name="LongStringArg" status="run" time="0" classname="CommandLineParserTest" />
    <testcase name="BoolSwitchArguments" status="run" time="0" classname="CommandLineParserTest" />
    <testcase name="onlyFileTarget" status="run" time="0" classname="CommandLineParserTest" />
    <testcase name="fileTargetAtTheEnd" status="run" time="0" classname="CommandLineParserTest" />
    <testcase name="multipleFileTargets" status="run" time="0" classname="CommandLineParserTest" />
    <testcase name="BoolOptionFollowedByFile" status="run" time="0" classname="CommandLineParserTest" />
    <testcase name="BoolOption" status="run" time="0" classname="CommandLineParserTest" />
    <testcase name="MixedArgumentsAndFileTargets" status="run" time="0" classname="CommandLineParserTest" />
    <testcase name="NegativeFloatArguments" status="run" time="0" classname="CommandLineParserTest" />
    <testcase name="IntegerArguments" status="run" time="0" classname="CommandLineParserTest" />
    <testcase name="UInt16Arguments" status="run" time="0" classname="CommandLineParserTest" />
    <testcase name="UInt32Arguments" status="run" time="0" classname="CommandLineParserTest" />
    <testcase name="Vec3Arguments" status="run" time="0" classname="CommandLineParserTest" />
    <testcase name="DelayedParsingArgumentBool" status="run" time="0" classname="CommandLineParserTest" />
    <testcase name="DelayedParsingArgumentString" status="run" time="0" classname="CommandLineParserTest" />
    <testcase name="DelayedParsingArgumentFloat" status="run" time="0" classname="CommandLineParserTest" />
    <testcase name="DelayedParsingArgumentInt32" status="run" time="0" classname="CommandLineParserTest" />
    <testcase name="DelayedParsingArgumentUInt16" status="run" time="0" classname="CommandLineParserTest" />
    <testcase name="DelayedParsingArgumentUInt32" status="run" time="0" classname="CommandLineParserTest" />
    <testcase name="OptionCanBeSetSeveralTimes" status="run" time="0" classname="CommandLineParserTest" />
    <testcase name="OptionCanParsedSeveralTimes" status="run" time="0" classname="CommandLineParserTest" />
    <testcase name="OptionCanBeSetSeveralTimes_DoesNotChangeValueIfNoMoreCanBeFound" status="run" time="0" classname="CommandLineParserTest" />
    <testcase name="OptionCanBeSetSeveralTimes_BoolOptionIsSetToTrue" status="run" time="0" classname="CommandLineParserTest" />
    <testcase name="OptionCanBeSetSeveralTimes_WithouMixingOptions" status="run" time="0" classname="CommandLineParserTest" />
    <testcase name="OptionCanBeSetSeveralTimes_WithMixingOptions" status="run" time="0" classname="CommandLineParserTest" />
    <testcase name="OptionCanBeSetSeveralTimes_WithMixingOptions_AccessInDifferentOrder" status="run" time="0" classname="CommandLineParserTest" />
    <testcase name="OptionCanBeSetSeveralTimes_IgnoresErroneousOptionsWithNoValueSet" status="run" time="0" classname="CommandLineParserTest" />
  </testsuite>
  <testsuite name="CommandLineArgumentsTest" tests="2" failures="0" disabled="0" errors="0" time="0">
    <testcase name="ArgumentProvidesGetHelpStringMethod" status="run" time="0" classname="CommandLineArgumentsTest" />
    <testcase name="ArgumentBoolProvidesGetHelpStringMethod" status="run" time="0" classname="CommandLineArgumentsTest" />
  </testsuite>
  <testsuite name="AnImage" tests="19" failures="0" disabled="0" errors="0" time="0.001">
    <testcase name="canGetResolution" status="run" time="0" classname="AnImage" />
    <testcase name="canSaveAndLoadPNG" status="run" time="0.001" classname="AnImage" />
    <testcase name="ReportsTheSumOfAllItsPixels" status="run" time="0" classname="AnImage" />
    <testcase name="CanBeSubtractedFromOtherBitmapWithSameSize" status="run" time="0" classname="AnImage" />
    <testcase name="YieldsBlackImageWhenSubtractedFromItself" status="run" time="0" classname="AnImage" />
    <testcase name="GivesEmptyImageIfEnlargingToSmallerSize" status="run" time="0" classname="AnImage" />
    <testcase name="GivesImageCopyIfEnlargingToSameSize" status="run" time="0" classname="AnImage" />
    <testcase name="CreatesEnlargedImageContainingOriginalAndRestFilledWithGivenValue_extendedWidth" status="run" time="0" classname="AnImage" />
    <testcase name="CreatesEnlargedImageContainingOriginalAndRestFilledWithGivenValue_extendedHeight" status="run" time="0" classname="AnImage" />
    <testcase name="CreatesEnlargedImageContainingOriginalAndRestFilledWithGivenValue_extendedWidthAndHeight" status="run" time="0" classname="AnImage" />
    <testcase name="CopyConstructedBitmapIsSame" status="run" time="0" classname="AnImage" />
    <testcase name="AssignedBitmapIsSame" status="run" time="0" classname="AnImage" />
    <testcase name="MoveAssignedBitmapIsSame" status="run" time="0" classname="AnImage" />
    <testcase name="UnequalSizeBitmapsAreDifferent" status="run" time="0" classname="AnImage" />
    <testcase name="FlipsImage2x1" status="run" time="0" classname="AnImage" />
    <testcase name="FlipsImage2x2" status="run" time="0" classname="AnImage" />
    <testcase name="FlipsImage2x3" status="run" time="0" classname="AnImage" />
    <testcase name="FlipsImage4x4" status="run" time="0" classname="AnImage" />
    <testcase name="getsNumOfNonBlackPixels" status="run" time="0" classname="AnImage" />
  </testsuite>
  <testsuite name="AInplaceStringTokenizer" tests="8" failures="0" disabled="0" errors="0" time="0">
    <testcase name="CanHandleEmptyString" status="run" time="0" classname="AInplaceStringTokenizer" />
    <testcase name="ReturnsOneStringWhenFits" status="run" time="0" classname="AInplaceStringTokenizer" />
    <testcase name="SplitsBasedOnLengthOnly" status="run" time="0" classname="AInplaceStringTokenizer" />
    <testcase name="SplitsBasedOnLengthWhenLastExactlyFits" status="run" time="0" classname="AInplaceStringTokenizer" />
    <testcase name="SplitsBasedOnSeparator" status="run" time="0" classname="AInplaceStringTokenizer" />
    <testcase name="SplitsBasedOnSeparatorWhenLastExactlyFits" status="run" time="0" classname="AInplaceStringTokenizer" />
    <testcase name="SkipsSeparatorInLastPosition" status="run" time="0" classname="AInplaceStringTokenizer" />
    <testcase name="SplitsOnMixedLengthAndSeparator" status="run" time="0" classname="AInplaceStringTokenizer" />
  </testsuite>
  <testsuite name="ALogHelper_StringToLogLevel" tests="4" failures="0" disabled="0" errors="0" time="0">
    <testcase name="GivesCorrectLevels" status="run" time="0" classname="ALogHelper_StringToLogLevel" />
    <testcase name="IgnoresCase" status="run" time="0" classname="ALogHelper_StringToLogLevel" />
    <testcase name="TrimsString" status="run" time="0" classname="ALogHelper_StringToLogLevel" />
    <testcase name="ReturnFalseOnInvalidLogLevels" status="run" time="0" classname="ALogHelper_StringToLogLevel" />
  </testsuite>
  <testsuite name="ALogHelper_ParseContextFilters" tests="6" failures="0" disabled="0" errors="0" time="0">
    <testcase name="canExtractSingleCommandCorrectly" status="run" time="0" classname="ALogHelper_ParseContextFilters" />
    <testcase name="canExtractMultipleCommandsCorrectly" status="run" time="0" classname="ALogHelper_ParseContextFilters" />
    <testcase name="canHandleDescriptiveLoglevelNames" status="run" time="0" classname="ALogHelper_ParseContextFilters" />
    <testcase name="skipsUnknownLogLevelStrings" status="run" time="0" classname="ALogHelper_ParseContextFilters" />
    <testcase name="canExtractCommandCorrectlyWhenPassedZeroString" status="run" time="0" classname="ALogHelper_ParseContextFilters" />
    <testcase name="canExtractCommandCorrectlyWhenPassedCurruptString" status="run" time="0" classname="ALogHelper_ParseContextFilters" />
  </testsuite>
  <testsuite name="ALogHelper_GetLoglevelFromInt" tests="2" failures="0" disabled="0" errors="0" time="0">
    <testcase name="WorksForAllDirectlyMappableValues" status="run" time="0" classname="ALogHelper_GetLoglevelFromInt" />
    <testcase name="ReturnsTraceForAllUnknownValues" status="run" time="0" classname="ALogHelper_GetLoglevelFromInt" />
  </testsuite>
  <testsuite name="AMemoryPoolExplicit/0" tests="10" failures="0" disabled="0" errors="0" time="0">
    <testcase name="HasInitialSize" type_param="ramses_internal::MemoryPoolExplicit&lt;ramses_internal::ComparableObject, unsigned int&gt;" status="run" time="0" classname="AMemoryPoolExplicit/0" />
    <testcase name="ReportsUnallocatedObject" type_param="ramses_internal::MemoryPoolExplicit&lt;ramses_internal::ComparableObject, unsigned int&gt;" status="run" time="0" classname="AMemoryPoolExplicit/0" />
    <testcase name="AllocatedObjectIsReportedToBeAllocated" type_param="ramses_internal::MemoryPoolExplicit&lt;ramses_internal::ComparableObject, unsigned int&gt;" status="run" time="0" classname="AMemoryPoolExplicit/0" />
    <testcase name="AllocatingSpecificHandlesResultsInSameValidHandle" type_param="ramses_internal::MemoryPoolExplicit&lt;ramses_internal::ComparableObject, unsigned int&gt;" status="run" time="0" classname="AMemoryPoolExplicit/0" />
    <testcase name="AllocationWithSkippingHandlesResultsInUnallocatedHandlesInBetween" type_param="ramses_internal::MemoryPoolExplicit&lt;ramses_internal::ComparableObject, unsigned int&gt;" status="run" time="0" classname="AMemoryPoolExplicit/0" />
    <testcase name="DoesNotAffectOtherObjectsWhenDeletingObject" type_param="ramses_internal::MemoryPoolExplicit&lt;ramses_internal::ComparableObject, unsigned int&gt;" status="run" time="0" classname="AMemoryPoolExplicit/0" />
    <testcase name="AllocateUsingSpecificHandle" type_param="ramses_internal::MemoryPoolExplicit&lt;ramses_internal::ComparableObject, unsigned int&gt;" status="run" time="0" classname="AMemoryPoolExplicit/0" />
    <testcase name="CanAllocateFullCapacity" type_param="ramses_internal::MemoryPoolExplicit&lt;ramses_internal::ComparableObject, unsigned int&gt;" status="run" time="0" classname="AMemoryPoolExplicit/0" />
    <testcase name="preallocatesMemory" type_param="ramses_internal::MemoryPoolExplicit&lt;ramses_internal::ComparableObject, unsigned int&gt;" status="run" time="0" classname="AMemoryPoolExplicit/0" />
    <testcase name="neverShrinksOnPreallocation" type_param="ramses_internal::MemoryPoolExplicit&lt;ramses_internal::ComparableObject, unsigned int&gt;" status="run" time="0" classname="AMemoryPoolExplicit/0" />
  </testsuite>
  <testsuite name="AMemoryPoolExplicit/1" tests="10" failures="0" disabled="0" errors="0" time="0.001">
    <testcase name="HasInitialSize" type_param="ramses_internal::MemoryPoolExplicit&lt;ramses_internal::ComparableObject, unsigned short&gt;" status="run" time="0" classname="AMemoryPoolExplicit/1" />
    <testcase name="ReportsUnallocatedObject" type_param="ramses_internal::MemoryPoolExplicit&lt;ramses_internal::ComparableObject, unsigned short&gt;" status="run" time="0" classname="AMemoryPoolExplicit/1" />
    <testcase name="AllocatedObjectIsReportedToBeAllocated" type_param="ramses_internal::MemoryPoolExplicit&lt;ramses_internal::ComparableObject, unsigned short&gt;" status="run" time="0" classname="AMemoryPoolExplicit/1" />
    <testcase name="AllocatingSpecificHandlesResultsInSameValidHandle" type_param="ramses_internal::MemoryPoolExplicit&lt;ramses_internal::ComparableObject, unsigned short&gt;" status="run" time="0" classname="AMemoryPoolExplicit/1" />
    <testcase name="AllocationWithSkippingHandlesResultsInUnallocatedHandlesInBetween" type_param="ramses_internal::MemoryPoolExplicit&lt;ramses_internal::ComparableObject, unsigned short&gt;" status="run" time="0" classname="AMemoryPoolExplicit/1" />
    <testcase name="DoesNotAffectOtherObjectsWhenDeletingObject" type_param="ramses_internal::MemoryPoolExplicit&lt;ramses_internal::ComparableObject, unsigned short&gt;" status="run" time="0" classname="AMemoryPoolExplicit/1" />
    <testcase name="AllocateUsingSpecificHandle" type_param="ramses_internal::MemoryPoolExplicit&lt;ramses_internal::ComparableObject, unsigned short&gt;" status="run" time="0" classname="AMemoryPoolExplicit/1" />
    <testcase name="CanAllocateFullCapacity" type_param="ramses_internal::MemoryPoolExplicit&lt;ramses_internal::ComparableObject, unsigned short&gt;" status="run" time="0" classname="AMemoryPoolExplicit/1" />
    <testcase name="preallocatesMemory" type_param="ramses_internal::MemoryPoolExplicit&lt;ramses_internal::ComparableObject, unsigned short&gt;" status="run" time="0" classname="AMemoryPoolExplicit/1" />
    <testcase name="neverShrinksOnPreallocation" type_param="ramses_internal::MemoryPoolExplicit&lt;ramses_internal::ComparableObject, unsigned short&gt;" status="run" time="0" classname="AMemoryPoolExplicit/1" />
  </testsuite>
  <testsuite name="AMemoryPool/0" tests="13" failures="0" disabled="0" errors="0" time="0">
    <testcase name="HasInitialSizes" type_param="ramses_internal::MemoryPool&lt;ramses_internal::ComparableObject, unsigned int&gt;" status="run" time="0" classname="AMemoryPool/0" />
    <testcase name="UnexistingObjectIsNotAllocated" type_param="ramses_internal::MemoryPool&lt;ramses_internal::ComparableObject, unsigned int&gt;" status="run" time="0" classname="AMemoryPool/0" />
    <testcase name="AllocatedObjectIsReportedToBeAllocated" type_param="ramses_internal::MemoryPool&lt;ramses_internal::ComparableObject, unsigned int&gt;" status="run" time="0" classname="AMemoryPool/0" />
    <testcase name="AllocatingSpecificHandlesResultsInSameValidHandle" type_param="ramses_internal::MemoryPool&lt;ramses_internal::ComparableObject, unsigned int&gt;" status="run" time="0" classname="AMemoryPool/0" />
    <testcase name="AllocationWithSkippingHandlesResultsInUnallocatedHandlesInBetween" type_param="ramses_internal::MemoryPool&lt;ramses_internal::ComparableObject, unsigned int&gt;" status="run" time="0" classname="AMemoryPool/0" />
    <testcase name="ReducesActualObjectCountByOneAfterDeletion" type_param="ramses_internal::MemoryPool&lt;ramses_internal::ComparableObject, unsigned int&gt;" status="run" time="0" classname="AMemoryPool/0" />
    <testcase name="DoesNotAffectOtherObjectsWhenDeletingObject" type_param="ramses_internal::MemoryPool&lt;ramses_internal::ComparableObject, unsigned int&gt;" status="run" time="0" classname="AMemoryPool/0" />
    <testcase name="AllocateUsingSpecificHandle" type_param="ramses_internal::MemoryPool&lt;ramses_internal::ComparableObject, unsigned int&gt;" status="run" time="0" classname="AMemoryPool/0" />
    <testcase name="AllocateUsingSpecificHandleBeyondCapacity" type_param="ramses_internal::MemoryPool&lt;ramses_internal::ComparableObject, unsigned int&gt;" status="run" time="0" classname="AMemoryPool/0" />
    <testcase name="AllocatingFullInitialCapacityDoesNotChangeCapacity" type_param="ramses_internal::MemoryPool&lt;ramses_internal::ComparableObject, unsigned int&gt;" status="run" time="0" classname="AMemoryPool/0" />
    <testcase name="preallocatesMemory" type_param="ramses_internal::MemoryPool&lt;ramses_internal::ComparableObject, unsigned int&gt;" status="run" time="0" classname="AMemoryPool/0" />
    <testcase name="neverShrinksOnPreallocation" type_param="ramses_internal::MemoryPool&lt;ramses_internal::ComparableObject, unsigned int&gt;" status="run" time="0" classname="AMemoryPool/0" />
    <testcase name="neverChangesAllocatedCountOnPreallocation" type_param="ramses_internal::MemoryPool&lt;ramses_internal::ComparableObject, unsigned int&gt;" status="run" time="0" classname="AMemoryPool/0" />
  </testsuite>
  <testsuite name="AMemoryPool/1" tests="13" failures="0" disabled="0" errors="0" time="0">
    <testcase name="HasInitialSizes" type_param="ramses_internal::MemoryPool&lt;ramses_internal::ComparableObject, unsigned short&gt;" status="run" time="0" classname="AMemoryPool/1" />
    <testcase name="UnexistingObjectIsNotAllocated" type_param="ramses_internal::MemoryPool&lt;ramses_internal::ComparableObject, unsigned short&gt;" status="run" time="0" classname="AMemoryPool/1" />
    <testcase name="AllocatedObjectIsReportedToBeAllocated" type_param="ramses_internal::MemoryPool&lt;ramses_internal::ComparableObject, unsigned short&gt;" status="run" time="0" classname="AMemoryPool/1" />
    <testcase name="AllocatingSpecificHandlesResultsInSameValidHandle" type_param="ramses_internal::MemoryPool&lt;ramses_internal::ComparableObject, unsigned short&gt;" status="run" time="0" classname="AMemoryPool/1" />
    <testcase name="AllocationWithSkippingHandlesResultsInUnallocatedHandlesInBetween" type_param="ramses_internal::MemoryPool&lt;ramses_internal::ComparableObject, unsigned short&gt;" status="run" time="0" classname="AMemoryPool/1" />
    <testcase name="ReducesActualObjectCountByOneAfterDeletion" type_param="ramses_internal::MemoryPool&lt;ramses_internal::ComparableObject, unsigned short&gt;" status="run" time="0" classname="AMemoryPool/1" />
    <testcase name="DoesNotAffectOtherObjectsWhenDeletingObject" type_param="ramses_internal::MemoryPool&lt;ramses_internal::ComparableObject, unsigned short&gt;" status="run" time="0" classname="AMemoryPool/1" />
    <testcase name="AllocateUsingSpecificHandle" type_param="ramses_internal::MemoryPool&lt;ramses_internal::ComparableObject, unsigned short&gt;" status="run" time="0" classname="AMemoryPool/1" />
    <testcase name="AllocateUsingSpecificHandleBeyondCapacity" type_param="ramses_internal::MemoryPool&lt;ramses_internal::ComparableObject, unsigned short&gt;" status="run" time="0" classname="AMemoryPool/1" />
    <testcase name="AllocatingFullInitialCapacityDoesNotChangeCapacity" type_param="ramses_internal::MemoryPool&lt;ramses_internal::ComparableObject, unsigned short&gt;" status="run" time="0" classname="AMemoryPool/1" />
    <testcase name="preallocatesMemory" type_param="ramses_internal::MemoryPool&lt;ramses_internal::ComparableObject, unsigned short&gt;" status="run" time="0" classname="AMemoryPool/1" />
    <testcase name="neverShrinksOnPreallocation" type_param="ramses_internal::MemoryPool&lt;ramses_internal::ComparableObject, unsigned short&gt;" status="run" time="0" classname="AMemoryPool/1" />
    <testcase name="neverChangesAllocatedCountOnPreallocation" type_param="ramses_internal::MemoryPool&lt;ramses_internal::ComparableObject, unsigned short&gt;" status="run" time="0" classname="AMemoryPool/1" />
  </testsuite>
  <testsuite name="MessagePoolTest" tests="6" failures="0" disabled="0" errors="0" time="0">
    <testcase name="getSuccessMsg" status="run" time="0" classname="MessagePoolTest" />
    <testcase name="getInvalidMsg" status="run" time="0" classname="MessagePoolTest" />
    <testcase name="addMessage" status="run" time="0" classname="MessagePoolTest" />
    <testcase name="fillCache" status="run" time="0" classname="MessagePoolTest" />
    <testcase name="floodCache" status="run" time="0" classname="MessagePoolTest" />
    <testcase name="tooOldEntryGivesUnknownMessage" status="run" time="0" classname="MessagePoolTest" />
  </testsuite>
  <testsuite name="RawBinaryOutputStreamBaseTypesTest/0" tests="2" failures="0" disabled="0" errors="0" time="0">
    <testcase name="WriteAndCheckSingleElement" type_param="unsigned short" status="run" time="0" classname="RawBinaryOutputStreamBaseTypesTest/0" />
    <testcase name="WriteAndCheckMultipleElements" type_param="unsigned short" status="run" time="0" classname="RawBinaryOutputStreamBaseTypesTest/0" />
  </testsuite>
  <testsuite name="RawBinaryOutputStreamBaseTypesTest/1" tests="2" failures="0" disabled="0" errors="0" time="0">
    <testcase name="WriteAndCheckSingleElement" type_param="int" status="run" time="0" classname="RawBinaryOutputStreamBaseTypesTest/1" />
    <testcase name="WriteAndCheckMultipleElements" type_param="int" status="run" time="0" classname="RawBinaryOutputStreamBaseTypesTest/1" />
  </testsuite>
  <testsuite name="RawBinaryOutputStreamBaseTypesTest/2" tests="2" failures="0" disabled="0" errors="0" time="0">
    <testcase name="WriteAndCheckSingleElement" type_param="unsigned int" status="run" time="0" classname="RawBinaryOutputStreamBaseTypesTest/2" />
    <testcase name="WriteAndCheckMultipleElements" type_param="unsigned int" status="run" time="0" classname="RawBinaryOutputStreamBaseTypesTest/2" />
  </testsuite>
  <testsuite name="RawBinaryOutputStreamBaseTypesTest/3" tests="2" failures="0" disabled="0" errors="0" time="0">
    <testcase name="WriteAndCheckSingleElement" type_param="long" status="run" time="0" classname="RawBinaryOutputStreamBaseTypesTest/3" />
    <testcase name="WriteAndCheckMultipleElements" type_param="long" status="run" time="0" classname="RawBinaryOutputStreamBaseTypesTest/3" />
  </testsuite>
  <testsuite name="RawBinaryOutputStreamBaseTypesTest/4" tests="2" failures="0" disabled="0" errors="0" time="0">
    <testcase name="WriteAndCheckSingleElement" type_param="unsigned long" status="run" time="0" classname="RawBinaryOutputStreamBaseTypesTest/4" />
    <testcase name="WriteAndCheckMultipleElements" type_param="unsigned long" status="run" time="0" classname="RawBinaryOutputStreamBaseTypesTest/4" />
  </testsuite>
  <testsuite name="RawBinaryOutputStreamBaseTypesTest/5" tests="2" failures="0" disabled="0" errors="0" time="0.001">
    <testcase name="WriteAndCheckSingleElement" type_param="float" status="run" time="0.001" classname="RawBinaryOutputStreamBaseTypesTest/5" />
    <testcase name="WriteAndCheckMultipleElements" type_param="float" status="run" time="0" classname="RawBinaryOutputStreamBaseTypesTest/5" />
  </testsuite>
  <testsuite name="RawBinaryOutputStreamBaseTypesTest/6" tests="2" failures="0" disabled="0" errors="0" time="0">
    <testcase name="WriteAndCheckSingleElement" type_param="bool" status="run" time="0" classname="RawBinaryOutputStreamBaseTypesTest/6" />
    <testcase name="WriteAndCheckMultipleElements" type_param="bool" status="run" time="0" classname="RawBinaryOutputStreamBaseTypesTest/6" />
  </testsuite>
  <testsuite name="RawBinaryOutputStreamBaseTypesTest/7" tests="2" failures="0" disabled="0" errors="0" time="0">
    <testcase name="WriteAndCheckSingleElement" type_param="ramses_internal::Matrix44f" status="run" time="0" classname="RawBinaryOutputStreamBaseTypesTest/7" />
    <testcase name="WriteAndCheckMultipleElements" type_param="ramses_internal::Matrix44f" status="run" time="0" classname="RawBinaryOutputStreamBaseTypesTest/7" />
  </testsuite>
  <testsuite name="RawBinaryOutputStreamBaseTypesTest/8" tests="2" failures="0" disabled="0" errors="0" time="0">
    <testcase name="WriteAndCheckSingleElement" type_param="ramses_internal::ResourceContentHash" status="run" time="0" classname="RawBinaryOutputStreamBaseTypesTest/8" />
    <testcase name="WriteAndCheckMultipleElements" type_param="ramses_internal::ResourceContentHash" status="run" time="0" classname="RawBinaryOutputStreamBaseTypesTest/8" />
  </testsuite>
  <testsuite name="RawBinaryOutputStreamComplexTypesTest" tests="2" failures="0" disabled="0" errors="0" time="0">
    <testcase name="WriteAndCheckString" status="run" time="0" classname="RawBinaryOutputStreamComplexTypesTest" />
    <testcase name="WriteAndCheckBuffer" status="run" time="0" classname="RawBinaryOutputStreamComplexTypesTest" />
  </testsuite>
  <testsuite name="StatisticCollectionTest" tests="7" failures="0" disabled="0" errors="0" time="0">
    <testcase name="canUpdateCounter" status="run" time="0" classname="StatisticCollectionTest" />
    <testcase name="nextTimeIntervalResetsCounter" status="run" time="0" classname="StatisticCollectionTest" />
    <testcase name="collectsMinValueOfMultipleTimeframes" status="run" time="0" classname="StatisticCollectionTest" />
    <testcase name="collectsMaxValueOfMultipleTimeframes" status="run" time="0" classname="StatisticCollectionTest" />
    <testcase name="collectsSumValueOfMultipleTimeframes" status="run" time="0" classname="StatisticCollectionTest" />
    <testcase name="reset" status="run" time="0" classname="StatisticCollectionTest" />
    <testcase name="resetSummaries" status="run" time="0" classname="StatisticCollectionTest" />
  </testsuite>
  <testsuite name="StringUtilsTest" tests="7" failures="0" disabled="0" errors="0" time="0">
    <testcase name="trimString" status="run" time="0" classname="StringUtilsTest" />
    <testcase name="tokenizeStringToSet" status="run" time="0" classname="StringUtilsTest" />
    <testcase name="tokenizeString" status="run" time="0" classname="StringUtilsTest" />
    <testcase name="tokenizeEmptyString" status="run" time="0" classname="StringUtilsTest" />
    <testcase name="WithNonDefaultSplitChar" status="run" time="0" classname="StringUtilsTest" />
    <testcase name="tokenizeStringToSetWithNonDefaultSplitChar" status="run" time="0" classname="StringUtilsTest" />
    <testcase name="tokenizeStringWithSingleCharElements" status="run" time="0" classname="StringUtilsTest" />
  </testsuite>
  <testsuite name="TextureMathUtilsTest" tests="5" failures="0" disabled="0" errors="0" time="0">
    <testcase name="getsCorrectLowerMipSize" status="run" time="0" classname="TextureMathUtilsTest" />
    <testcase name="getsCorrectMipLevelSize" status="run" time="0" classname="TextureMathUtilsTest" />
    <testcase name="getsCorrectMipCount1D" status="run" time="0" classname="TextureMathUtilsTest" />
    <testcase name="getsCorrectMipCount2D" status="run" time="0" classname="TextureMathUtilsTest" />
    <testcase name="getsCorrectMipCount3D" status="run" time="0" classname="TextureMathUtilsTest" />
  </testsuite>
  <testsuite name="AThreadBarrier" tests="1" failures="0" disabled="0" errors="0" time="0">
    <testcase name="onlyReturnsFromWaitWhenExpectedNumberOfThreadsHaveReachedIt" status="run" time="0" classname="AThreadBarrier" />
  </testsuite>
  <testsuite name="VariantTest/0" tests="1" failures="0" disabled="0" errors="0" time="0">
    <testcase name="SetGetValue" type_param="int" status="run" time="0" classname="VariantTest/0" />
  </testsuite>
  <testsuite name="VariantTest/1" tests="1" failures="0" disabled="0" errors="0" time="0">
    <testcase name="SetGetValue" type_param="float" status="run" time="0" classname="VariantTest/1" />
  </testsuite>
  <testsuite name="VariantTest/2" tests="1" failures="0" disabled="0" errors="0" time="0">
    <testcase name="SetGetValue" type_param="ramses_internal::Vector2" status="run" time="0" classname="VariantTest/2" />
  </testsuite>
  <testsuite name="VariantTest/3" tests="1" failures="0" disabled="0" errors="0" time="0">
    <testcase name="SetGetValue" type_param="ramses_internal::Vector3" status="run" time="0" classname="VariantTest/3" />
  </testsuite>
  <testsuite name="VariantTest/4" tests="1" failures="0" disabled="0" errors="0" time="0">
    <testcase name="SetGetValue" type_param="ramses_internal::Vector4" status="run" time="0" classname="VariantTest/4" />
  </testsuite>
  <testsuite name="VariantTest/5" tests="1" failures="0" disabled="0" errors="0" time="0">
    <testcase name="SetGetValue" type_param="ramses_internal::Vector2i" status="run" time="0" classname="VariantTest/5" />
  </testsuite>
  <testsuite name="VariantTest/6" tests="1" failures="0" disabled="0" errors="0" time="0">
    <testcase name="SetGetValue" type_param="ramses_internal::Vector3i" status="run" time="0" classname="VariantTest/6" />
  </testsuite>
  <testsuite name="VariantTest/7" tests="1" failures="0" disabled="0" errors="0" time="0">
    <testcase name="SetGetValue" type_param="ramses_internal::Vector4i" status="run" time="0" classname="VariantTest/7" />
  </testsuite>
  <testsuite name="VariantTest/8" tests="1" failures="0" disabled="0" errors="0" time="0">
    <testcase name="SetGetValue" type_param="ramses_internal::Matrix22f" status="run" time="0" classname="VariantTest/8" />
  </testsuite>
  <testsuite name="VariantTest/9" tests="1" failures="0" disabled="0" errors="0" time="0">
    <testcase name="SetGetValue" type_param="ramses_internal::Matrix33f" status="run" time="0" classname="VariantTest/9" />
  </testsuite>
  <testsuite name="VariantTest/10" tests="1" failures="0" disabled="0" errors="0" time="0">
    <testcase name="SetGetValue" type_param="ramses_internal::Matrix44f" status="run" time="0" classname="VariantTest/10" />
  </testsuite>
  <testsuite name="VoidOutputStreamTest" tests="14" failures="0" disabled="0" errors="0" time="0">
    <testcase name="Constructor" status="run" time="0" classname="VoidOutputStreamTest" />
    <testcase name="InsertUInt16" status="run" time="0" classname="VoidOutputStreamTest" />
    <testcase name="InsertBool" status="run" time="0" classname="VoidOutputStreamTest" />
    <testcase name="InsertInt32" status="run" time="0" classname="VoidOutputStreamTest" />
    <testcase name="InsertUInt32" status="run" time="0" classname="VoidOutputStreamTest" />
    <testcase name="InsertInt64" status="run" time="0" classname="VoidOutputStreamTest" />
    <testcase name="InsertUInt64" status="run" time="0" classname="VoidOutputStreamTest" />
    <testcase name="InsertFloat" status="run" time="0" classname="VoidOutputStreamTest" />
    <testcase name="InsertGuid" status="run" time="0" classname="VoidOutputStreamTest" />
    <testcase name="InsertString" status="run" time="0" classname="VoidOutputStreamTest" />
    <testcase name="InsertMatrix44f" status="run" time="0" classname="VoidOutputStreamTest" />
    <testcase name="InsertResourceContextHash" status="run" time="0" classname="VoidOutputStreamTest" />
    <testcase name="InsertRawData" status="run" time="0" classname="VoidOutputStreamTest" />
    <testcase name="InsertMultipleData" status="run" time="0" classname="VoidOutputStreamTest" />
  </testsuite>
  <testsuite name="ParticipantIdentifier" tests="3" failures="0" disabled="0" errors="0" time="0">
    <testcase name="Constructor" status="run" time="0" classname="ParticipantIdentifier" />
    <testcase name="IsNotEQualWhenIdsDiffer" status="run" time="0" classname="ParticipantIdentifier" />
    <testcase name="IsEqalWhenIdsAreSame" status="run" time="0" classname="ParticipantIdentifier" />
  </testsuite>
  <testsuite name="ProcessingTaskQueueTest" tests="4" failures="0" disabled="0" errors="0" time="0.05">
    <testcase name="addAndPopTask" status="run" time="0" classname="ProcessingTaskQueueTest" />
    <testcase name="isEmptyShowsIfThereAreTasks" status="run" time="0" classname="ProcessingTaskQueueTest" />
    <testcase name="queueUnblocksWithNullptr" status="run" time="0" classname="ProcessingTaskQueueTest" />
    <testcase name="popTimesOutCorrectly" status="run" time="0.05" classname="ProcessingTaskQueueTest" />
  </testsuite>
  <testsuite name="ATaskExecutingThread" tests="4" failures="0" disabled="0" errors="0" time="0.106">
    <testcase name="callsAliveNotificationWithGivenThreadID" status="run" time="0.101" classname="ATaskExecutingThread" />
    <testcase name="stopThreadWorks" status="run" time="0" classname="ATaskExecutingThread" />
    <testcase name="cancelUnlockJoinThreadWorks" status="run" time="0" classname="ATaskExecutingThread" />
    <testcase name="queueAcceptsAndUnlocksWithNullptr" status="run" time="0.005" classname="ATaskExecutingThread" />
  </testsuite>
  <testsuite name="TaskFinishHandlerDecoratorTest" tests="3" failures="0" disabled="0" errors="0" time="0">
    <testcase name="FinisHandlerCalledAfterExecute" status="run" time="0" classname="TaskFinishHandlerDecoratorTest" />
    <testcase name="AddRefInConstructor" status="run" time="0" classname="TaskFinishHandlerDecoratorTest" />
    <testcase name="DecreaseRefInDestructor" status="run" time="0" classname="TaskFinishHandlerDecoratorTest" />
  </testsuite>
  <testsuite name="TaskForwardingQueuesTest/0" tests="3" failures="0" disabled="0" errors="0" time="0.001">
    <testcase name="EnqueueCorrrectNumberOfTasksAtATime" type_param="ramses_internal::EnqueueOnlyOneAtATimeQueue" status="run" time="0" classname="TaskForwardingQueuesTest/0" />
    <testcase name="EnqueueSecondTaskAfterFirstFinished" type_param="ramses_internal::EnqueueOnlyOneAtATimeQueue" status="run" time="0" classname="TaskForwardingQueuesTest/0" />
    <testcase name="EnqueueTaskAfterQueueIsEmpty" type_param="ramses_internal::EnqueueOnlyOneAtATimeQueue" status="run" time="0.001" classname="TaskForwardingQueuesTest/0" />
  </testsuite>
  <testsuite name="TaskForwardingQueuesTest/1" tests="3" failures="0" disabled="0" errors="0" time="0">
    <testcase name="EnqueueCorrrectNumberOfTasksAtATime" type_param="ramses_internal::TaskForwardingQueue" status="run" time="0" classname="TaskForwardingQueuesTest/1" />
    <testcase name="EnqueueSecondTaskAfterFirstFinished" type_param="ramses_internal::TaskForwardingQueue" status="run" time="0" classname="TaskForwardingQueuesTest/1" />
    <testcase name="EnqueueTaskAfterQueueIsEmpty" type_param="ramses_internal::TaskForwardingQueue" status="run" time="0" classname="TaskForwardingQueuesTest/1" />
  </testsuite>
  <testsuite name="TaskForwardingQueueTest" tests="1" failures="0" disabled="0" errors="0" time="0.02">
    <testcase name="disableUnlocksOnlyAfterTasksAreFinished" status="run" time="0.02" classname="TaskForwardingQueueTest" />
  </testsuite>
  <testsuite name="AThreadedTaskExecutor" tests="4" failures="0" disabled="0" errors="0" time="0.302">
    <testcase name="reportsToWatchDogNotifierWhenAllThreadsReportAlive" status="run" time="0" classname="AThreadedTaskExecutor" />
    <testcase name="doesNotReportToWatchDogIfOneThreadIsBlocked" status="run" time="0.201" classname="AThreadedTaskExecutor" />
    <testcase name="executesEnqueuedTasks" status="run" time="0.05" classname="AThreadedTaskExecutor" />
    <testcase name="unblockThreadsWhenStopping" status="run" time="0.05" classname="AThreadedTaskExecutor" />
  </testsuite>
  <testsuite name="ThreadedTaskExecutor" tests="2" failures="0" disabled="0" errors="0" time="0.551">
    <testcase name="destructorWaitsForUnfinishedTasks" status="run" time="0.05" classname="ThreadedTaskExecutor" />
    <testcase name="stoppingReleasesUnhandledTasks" status="run" time="0.501" classname="ThreadedTaskExecutor" />
  </testsuite>
  <testsuite name="AnEnqueueOnlyOneAtATimeQueue" tests="1" failures="0" disabled="0" errors="0" time="1.001">
    <testcase name="waitForAllTasksExecutionWhenAskedToShutDown" status="run" time="1.001" classname="AnEnqueueOnlyOneAtATimeQueue" />
  </testsuite>
  <testsuite name="ADataLayoutCachedScene" tests="9" failures="0" disabled="0" errors="0" time="0">
    <testcase name="canAllocateDataLayout" status="run" time="0" classname="ADataLayoutCachedScene" />
    <testcase name="canAllocateEmptyDataLayout" status="run" time="0" classname="ADataLayoutCachedScene" />
    <testcase name="willGiveSameHandleForExistingLayout" status="run" time="0" classname="ADataLayoutCachedScene" />
    <testcase name="willAllocateNewHandleForNonMatchingDataFieldTypes" status="run" time="0" classname="ADataLayoutCachedScene" />
    <testcase name="willAllocateNewHandleForNonMatchingDataFieldElementCounts" status="run" time="0" classname="ADataLayoutCachedScene" />
    <testcase name="willAllocateNewHandleForNonMatchingDataFieldSemantics" status="run" time="0" classname="ADataLayoutCachedScene" />
    <testcase name="willAllocateNewHandleForNonMatchingEffectHash" status="run" time="0" classname="ADataLayoutCachedScene" />
    <testcase name="keepsDataLayoutUntilItsUsageCountDropsToZero" status="run" time="0" classname="ADataLayoutCachedScene" />
    <testcase name="confidenceTest_canHandleCreationAndCacheLargeDataLayout" status="run" time="0" classname="ADataLayoutCachedScene" />
  </testsuite>
  <testsuite name="AResourceChangeCollectingScene" tests="43" failures="0" disabled="0" errors="0" time="0.001">
    <testcase name="hasEmptyResourceListsAtCreation" status="run" time="0" classname="AResourceChangeCollectingScene" />
    <testcase name="addsResourceToListWithNewResourcesAfterSetting" status="run" time="0" classname="AResourceChangeCollectingScene" />
    <testcase name="marksResourceAsAddedAfterUsedByDataLayout" status="run" time="0" classname="AResourceChangeCollectingScene" />
    <testcase name="marksResourceAsRemovedAfterNotUsedAnymoreByAnyDataLayout" status="run" time="0" classname="AResourceChangeCollectingScene" />
    <testcase name="doesNotMarkResourceAsAddedIfAlreadyUsedByAnotherDataLayout" status="run" time="0" classname="AResourceChangeCollectingScene" />
    <testcase name="doesNotAddResourceToListsWhenNewHashIsTheSameAsOldHash" status="run" time="0" classname="AResourceChangeCollectingScene" />
    <testcase name="doesNotAddResourceToListsWhenNewHashIsTheSameAsOldHashButDivisorIsDifferent" status="run" time="0" classname="AResourceChangeCollectingScene" />
    <testcase name="sameResourceUsedSecondTimeNotAddedToNewList" status="run" time="0" classname="AResourceChangeCollectingScene" />
    <testcase name="canSwitchFromClientResourceHashToDataBufferAndMarkResourceObsolete" status="run" time="0" classname="AResourceChangeCollectingScene" />
    <testcase name="canSwitchFromClientResourceHashToDataBufferAndBackToResourceHashWithoutMarkingResourceObsolete" status="run" time="0" classname="AResourceChangeCollectingScene" />
    <testcase name="canSwitchFromDataBufferToClientResourceHashAndMarkResourceAdded" status="run" time="0" classname="AResourceChangeCollectingScene" />
    <testcase name="marksResourcesObsoleteAfterDeletionOfDataInstance" status="run" time="0" classname="AResourceChangeCollectingScene" />
    <testcase name="marksResourcesObsoleteOnlyWhenUsageDropsToZero" status="run" time="0" classname="AResourceChangeCollectingScene" />
    <testcase name="doesNotMarkResourcesAsObsoleteNorNewIfItWasAddedAndReleasedInOneCycle" status="run" time="0" classname="AResourceChangeCollectingScene" />
    <testcase name="doesNotMarkResourcesAsObsoleteNorNewIfItWasReleasedAndAddedInOneCycle" status="run" time="0" classname="AResourceChangeCollectingScene" />
    <testcase name="marksResourcesObsoleteOnlyWhenUsageDropsToZero_DifferentDivisor" status="run" time="0" classname="AResourceChangeCollectingScene" />
    <testcase name="doesNotMarkResourcesAsObsoleteNorNewIfItWasAddedAndReleasedInOneCycle_DifferentDivisor" status="run" time="0" classname="AResourceChangeCollectingScene" />
    <testcase name="doesNotMarkResourcesAsObsoleteNorNewIfItWasReleasedAndAddedInOneCycle_DifferentDivisor" status="run" time="0" classname="AResourceChangeCollectingScene" />
    <testcase name="createdRenderTargetIsTracked" status="run" time="0" classname="AResourceChangeCollectingScene" />
    <testcase name="destroyedRenderTargetIsTracked" status="run" time="0" classname="AResourceChangeCollectingScene" />
    <testcase name="createdRenderBufferIsTracked" status="run" time="0" classname="AResourceChangeCollectingScene" />
    <testcase name="destroyedRenderBufferIsTracked" status="run" time="0" classname="AResourceChangeCollectingScene" />
    <testcase name="createdStreamTextureCollectsBothSceneResourceActionAndFallbackTexture" status="run" time="0.001" classname="AResourceChangeCollectingScene" />
    <testcase name="createdStreamTextureDoesNotMarkFallbackTextureAsNewIfItWasAlreadyUsedInScene" status="run" time="0" classname="AResourceChangeCollectingScene" />
    <testcase name="destroyedStreamTextureCollectsBothSceneResourceActionAndFallbackTexture" status="run" time="0" classname="AResourceChangeCollectingScene" />
    <testcase name="destroyedStreamTextureDoesNotMarkFallbackTextureAsRemovedIfItIsStillUsedInScene" status="run" time="0" classname="AResourceChangeCollectingScene" />
    <testcase name="createdBlitPassIsTracked" status="run" time="0" classname="AResourceChangeCollectingScene" />
    <testcase name="destroyedBlitPassIsTracked" status="run" time="0" classname="AResourceChangeCollectingScene" />
    <testcase name="createdDataBufferIsTracked" status="run" time="0" classname="AResourceChangeCollectingScene" />
    <testcase name="createdAndUpdatedDataBufferIsTrackedAndSameAsExtractedFromScene" status="run" time="0" classname="AResourceChangeCollectingScene" />
    <testcase name="destroyedDataBufferIsTracked" status="run" time="0" classname="AResourceChangeCollectingScene" />
    <testcase name="updatedDataBufferIsTracked" status="run" time="0" classname="AResourceChangeCollectingScene" />
    <testcase name="createdTextureBufferIsTracked" status="run" time="0" classname="AResourceChangeCollectingScene" />
    <testcase name="createdAndUpdatedTextureBufferIsTrackedAndSameAsExtractedFromScene" status="run" time="0" classname="AResourceChangeCollectingScene" />
    <testcase name="destroyedTextureBufferIsTracked" status="run" time="0" classname="AResourceChangeCollectingScene" />
    <testcase name="updatedTextureBufferIsTracked" status="run" time="0" classname="AResourceChangeCollectingScene" />
    <testcase name="marksTextureResourceNewWhenUsedByCreatedDataSlot" status="run" time="0" classname="AResourceChangeCollectingScene" />
    <testcase name="marksTextureResourceNewWhenUsedBySetDataSlotTexture" status="run" time="0" classname="AResourceChangeCollectingScene" />
    <testcase name="marksTextureResourceObsoleteTextureSamplerReleased" status="run" time="0" classname="AResourceChangeCollectingScene" />
    <testcase name="marksTextureResourceNewWhenUsedByTextureSampler" status="run" time="0" classname="AResourceChangeCollectingScene" />
    <testcase name="marksTextureObsoleteWhenUsedByReleasedDataSlot" status="run" time="0" classname="AResourceChangeCollectingScene" />
    <testcase name="doesNotMarkTextureNewWhenUsedByCreatedDataSlotButAlreadyUsedBefore" status="run" time="0" classname="AResourceChangeCollectingScene" />
    <testcase name="doesNotMarkTextureObsoleteWhenUsedByDestroyedDataSlotButStillInUse" status="run" time="0" classname="AResourceChangeCollectingScene" />
  </testsuite>
  <testsuite name="ResourceChangeUtilsTest" tests="4" failures="0" disabled="0" errors="0" time="0">
    <testcase name="willPutNewlyAddedResourceToAddedList" status="run" time="0" classname="ResourceChangeUtilsTest" />
    <testcase name="willPutNewlyRemovedResourceToRemovedList" status="run" time="0" classname="ResourceChangeUtilsTest" />
    <testcase name="willConsolidateResourceThatWasRemovedAndAdded" status="run" time="0" classname="ResourceChangeUtilsTest" />
    <testcase name="willConsolidateResourceThatWasAddedAndRemoved" status="run" time="0" classname="ResourceChangeUtilsTest" />
  </testsuite>
  <testsuite name="ASceneActionCollectionBasicTypes/0" tests="7" failures="0" disabled="0" errors="0" time="0">
    <testcase name="WriteSingleElementAndCheckBufferSize" type_param="signed char" status="run" time="0" classname="ASceneActionCollectionBasicTypes/0" />
    <testcase name="WriteAndReadSingleElement" type_param="signed char" status="run" time="0" classname="ASceneActionCollectionBasicTypes/0" />
    <testcase name="WriteAndReadMultipleElements" type_param="signed char" status="run" time="0" classname="ASceneActionCollectionBasicTypes/0" />
    <testcase name="PutMultipleElementsGetThemMultipleTimes" type_param="signed char" status="run" time="0" classname="ASceneActionCollectionBasicTypes/0" />
    <testcase name="PutMultipleActionsWithMultipleElementsGetThemOnce" type_param="signed char" status="run" time="0" classname="ASceneActionCollectionBasicTypes/0" />
    <testcase name="SameObjectsYieldEquality" type_param="signed char" status="run" time="0" classname="ASceneActionCollectionBasicTypes/0" />
    <testcase name="DifferentObjectsYieldNotEquality" type_param="signed char" status="run" time="0" classname="ASceneActionCollectionBasicTypes/0" />
  </testsuite>
  <testsuite name="ASceneActionCollectionBasicTypes/1" tests="7" failures="0" disabled="0" errors="0" time="0">
    <testcase name="WriteSingleElementAndCheckBufferSize" type_param="unsigned char" status="run" time="0" classname="ASceneActionCollectionBasicTypes/1" />
    <testcase name="WriteAndReadSingleElement" type_param="unsigned char" status="run" time="0" classname="ASceneActionCollectionBasicTypes/1" />
    <testcase name="WriteAndReadMultipleElements" type_param="unsigned char" status="run" time="0" classname="ASceneActionCollectionBasicTypes/1" />
    <testcase name="PutMultipleElementsGetThemMultipleTimes" type_param="unsigned char" status="run" time="0" classname="ASceneActionCollectionBasicTypes/1" />
    <testcase name="PutMultipleActionsWithMultipleElementsGetThemOnce" type_param="unsigned char" status="run" time="0" classname="ASceneActionCollectionBasicTypes/1" />
    <testcase name="SameObjectsYieldEquality" type_param="unsigned char" status="run" time="0" classname="ASceneActionCollectionBasicTypes/1" />
    <testcase name="DifferentObjectsYieldNotEquality" type_param="unsigned char" status="run" time="0" classname="ASceneActionCollectionBasicTypes/1" />
  </testsuite>
  <testsuite name="ASceneActionCollectionBasicTypes/2" tests="7" failures="0" disabled="0" errors="0" time="0">
    <testcase name="WriteSingleElementAndCheckBufferSize" type_param="short" status="run" time="0" classname="ASceneActionCollectionBasicTypes/2" />
    <testcase name="WriteAndReadSingleElement" type_param="short" status="run" time="0" classname="ASceneActionCollectionBasicTypes/2" />
    <testcase name="WriteAndReadMultipleElements" type_param="short" status="run" time="0" classname="ASceneActionCollectionBasicTypes/2" />
    <testcase name="PutMultipleElementsGetThemMultipleTimes" type_param="short" status="run" time="0" classname="ASceneActionCollectionBasicTypes/2" />
    <testcase name="PutMultipleActionsWithMultipleElementsGetThemOnce" type_param="short" status="run" time="0" classname="ASceneActionCollectionBasicTypes/2" />
    <testcase name="SameObjectsYieldEquality" type_param="short" status="run" time="0" classname="ASceneActionCollectionBasicTypes/2" />
    <testcase name="DifferentObjectsYieldNotEquality" type_param="short" status="run" time="0" classname="ASceneActionCollectionBasicTypes/2" />
  </testsuite>
  <testsuite name="ASceneActionCollectionBasicTypes/3" tests="7" failures="0" disabled="0" errors="0" time="0">
    <testcase name="WriteSingleElementAndCheckBufferSize" type_param="unsigned short" status="run" time="0" classname="ASceneActionCollectionBasicTypes/3" />
    <testcase name="WriteAndReadSingleElement" type_param="unsigned short" status="run" time="0" classname="ASceneActionCollectionBasicTypes/3" />
    <testcase name="WriteAndReadMultipleElements" type_param="unsigned short" status="run" time="0" classname="ASceneActionCollectionBasicTypes/3" />
    <testcase name="PutMultipleElementsGetThemMultipleTimes" type_param="unsigned short" status="run" time="0" classname="ASceneActionCollectionBasicTypes/3" />
    <testcase name="PutMultipleActionsWithMultipleElementsGetThemOnce" type_param="unsigned short" status="run" time="0" classname="ASceneActionCollectionBasicTypes/3" />
    <testcase name="SameObjectsYieldEquality" type_param="unsigned short" status="run" time="0" classname="ASceneActionCollectionBasicTypes/3" />
    <testcase name="DifferentObjectsYieldNotEquality" type_param="unsigned short" status="run" time="0" classname="ASceneActionCollectionBasicTypes/3" />
  </testsuite>
  <testsuite name="ASceneActionCollectionBasicTypes/4" tests="7" failures="0" disabled="0" errors="0" time="0">
    <testcase name="WriteSingleElementAndCheckBufferSize" type_param="int" status="run" time="0" classname="ASceneActionCollectionBasicTypes/4" />
    <testcase name="WriteAndReadSingleElement" type_param="int" status="run" time="0" classname="ASceneActionCollectionBasicTypes/4" />
    <testcase name="WriteAndReadMultipleElements" type_param="int" status="run" time="0" classname="ASceneActionCollectionBasicTypes/4" />
    <testcase name="PutMultipleElementsGetThemMultipleTimes" type_param="int" status="run" time="0" classname="ASceneActionCollectionBasicTypes/4" />
    <testcase name="PutMultipleActionsWithMultipleElementsGetThemOnce" type_param="int" status="run" time="0" classname="ASceneActionCollectionBasicTypes/4" />
    <testcase name="SameObjectsYieldEquality" type_param="int" status="run" time="0" classname="ASceneActionCollectionBasicTypes/4" />
    <testcase name="DifferentObjectsYieldNotEquality" type_param="int" status="run" time="0" classname="ASceneActionCollectionBasicTypes/4" />
  </testsuite>
  <testsuite name="ASceneActionCollectionBasicTypes/5" tests="7" failures="0" disabled="0" errors="0" time="0">
    <testcase name="WriteSingleElementAndCheckBufferSize" type_param="unsigned int" status="run" time="0" classname="ASceneActionCollectionBasicTypes/5" />
    <testcase name="WriteAndReadSingleElement" type_param="unsigned int" status="run" time="0" classname="ASceneActionCollectionBasicTypes/5" />
    <testcase name="WriteAndReadMultipleElements" type_param="unsigned int" status="run" time="0" classname="ASceneActionCollectionBasicTypes/5" />
    <testcase name="PutMultipleElementsGetThemMultipleTimes" type_param="unsigned int" status="run" time="0" classname="ASceneActionCollectionBasicTypes/5" />
    <testcase name="PutMultipleActionsWithMultipleElementsGetThemOnce" type_param="unsigned int" status="run" time="0" classname="ASceneActionCollectionBasicTypes/5" />
    <testcase name="SameObjectsYieldEquality" type_param="unsigned int" status="run" time="0" classname="ASceneActionCollectionBasicTypes/5" />
    <testcase name="DifferentObjectsYieldNotEquality" type_param="unsigned int" status="run" time="0" classname="ASceneActionCollectionBasicTypes/5" />
  </testsuite>
  <testsuite name="ASceneActionCollectionBasicTypes/6" tests="7" failures="0" disabled="0" errors="0" time="0">
    <testcase name="WriteSingleElementAndCheckBufferSize" type_param="long" status="run" time="0" classname="ASceneActionCollectionBasicTypes/6" />
    <testcase name="WriteAndReadSingleElement" type_param="long" status="run" time="0" classname="ASceneActionCollectionBasicTypes/6" />
    <testcase name="WriteAndReadMultipleElements" type_param="long" status="run" time="0" classname="ASceneActionCollectionBasicTypes/6" />
    <testcase name="PutMultipleElementsGetThemMultipleTimes" type_param="long" status="run" time="0" classname="ASceneActionCollectionBasicTypes/6" />
    <testcase name="PutMultipleActionsWithMultipleElementsGetThemOnce" type_param="long" status="run" time="0" classname="ASceneActionCollectionBasicTypes/6" />
    <testcase name="SameObjectsYieldEquality" type_param="long" status="run" time="0" classname="ASceneActionCollectionBasicTypes/6" />
    <testcase name="DifferentObjectsYieldNotEquality" type_param="long" status="run" time="0" classname="ASceneActionCollectionBasicTypes/6" />
  </testsuite>
  <testsuite name="ASceneActionCollectionBasicTypes/7" tests="7" failures="0" disabled="0" errors="0" time="0">
    <testcase name="WriteSingleElementAndCheckBufferSize" type_param="unsigned long" status="run" time="0" classname="ASceneActionCollectionBasicTypes/7" />
    <testcase name="WriteAndReadSingleElement" type_param="unsigned long" status="run" time="0" classname="ASceneActionCollectionBasicTypes/7" />
    <testcase name="WriteAndReadMultipleElements" type_param="unsigned long" status="run" time="0" classname="ASceneActionCollectionBasicTypes/7" />
    <testcase name="PutMultipleElementsGetThemMultipleTimes" type_param="unsigned long" status="run" time="0" classname="ASceneActionCollectionBasicTypes/7" />
    <testcase name="PutMultipleActionsWithMultipleElementsGetThemOnce" type_param="unsigned long" status="run" time="0" classname="ASceneActionCollectionBasicTypes/7" />
    <testcase name="SameObjectsYieldEquality" type_param="unsigned long" status="run" time="0" classname="ASceneActionCollectionBasicTypes/7" />
    <testcase name="DifferentObjectsYieldNotEquality" type_param="unsigned long" status="run" time="0" classname="ASceneActionCollectionBasicTypes/7" />
  </testsuite>
  <testsuite name="ASceneActionCollectionBasicTypes/8" tests="7" failures="0" disabled="0" errors="0" time="0">
    <testcase name="WriteSingleElementAndCheckBufferSize" type_param="float" status="run" time="0" classname="ASceneActionCollectionBasicTypes/8" />
    <testcase name="WriteAndReadSingleElement" type_param="float" status="run" time="0" classname="ASceneActionCollectionBasicTypes/8" />
    <testcase name="WriteAndReadMultipleElements" type_param="float" status="run" time="0" classname="ASceneActionCollectionBasicTypes/8" />
    <testcase name="PutMultipleElementsGetThemMultipleTimes" type_param="float" status="run" time="0" classname="ASceneActionCollectionBasicTypes/8" />
    <testcase name="PutMultipleActionsWithMultipleElementsGetThemOnce" type_param="float" status="run" time="0" classname="ASceneActionCollectionBasicTypes/8" />
    <testcase name="SameObjectsYieldEquality" type_param="float" status="run" time="0" classname="ASceneActionCollectionBasicTypes/8" />
    <testcase name="DifferentObjectsYieldNotEquality" type_param="float" status="run" time="0" classname="ASceneActionCollectionBasicTypes/8" />
  </testsuite>
  <testsuite name="ASceneActionCollectionBasicTypes/9" tests="7" failures="0" disabled="0" errors="0" time="0">
    <testcase name="WriteSingleElementAndCheckBufferSize" type_param="double" status="run" time="0" classname="ASceneActionCollectionBasicTypes/9" />
    <testcase name="WriteAndReadSingleElement" type_param="double" status="run" time="0" classname="ASceneActionCollectionBasicTypes/9" />
    <testcase name="WriteAndReadMultipleElements" type_param="double" status="run" time="0" classname="ASceneActionCollectionBasicTypes/9" />
    <testcase name="PutMultipleElementsGetThemMultipleTimes" type_param="double" status="run" time="0" classname="ASceneActionCollectionBasicTypes/9" />
    <testcase name="PutMultipleActionsWithMultipleElementsGetThemOnce" type_param="double" status="run" time="0" classname="ASceneActionCollectionBasicTypes/9" />
    <testcase name="SameObjectsYieldEquality" type_param="double" status="run" time="0" classname="ASceneActionCollectionBasicTypes/9" />
    <testcase name="DifferentObjectsYieldNotEquality" type_param="double" status="run" time="0" classname="ASceneActionCollectionBasicTypes/9" />
  </testsuite>
  <testsuite name="ASceneActionCollectionBasicTypes/10" tests="7" failures="0" disabled="0" errors="0" time="0">
    <testcase name="WriteSingleElementAndCheckBufferSize" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::NodeHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/10" />
    <testcase name="WriteAndReadSingleElement" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::NodeHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/10" />
    <testcase name="WriteAndReadMultipleElements" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::NodeHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/10" />
    <testcase name="PutMultipleElementsGetThemMultipleTimes" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::NodeHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/10" />
    <testcase name="PutMultipleActionsWithMultipleElementsGetThemOnce" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::NodeHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/10" />
    <testcase name="SameObjectsYieldEquality" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::NodeHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/10" />
    <testcase name="DifferentObjectsYieldNotEquality" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::NodeHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/10" />
  </testsuite>
  <testsuite name="ASceneActionCollectionBasicTypes/11" tests="7" failures="0" disabled="0" errors="0" time="0">
    <testcase name="WriteSingleElementAndCheckBufferSize" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::RenderableHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/11" />
    <testcase name="WriteAndReadSingleElement" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::RenderableHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/11" />
    <testcase name="WriteAndReadMultipleElements" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::RenderableHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/11" />
    <testcase name="PutMultipleElementsGetThemMultipleTimes" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::RenderableHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/11" />
    <testcase name="PutMultipleActionsWithMultipleElementsGetThemOnce" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::RenderableHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/11" />
    <testcase name="SameObjectsYieldEquality" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::RenderableHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/11" />
    <testcase name="DifferentObjectsYieldNotEquality" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::RenderableHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/11" />
  </testsuite>
  <testsuite name="ASceneActionCollectionBasicTypes/12" tests="7" failures="0" disabled="0" errors="0" time="0">
    <testcase name="WriteSingleElementAndCheckBufferSize" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::TransformHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/12" />
    <testcase name="WriteAndReadSingleElement" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::TransformHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/12" />
    <testcase name="WriteAndReadMultipleElements" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::TransformHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/12" />
    <testcase name="PutMultipleElementsGetThemMultipleTimes" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::TransformHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/12" />
    <testcase name="PutMultipleActionsWithMultipleElementsGetThemOnce" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::TransformHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/12" />
    <testcase name="SameObjectsYieldEquality" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::TransformHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/12" />
    <testcase name="DifferentObjectsYieldNotEquality" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::TransformHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/12" />
  </testsuite>
  <testsuite name="ASceneActionCollectionBasicTypes/13" tests="7" failures="0" disabled="0" errors="0" time="0">
    <testcase name="WriteSingleElementAndCheckBufferSize" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::DataLayoutHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/13" />
    <testcase name="WriteAndReadSingleElement" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::DataLayoutHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/13" />
    <testcase name="WriteAndReadMultipleElements" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::DataLayoutHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/13" />
    <testcase name="PutMultipleElementsGetThemMultipleTimes" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::DataLayoutHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/13" />
    <testcase name="PutMultipleActionsWithMultipleElementsGetThemOnce" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::DataLayoutHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/13" />
    <testcase name="SameObjectsYieldEquality" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::DataLayoutHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/13" />
    <testcase name="DifferentObjectsYieldNotEquality" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::DataLayoutHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/13" />
  </testsuite>
  <testsuite name="ASceneActionCollectionBasicTypes/14" tests="7" failures="0" disabled="0" errors="0" time="0">
    <testcase name="WriteSingleElementAndCheckBufferSize" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::DataInstanceHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/14" />
    <testcase name="WriteAndReadSingleElement" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::DataInstanceHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/14" />
    <testcase name="WriteAndReadMultipleElements" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::DataInstanceHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/14" />
    <testcase name="PutMultipleElementsGetThemMultipleTimes" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::DataInstanceHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/14" />
    <testcase name="PutMultipleActionsWithMultipleElementsGetThemOnce" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::DataInstanceHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/14" />
    <testcase name="SameObjectsYieldEquality" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::DataInstanceHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/14" />
    <testcase name="DifferentObjectsYieldNotEquality" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::DataInstanceHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/14" />
  </testsuite>
  <testsuite name="ASceneActionCollectionBasicTypes/15" tests="7" failures="0" disabled="0" errors="0" time="0">
    <testcase name="WriteSingleElementAndCheckBufferSize" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::CameraHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/15" />
    <testcase name="WriteAndReadSingleElement" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::CameraHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/15" />
    <testcase name="WriteAndReadMultipleElements" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::CameraHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/15" />
    <testcase name="PutMultipleElementsGetThemMultipleTimes" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::CameraHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/15" />
    <testcase name="PutMultipleActionsWithMultipleElementsGetThemOnce" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::CameraHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/15" />
    <testcase name="SameObjectsYieldEquality" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::CameraHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/15" />
    <testcase name="DifferentObjectsYieldNotEquality" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::CameraHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/15" />
  </testsuite>
  <testsuite name="ASceneActionCollectionBasicTypes/16" tests="7" failures="0" disabled="0" errors="0" time="0">
    <testcase name="WriteSingleElementAndCheckBufferSize" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::StateHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/16" />
    <testcase name="WriteAndReadSingleElement" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::StateHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/16" />
    <testcase name="WriteAndReadMultipleElements" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::StateHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/16" />
    <testcase name="PutMultipleElementsGetThemMultipleTimes" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::StateHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/16" />
    <testcase name="PutMultipleActionsWithMultipleElementsGetThemOnce" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::StateHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/16" />
    <testcase name="SameObjectsYieldEquality" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::StateHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/16" />
    <testcase name="DifferentObjectsYieldNotEquality" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::StateHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/16" />
  </testsuite>
  <testsuite name="ASceneActionCollectionBasicTypes/17" tests="7" failures="0" disabled="0" errors="0" time="0">
    <testcase name="WriteSingleElementAndCheckBufferSize" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::RenderPassHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/17" />
    <testcase name="WriteAndReadSingleElement" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::RenderPassHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/17" />
    <testcase name="WriteAndReadMultipleElements" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::RenderPassHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/17" />
    <testcase name="PutMultipleElementsGetThemMultipleTimes" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::RenderPassHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/17" />
    <testcase name="PutMultipleActionsWithMultipleElementsGetThemOnce" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::RenderPassHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/17" />
    <testcase name="SameObjectsYieldEquality" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::RenderPassHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/17" />
    <testcase name="DifferentObjectsYieldNotEquality" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::RenderPassHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/17" />
  </testsuite>
  <testsuite name="ASceneActionCollectionBasicTypes/18" tests="7" failures="0" disabled="0" errors="0" time="0">
    <testcase name="WriteSingleElementAndCheckBufferSize" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::TextureSamplerHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/18" />
    <testcase name="WriteAndReadSingleElement" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::TextureSamplerHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/18" />
    <testcase name="WriteAndReadMultipleElements" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::TextureSamplerHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/18" />
    <testcase name="PutMultipleElementsGetThemMultipleTimes" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::TextureSamplerHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/18" />
    <testcase name="PutMultipleActionsWithMultipleElementsGetThemOnce" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::TextureSamplerHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/18" />
    <testcase name="SameObjectsYieldEquality" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::TextureSamplerHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/18" />
    <testcase name="DifferentObjectsYieldNotEquality" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::TextureSamplerHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/18" />
  </testsuite>
  <testsuite name="ASceneActionCollectionBasicTypes/19" tests="7" failures="0" disabled="0" errors="0" time="0.001">
    <testcase name="WriteSingleElementAndCheckBufferSize" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::RenderTargetHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/19" />
    <testcase name="WriteAndReadSingleElement" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::RenderTargetHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/19" />
    <testcase name="WriteAndReadMultipleElements" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::RenderTargetHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/19" />
    <testcase name="PutMultipleElementsGetThemMultipleTimes" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::RenderTargetHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/19" />
    <testcase name="PutMultipleActionsWithMultipleElementsGetThemOnce" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::RenderTargetHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/19" />
    <testcase name="SameObjectsYieldEquality" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::RenderTargetHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/19" />
    <testcase name="DifferentObjectsYieldNotEquality" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::RenderTargetHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/19" />
  </testsuite>
  <testsuite name="ASceneActionCollectionBasicTypes/20" tests="7" failures="0" disabled="0" errors="0" time="0">
    <testcase name="WriteSingleElementAndCheckBufferSize" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::QueueHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/20" />
    <testcase name="WriteAndReadSingleElement" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::QueueHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/20" />
    <testcase name="WriteAndReadMultipleElements" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::QueueHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/20" />
    <testcase name="PutMultipleElementsGetThemMultipleTimes" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::QueueHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/20" />
    <testcase name="PutMultipleActionsWithMultipleElementsGetThemOnce" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::QueueHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/20" />
    <testcase name="SameObjectsYieldEquality" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::QueueHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/20" />
    <testcase name="DifferentObjectsYieldNotEquality" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::QueueHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/20" />
  </testsuite>
  <testsuite name="ASceneActionCollectionBasicTypes/21" tests="7" failures="0" disabled="0" errors="0" time="0">
    <testcase name="WriteSingleElementAndCheckBufferSize" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::DataFieldHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/21" />
    <testcase name="WriteAndReadSingleElement" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::DataFieldHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/21" />
    <testcase name="WriteAndReadMultipleElements" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::DataFieldHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/21" />
    <testcase name="PutMultipleElementsGetThemMultipleTimes" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::DataFieldHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/21" />
    <testcase name="PutMultipleActionsWithMultipleElementsGetThemOnce" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::DataFieldHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/21" />
    <testcase name="SameObjectsYieldEquality" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::DataFieldHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/21" />
    <testcase name="DifferentObjectsYieldNotEquality" type_param="ramses_internal::TypedMemoryHandle&lt;ramses_internal::DataFieldHandleTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/21" />
  </testsuite>
  <testsuite name="ASceneActionCollectionBasicTypes/22" tests="7" failures="0" disabled="0" errors="0" time="0">
    <testcase name="WriteSingleElementAndCheckBufferSize" type_param="ramses_internal::StronglyTypedValue&lt;unsigned long, 18446744073709551615ul, ramses_internal::SceneVersionTagTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/22" />
    <testcase name="WriteAndReadSingleElement" type_param="ramses_internal::StronglyTypedValue&lt;unsigned long, 18446744073709551615ul, ramses_internal::SceneVersionTagTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/22" />
    <testcase name="WriteAndReadMultipleElements" type_param="ramses_internal::StronglyTypedValue&lt;unsigned long, 18446744073709551615ul, ramses_internal::SceneVersionTagTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/22" />
    <testcase name="PutMultipleElementsGetThemMultipleTimes" type_param="ramses_internal::StronglyTypedValue&lt;unsigned long, 18446744073709551615ul, ramses_internal::SceneVersionTagTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/22" />
    <testcase name="PutMultipleActionsWithMultipleElementsGetThemOnce" type_param="ramses_internal::StronglyTypedValue&lt;unsigned long, 18446744073709551615ul, ramses_internal::SceneVersionTagTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/22" />
    <testcase name="SameObjectsYieldEquality" type_param="ramses_internal::StronglyTypedValue&lt;unsigned long, 18446744073709551615ul, ramses_internal::SceneVersionTagTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/22" />
    <testcase name="DifferentObjectsYieldNotEquality" type_param="ramses_internal::StronglyTypedValue&lt;unsigned long, 18446744073709551615ul, ramses_internal::SceneVersionTagTag&gt;" status="run" time="0" classname="ASceneActionCollectionBasicTypes/22" />
  </testsuite>
  <testsuite name="ASceneActionCollectionComplexTypes" tests="15" failures="0" disabled="0" errors="0" time="0">
    <testcase name="WriteStringAndCheckBufferSize" status="run" time="0" classname="ASceneActionCollectionComplexTypes" />
    <testcase name="WriteEmptyStringAndCheckBufferSize" status="run" time="0" classname="ASceneActionCollectionComplexTypes" />
    <testcase name="WriteLongStringAndCheckBufferSize" status="run" time="0" classname="ASceneActionCollectionComplexTypes" />
    <testcase name="WriteArrayAndCheckBufferSize" status="run" time="0" classname="ASceneActionCollectionComplexTypes" />
    <testcase name="WriteEmptyArrayAndCheckBufferSize" status="run" time="0" classname="ASceneActionCollectionComplexTypes" />
    <testcase name="WriteGuidAndCheckBufferSize" status="run" time="0" classname="ASceneActionCollectionComplexTypes" />
    <testcase name="WriteGuidDataAndCheckBufferSize" status="run" time="0" classname="ASceneActionCollectionComplexTypes" />
    <testcase name="WriteAndGetString" status="run" time="0" classname="ASceneActionCollectionComplexTypes" />
    <testcase name="WriteAndGetEmptyString" status="run" time="0" classname="ASceneActionCollectionComplexTypes" />
    <testcase name="WriteAndGetLongString" status="run" time="0" classname="ASceneActionCollectionComplexTypes" />
    <testcase name="WriteAndGetStaticArray" status="run" time="0" classname="ASceneActionCollectionComplexTypes" />
    <testcase name="WriteAndGetArray" status="run" time="0" classname="ASceneActionCollectionComplexTypes" />
    <testcase name="WriteAndGetEmptyArray" status="run" time="0" classname="ASceneActionCollectionComplexTypes" />
    <testcase name="WriteAndGetGuid" status="run" time="0" classname="ASceneActionCollectionComplexTypes" />
    <testcase name="WriteAndGetMixtureOfTypes" status="run" time="0" classname="ASceneActionCollectionComplexTypes" />
  </testsuite>
  <testsuite name="ASceneActionCollectionCreatorAndApplier" tests="7" failures="0" disabled="0" errors="0" time="0">
    <testcase name="createsExpectedNumberAndTypeOfActions" status="run" time="0" classname="ASceneActionCollectionCreatorAndApplier" />
    <testcase name="createsAndReadsExpectedFlushIdx" status="run" time="0" classname="ASceneActionCollectionCreatorAndApplier" />
    <testcase name="ignoresSizeInfoWhenFlagsSaisNotProvided" status="run" time="0" classname="ASceneActionCollectionCreatorAndApplier" />
    <testcase name="hasExpectedSizeInfoWhenGiven" status="run" time="0" classname="ASceneActionCollectionCreatorAndApplier" />
    <testcase name="canReadFlushTimeInfo" status="run" time="0" classname="ASceneActionCollectionCreatorAndApplier" />
    <testcase name="canReadFlushTimeInfoIfExpirationTimestampNotSet" status="run" time="0" classname="ASceneActionCollectionCreatorAndApplier" />
    <testcase name="canReadVersionTagFromFlush" status="run" time="0" classname="ASceneActionCollectionCreatorAndApplier" />
  </testsuite>
  <testsuite name="ASceneActionCollection" tests="38" failures="0" disabled="0" errors="0" time="0">
    <testcase name="canBeDefaultConstructed" status="run" time="0" classname="ASceneActionCollection" />
    <testcase name="canBeConstrcutedWithCapacity" status="run" time="0" classname="ASceneActionCollection" />
    <testcase name="beginWriteAddsSceneAction" status="run" time="0" classname="ASceneActionCollection" />
    <testcase name="beginWriteDoesNotAddData" status="run" time="0" classname="ASceneActionCollection" />
    <testcase name="writeAddsDataToBlob" status="run" time="0" classname="ASceneActionCollection" />
    <testcase name="clearRemovesActionsAndData" status="run" time="0" classname="ASceneActionCollection" />
    <testcase name="isEqualWhenEmpty" status="run" time="0" classname="ASceneActionCollection" />
    <testcase name="isEqualWithSameTypeAndData" status="run" time="0" classname="ASceneActionCollection" />
    <testcase name="isNotEqualWhenDataDiffers" status="run" time="0" classname="ASceneActionCollection" />
    <testcase name="isNotEqualWhenTypesDiffer" status="run" time="0" classname="ASceneActionCollection" />
    <testcase name="isNotEqualWhenOrderOfActionsDifferent" status="run" time="0" classname="ASceneActionCollection" />
    <testcase name="isNotEqualWhenOrderOfDataDifferent" status="run" time="0" classname="ASceneActionCollection" />
    <testcase name="canAccessSingleActionViaFrontAndback" status="run" time="0" classname="ASceneActionCollection" />
    <testcase name="canAccessDifferentActionsViaFrontAndback" status="run" time="0" classname="ASceneActionCollection" />
    <testcase name="canAccessActionsViaArrayAccessOperator" status="run" time="0" classname="ASceneActionCollection" />
    <testcase name="memberSwapSwapsActionInfoAndData" status="run" time="0" classname="ASceneActionCollection" />
    <testcase name="functionSwapSwapsActionInfoAndData" status="run" time="0" classname="ASceneActionCollection" />
    <testcase name="canBeExplicitlyCopied" status="run" time="0" classname="ASceneActionCollection" />
    <testcase name="canBeMoveConstructed" status="run" time="0" classname="ASceneActionCollection" />
    <testcase name="canBeMoveAssigned" status="run" time="0" classname="ASceneActionCollection" />
    <testcase name="canAppendToAnotherCollection" status="run" time="0" classname="ASceneActionCollection" />
    <testcase name="canAppendEmptyToIncompleteCollection" status="run" time="0" classname="ASceneActionCollection" />
    <testcase name="canAppendCompleteToIncompleteCollection" status="run" time="0" classname="ASceneActionCollection" />
    <testcase name="canAppendCompleteWithMultipleActionsToIncompleteCollection" status="run" time="0" classname="ASceneActionCollection" />
    <testcase name="canAppendIncompleteActionToIncompleteCollection" status="run" time="0" classname="ASceneActionCollection" />
    <testcase name="isFullyReadIsTrueForEmptyAction" status="run" time="0" classname="ASceneActionCollection" />
    <testcase name="isFullyReadBecomesTrueWhenAllDataRead" status="run" time="0" classname="ASceneActionCollection" />
    <testcase name="isFullyReadAlsoWorksForSecondAction" status="run" time="0" classname="ASceneActionCollection" />
    <testcase name="isFullyReadIsTrueForSecondEmptyAction" status="run" time="0" classname="ASceneActionCollection" />
    <testcase name="beginAndEndIteratorAreEqualForEmptyCollection" status="run" time="0" classname="ASceneActionCollection" />
    <testcase name="beginAndEndIteratorAreNotEqualForNonEmptyCollection" status="run" time="0" classname="ASceneActionCollection" />
    <testcase name="iteratorCanBeDereferenced" status="run" time="0" classname="ASceneActionCollection" />
    <testcase name="iteratorCanCallReaderViaArrowOperator" status="run" time="0" classname="ASceneActionCollection" />
    <testcase name="iteratorAdditionResultsInNewOperatorAtChangedPosition" status="run" time="0" classname="ASceneActionCollection" />
    <testcase name="iteratorCanBeUsedInRangeBasedForLoop" status="run" time="0" classname="ASceneActionCollection" />
    <testcase name="canBeInitializedWithAppendingRawData" status="run" time="0" classname="ASceneActionCollection" />
    <testcase name="canBeInitializedWithDirectlyWritingRawData" status="run" time="0" classname="ASceneActionCollection" />
    <testcase name="hasCorrectActionOffsetsAndSizesAfterWritingMultipleActionsWithDifferentTypes" status="run" time="0" classname="ASceneActionCollection" />
  </testsuite>
  <testsuite name="ASceneActionCreatorAndApplier" tests="6" failures="0" disabled="0" errors="0" time="0">
    <testcase name="CanSerializeCompoundRenderable" status="run" time="0" classname="ASceneActionCreatorAndApplier" />
    <testcase name="CanSerializeCompoundRenderableWithDefaultValues" status="run" time="0" classname="ASceneActionCreatorAndApplier" />
    <testcase name="CanSerializeCompoundRenderableEffectDataWithDefaultValues" status="run" time="0" classname="ASceneActionCreatorAndApplier" />
    <testcase name="CanSerializeCompoundState" status="run" time="0" classname="ASceneActionCreatorAndApplier" />
    <testcase name="canEnableAckFlush" status="run" time="0" classname="ASceneActionCreatorAndApplier" />
    <testcase name="canDisableAckFlush" status="run" time="0" classname="ASceneActionCreatorAndApplier" />
  </testsuite>
  <testsuite name="ASceneActionCreatorAndApplierForResources/0" tests="3" failures="0" disabled="0" errors="0" time="0.002">
    <testcase name="writeSingleSmallResource" type_param="ramses_internal::TextureResource" status="run" time="0" classname="ASceneActionCreatorAndApplierForResources/0" />
    <testcase name="writeSingleBigResource" type_param="ramses_internal::TextureResource" status="run" time="0.001" classname="ASceneActionCreatorAndApplierForResources/0" />
    <testcase name="writeMultipleResources" type_param="ramses_internal::TextureResource" status="run" time="0.001" classname="ASceneActionCreatorAndApplierForResources/0" />
  </testsuite>
  <testsuite name="ASceneActionCreatorAndApplierForResources/1" tests="3" failures="0" disabled="0" errors="0" time="0.002">
    <testcase name="writeSingleSmallResource" type_param="ramses_internal::ArrayResource" status="run" time="0" classname="ASceneActionCreatorAndApplierForResources/1" />
    <testcase name="writeSingleBigResource" type_param="ramses_internal::ArrayResource" status="run" time="0" classname="ASceneActionCreatorAndApplierForResources/1" />
    <testcase name="writeMultipleResources" type_param="ramses_internal::ArrayResource" status="run" time="0.002" classname="ASceneActionCreatorAndApplierForResources/1" />
  </testsuite>
  <testsuite name="ASceneActionCreatorAndApplierForResources/2" tests="3" failures="0" disabled="0" errors="0" time="0.001">
    <testcase name="writeSingleSmallResource" type_param="ramses_internal::EffectResource" status="run" time="0" classname="ASceneActionCreatorAndApplierForResources/2" />
    <testcase name="writeSingleBigResource" type_param="ramses_internal::EffectResource" status="run" time="0" classname="ASceneActionCreatorAndApplierForResources/2" />
    <testcase name="writeMultipleResources" type_param="ramses_internal::EffectResource" status="run" time="0.001" classname="ASceneActionCreatorAndApplierForResources/2" />
  </testsuite>
  <testsuite name="SceneActionVectorUtilsTest" tests="8" failures="0" disabled="0" errors="0" time="0">
    <testcase name="CountSingleTypeWithSingleOccurence" status="run" time="0" classname="SceneActionVectorUtilsTest" />
    <testcase name="CountSingleTypeWithMultipleOccurence" status="run" time="0" classname="SceneActionVectorUtilsTest" />
    <testcase name="CountSingleTypeWithNoOccurence" status="run" time="0" classname="SceneActionVectorUtilsTest" />
    <testcase name="CountSingleTypeWithEmptyVector" status="run" time="0" classname="SceneActionVectorUtilsTest" />
    <testcase name="CountVectorTypeWithSingleOccurence" status="run" time="0" classname="SceneActionVectorUtilsTest" />
    <testcase name="CountVectorTypeWithMultipleOccurence" status="run" time="0" classname="SceneActionVectorUtilsTest" />
    <testcase name="CountVectorTypeWithNoOccurence" status="run" time="0" classname="SceneActionVectorUtilsTest" />
    <testcase name="CountVectorTypeWithEmptyVector" status="run" time="0" classname="SceneActionVectorUtilsTest" />
  </testsuite>
  <testsuite name="SceneDescriberTest" tests="6" failures="0" disabled="0" errors="0" time="0">
    <testcase name="checksDescriptionActionsForSceneWithParentAndThreeChildren" status="run" time="0" classname="SceneDescriberTest" />
    <testcase name="skipSceneActionForDataInstancesWithBinaryDataEqualZero" status="run" time="0" classname="SceneDescriberTest" />
    <testcase name="checksDescriptionActionsForSceneWithRenderableAndCompoundAction" status="run" time="0" classname="SceneDescriberTest" />
    <testcase name="checksDescriptionActionsForSceneWithStateAndCompoundAction" status="run" time="0" classname="SceneDescriberTest" />
    <testcase name="sameAmountOfDataLayoutsCreatedIsSerializedToSceneActions_withoutCompacting" status="run" time="0" classname="SceneDescriberTest" />
    <testcase name="sameAmountOfDataLayoutsCreatedIsSerializedToSceneActions_compactingUsed" status="run" time="0" classname="SceneDescriberTest" />
  </testsuite>
  <testsuite name="AScenePersistation" tests="2" failures="0" disabled="0" errors="0" time="0">
    <testcase name="canReadWrite" status="run" time="0" classname="AScenePersistation" />
    <testcase name="canReadWriteMockScene" status="run" time="0" classname="AScenePersistation" />
  </testsuite>
  <testsuite name="AScene/0" tests="142" failures="0" disabled="0" errors="0" time="0.001">
    <testcase name="BlitPassCreated" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="BlitPassReleased" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="DoesNotContainBlitPassWhichWasNotCreated" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="BlitPassCanGetSourceAndDestinationRenderBuffers" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="BlitPassCanGetSourceAndDestinationRegions" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="CanDisableBlitPass" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="createsBlitPassWithOrderZeroAndSetsOrderTwice" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="DoesNotHaveAnyCamerasInitially" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="CountsItsCamerasCorrectly" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="ContainsCreatedCamera" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="GetsAssignedCameraNode" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="GetsAssignedDataInstance" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="CreatesARendererTypeCameraByDefault" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="ReleaseCamera" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="SetsOrthoCameraPlanes" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="SetsPerspectiveCameraPlanes" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="DataBufferCreated" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="DataBufferReleased" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="DoesNotContainDataBufferWhichWasNotCreated" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="CanGetDataBufferType" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="CanGetDataBufferDataType" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="CanGetDataBufferSize" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="CanUpdateDataBuffer" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="ContainsZeroTotalDataInstancesUponCreation" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="InitializesDataInstanceFieldsWithZero" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="InitializesDataInstanceBufferFieldsWithInvalidHashAndDataBufferAndZeroDivisor" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="SetsTheValueOfADataInstanceProperty" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="CreatingDataInstanceIncreasesDataInstanceCount" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="DataInstanceWithFieldWithElementCountGreaterOneReturnsSameValue" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="DataInstanceFieldsWithElementCountGreaterOneDoesNotInfluenceOtherField" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="ContainsZeroTotalDataLayoutsUponCreation" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="CreatingDataLayoutIncreasesDataLayoutCount" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="CanGetAndSetEffectHash" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="CanGetNumberOfDataFieldsInLayout" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="ReturnsCorrectDataFieldType" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="ReturnsCorrectDataFieldElements" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="SemanticCanBeSetAndRetrieved" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="ContainsZeroTotalDataSlotsUponCreation" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="CreatesATransformDataSlot" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="ReleasesDataSlot" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0.001" classname="AScene/0" />
    <testcase name="PreallocatesMemoryPoolsBasedOnSizeInformation" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="MemoryPoolSizesInUseStayZeroUponCreation" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="PreallocatesMemoryPoolsBasedOnSizeInformationNeverShrink" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="InitializesCorrectly" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="ContainsCreatedNode" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="ContainsZeroTotalNodesUponCreation" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="CreatingNodeIncreasesNodeCount" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="PickableObjectCreated" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="PickableObjectReleased" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="DoesNotContainPickableObjectWhichWasNotCreated" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="PickableObjectCanGetPropertiesGivenAtAllocationTime" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="PickableObjectCanSetId" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="PickableObjectCanSetCamera" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="CanDisablePickableObject" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="PickableObjectEnabledByDefault" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="hasNoRenderBuffersInitially" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="canCreateRenderBuffer" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="canGetRenderBufferProperties" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="canReleaseRenderBuffer" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="canCreateMultipleRenderBuffers" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="deletingRenderBufferDoesNotAffectOtherRenderBuffers" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="canCreateRenderGroup" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="canReleaseRenderGroup" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="canAddRenderableToRenderGroup" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="canRemoveRenderableFromRenderGroup" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="canAddRenderGroupToRenderGroup" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="canRemoveRenderGroupFromRenderGroup" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="doesNotContainRenderGroupWhichWasNotCreated" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="canReaddRenderableWithDifferentOrder" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="canReaddRenderGroupToRenderGroupWithDifferentOrder" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="RenderPassCreated" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="RenderPassHasDefaultValues" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="RenderPassReleased" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="setsCameraToRenderPass" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="DoesNotContainRenderPassWhichWasNotCreated" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="RenderPassRenderTarget" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="DisableRenderPass" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="createsRenderPassWithOrderZeroAndSetsOrderTwice" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="AssignsDefaultClearValuesToRenderPass" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="ReturnsClearParameterOfRenderPassWhichWereSetBefore" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="canAddRenderGroupToRenderPass" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="canRemoveRenderGroupFromRenderPass" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="canReaddRenderGroupWithDifferentOrder" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="canSetRenderOnce" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="CreateMultipleTargetsAndCheckTheirValidity" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="DeleteRenderTargetsAndCheckScene" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="ContainsRenderTargetInSceneKnowsExactlyAboutAllCreatedRenderTargets" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="canAddRenderBufferToRenderTarget" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="ContainsCreatedRenderable" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="ReleasesRenderable" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="ReturnsNodeOfRenderable" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="ReturnsInvalidRenderStateForNewRenderable" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="SetsRenderStateForRenderable" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="SetsDataInstanceToRenderable" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="DrawsNothingIfIndicesRangeNotSpecified" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="SetsStartIndexOfRenderable" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="SetsIndexCountOfRenderable" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="SetsRenderableVisible" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="ContainsZeroTotalRenderablesUponCreation" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="CreatingRenderableIncreasesRenderableCount" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="SetsStartVertexOfRenderable" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="ContainsCreatedState" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="ContainsZeroTotalStatesUponCreation" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="CreatingStateIncreasesStateCount" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="AssignsDefaultValuesToNewlyCreatedState" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="SetsStateBlendFactors" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="SetsStateBlendOperations" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="SetsStateCullMode" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="SetsStateDrawMode" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="SetsStateDepthWrite" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="SetsStateDepthFunc" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="SetsStateScissorTest" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="SetsStateStencilFunc" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="SetsStateStencilOps" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="SetsStateColorWriteMask" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="CreatesStreamTextureAndCheckItsValidity" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="SetsStreamTextureForceFallbackImageSetting" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="DeleteStreamTextureAndCheckScene" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="CreatesTextureBuffer" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="ReleasesTextureBuffer" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="DoesNotContainTextureBufferWhichWasNotCreated" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="StoresTextureBufferProperties" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="UpdatesTextureBufferDataPartially" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="TextureBufferDoesNotHaveUsedRegionsUponCreation" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="UpdatesUsedRegionsWhenTextureBufferDataGetsUpdated" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="TextureSamplerCreated" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="TextureSamplerReleased" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="CalledContainsTextureSamplerOnNotExistingTextureSampler" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="AllocatedTextureSamplerHasGivenStates" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="AllocatedTextureSamplerHasGivenReferencesToResources_TextureResrouce" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="AllocatedTextureSamplerHasGivenReferencesToResources_RenderBuffer" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="AllocatedTextureSamplerHasGivenReferencesToResources_StreamTexture" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="AllocatedTextureSamplerHasGivenReferencesToResources_TextureBuffer" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="ContainsCreatedTransform" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="ReleasesTransform" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="ContainsZeroTotalTransformsUponCreation" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="CreatingTransformsIncreasesTransformsCount" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="DoesNotContainUnexistingTransform" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="SetsTranslationForTransform" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="SetsRotationForTransform" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="SetsScalingForTransform" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
    <testcase name="CanGetAssignedNodeHandle" type_param="ramses_internal::SceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/0" />
  </testsuite>
  <testsuite name="AScene/1" tests="142" failures="0" disabled="0" errors="0" time="0.001">
    <testcase name="BlitPassCreated" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="BlitPassReleased" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="DoesNotContainBlitPassWhichWasNotCreated" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="BlitPassCanGetSourceAndDestinationRenderBuffers" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="BlitPassCanGetSourceAndDestinationRegions" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="CanDisableBlitPass" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="createsBlitPassWithOrderZeroAndSetsOrderTwice" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="DoesNotHaveAnyCamerasInitially" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="CountsItsCamerasCorrectly" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="ContainsCreatedCamera" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="GetsAssignedCameraNode" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="GetsAssignedDataInstance" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="CreatesARendererTypeCameraByDefault" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="ReleaseCamera" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="SetsOrthoCameraPlanes" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="SetsPerspectiveCameraPlanes" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="DataBufferCreated" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="DataBufferReleased" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="DoesNotContainDataBufferWhichWasNotCreated" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="CanGetDataBufferType" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="CanGetDataBufferDataType" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="CanGetDataBufferSize" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="CanUpdateDataBuffer" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="ContainsZeroTotalDataInstancesUponCreation" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="InitializesDataInstanceFieldsWithZero" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="InitializesDataInstanceBufferFieldsWithInvalidHashAndDataBufferAndZeroDivisor" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="SetsTheValueOfADataInstanceProperty" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="CreatingDataInstanceIncreasesDataInstanceCount" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="DataInstanceWithFieldWithElementCountGreaterOneReturnsSameValue" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="DataInstanceFieldsWithElementCountGreaterOneDoesNotInfluenceOtherField" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="ContainsZeroTotalDataLayoutsUponCreation" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="CreatingDataLayoutIncreasesDataLayoutCount" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="CanGetAndSetEffectHash" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="CanGetNumberOfDataFieldsInLayout" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="ReturnsCorrectDataFieldType" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="ReturnsCorrectDataFieldElements" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="SemanticCanBeSetAndRetrieved" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="ContainsZeroTotalDataSlotsUponCreation" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="CreatesATransformDataSlot" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="ReleasesDataSlot" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="PreallocatesMemoryPoolsBasedOnSizeInformation" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="MemoryPoolSizesInUseStayZeroUponCreation" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="PreallocatesMemoryPoolsBasedOnSizeInformationNeverShrink" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="InitializesCorrectly" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="ContainsCreatedNode" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="ContainsZeroTotalNodesUponCreation" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="CreatingNodeIncreasesNodeCount" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="PickableObjectCreated" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="PickableObjectReleased" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="DoesNotContainPickableObjectWhichWasNotCreated" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="PickableObjectCanGetPropertiesGivenAtAllocationTime" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="PickableObjectCanSetId" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="PickableObjectCanSetCamera" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="CanDisablePickableObject" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="PickableObjectEnabledByDefault" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="hasNoRenderBuffersInitially" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="canCreateRenderBuffer" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="canGetRenderBufferProperties" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="canReleaseRenderBuffer" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="canCreateMultipleRenderBuffers" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="deletingRenderBufferDoesNotAffectOtherRenderBuffers" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="canCreateRenderGroup" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="canReleaseRenderGroup" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="canAddRenderableToRenderGroup" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="canRemoveRenderableFromRenderGroup" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="canAddRenderGroupToRenderGroup" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="canRemoveRenderGroupFromRenderGroup" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="doesNotContainRenderGroupWhichWasNotCreated" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="canReaddRenderableWithDifferentOrder" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="canReaddRenderGroupToRenderGroupWithDifferentOrder" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="RenderPassCreated" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="RenderPassHasDefaultValues" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="RenderPassReleased" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="setsCameraToRenderPass" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="DoesNotContainRenderPassWhichWasNotCreated" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="RenderPassRenderTarget" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="DisableRenderPass" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="createsRenderPassWithOrderZeroAndSetsOrderTwice" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="AssignsDefaultClearValuesToRenderPass" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="ReturnsClearParameterOfRenderPassWhichWereSetBefore" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="canAddRenderGroupToRenderPass" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="canRemoveRenderGroupFromRenderPass" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="canReaddRenderGroupWithDifferentOrder" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="canSetRenderOnce" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="CreateMultipleTargetsAndCheckTheirValidity" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="DeleteRenderTargetsAndCheckScene" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="ContainsRenderTargetInSceneKnowsExactlyAboutAllCreatedRenderTargets" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="canAddRenderBufferToRenderTarget" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="ContainsCreatedRenderable" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="ReleasesRenderable" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="ReturnsNodeOfRenderable" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="ReturnsInvalidRenderStateForNewRenderable" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="SetsRenderStateForRenderable" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="SetsDataInstanceToRenderable" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="DrawsNothingIfIndicesRangeNotSpecified" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="SetsStartIndexOfRenderable" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="SetsIndexCountOfRenderable" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="SetsRenderableVisible" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="ContainsZeroTotalRenderablesUponCreation" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="CreatingRenderableIncreasesRenderableCount" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="SetsStartVertexOfRenderable" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="ContainsCreatedState" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="ContainsZeroTotalStatesUponCreation" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="CreatingStateIncreasesStateCount" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="AssignsDefaultValuesToNewlyCreatedState" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="SetsStateBlendFactors" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="SetsStateBlendOperations" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="SetsStateCullMode" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="SetsStateDrawMode" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="SetsStateDepthWrite" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="SetsStateDepthFunc" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="SetsStateScissorTest" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="SetsStateStencilFunc" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="SetsStateStencilOps" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="SetsStateColorWriteMask" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="CreatesStreamTextureAndCheckItsValidity" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="SetsStreamTextureForceFallbackImageSetting" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="DeleteStreamTextureAndCheckScene" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="CreatesTextureBuffer" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="ReleasesTextureBuffer" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="DoesNotContainTextureBufferWhichWasNotCreated" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="StoresTextureBufferProperties" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="UpdatesTextureBufferDataPartially" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="TextureBufferDoesNotHaveUsedRegionsUponCreation" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="UpdatesUsedRegionsWhenTextureBufferDataGetsUpdated" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="TextureSamplerCreated" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="TextureSamplerReleased" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="CalledContainsTextureSamplerOnNotExistingTextureSampler" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="AllocatedTextureSamplerHasGivenStates" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="AllocatedTextureSamplerHasGivenReferencesToResources_TextureResrouce" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="AllocatedTextureSamplerHasGivenReferencesToResources_RenderBuffer" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="AllocatedTextureSamplerHasGivenReferencesToResources_StreamTexture" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="AllocatedTextureSamplerHasGivenReferencesToResources_TextureBuffer" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="ContainsCreatedTransform" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="ReleasesTransform" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="ContainsZeroTotalTransformsUponCreation" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="CreatingTransformsIncreasesTransformsCount" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="DoesNotContainUnexistingTransform" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="SetsTranslationForTransform" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="SetsRotationForTransform" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="SetsScalingForTransform" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
    <testcase name="CanGetAssignedNodeHandle" type_param="ramses_internal::TransformationCachedSceneT&lt;ramses_internal::MemoryPool&gt;" status="run" time="0" classname="AScene/1" />
  </testsuite>
  <testsuite name="AScene/2" tests="142" failures="0" disabled="0" errors="0" time="0.001">
    <testcase name="BlitPassCreated" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="BlitPassReleased" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="DoesNotContainBlitPassWhichWasNotCreated" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="BlitPassCanGetSourceAndDestinationRenderBuffers" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="BlitPassCanGetSourceAndDestinationRegions" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="CanDisableBlitPass" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="createsBlitPassWithOrderZeroAndSetsOrderTwice" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="DoesNotHaveAnyCamerasInitially" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="CountsItsCamerasCorrectly" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="ContainsCreatedCamera" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="GetsAssignedCameraNode" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="GetsAssignedDataInstance" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="CreatesARendererTypeCameraByDefault" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="ReleaseCamera" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="SetsOrthoCameraPlanes" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="SetsPerspectiveCameraPlanes" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="DataBufferCreated" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="DataBufferReleased" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="DoesNotContainDataBufferWhichWasNotCreated" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="CanGetDataBufferType" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="CanGetDataBufferDataType" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="CanGetDataBufferSize" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="CanUpdateDataBuffer" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="ContainsZeroTotalDataInstancesUponCreation" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="InitializesDataInstanceFieldsWithZero" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="InitializesDataInstanceBufferFieldsWithInvalidHashAndDataBufferAndZeroDivisor" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="SetsTheValueOfADataInstanceProperty" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="CreatingDataInstanceIncreasesDataInstanceCount" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="DataInstanceWithFieldWithElementCountGreaterOneReturnsSameValue" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="DataInstanceFieldsWithElementCountGreaterOneDoesNotInfluenceOtherField" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="ContainsZeroTotalDataLayoutsUponCreation" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="CreatingDataLayoutIncreasesDataLayoutCount" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="CanGetAndSetEffectHash" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="CanGetNumberOfDataFieldsInLayout" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="ReturnsCorrectDataFieldType" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="ReturnsCorrectDataFieldElements" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="SemanticCanBeSetAndRetrieved" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="ContainsZeroTotalDataSlotsUponCreation" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="CreatesATransformDataSlot" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="ReleasesDataSlot" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="PreallocatesMemoryPoolsBasedOnSizeInformation" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="MemoryPoolSizesInUseStayZeroUponCreation" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="PreallocatesMemoryPoolsBasedOnSizeInformationNeverShrink" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="InitializesCorrectly" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="ContainsCreatedNode" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="ContainsZeroTotalNodesUponCreation" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="CreatingNodeIncreasesNodeCount" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="PickableObjectCreated" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="PickableObjectReleased" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="DoesNotContainPickableObjectWhichWasNotCreated" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="PickableObjectCanGetPropertiesGivenAtAllocationTime" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="PickableObjectCanSetId" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="PickableObjectCanSetCamera" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="CanDisablePickableObject" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="PickableObjectEnabledByDefault" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="hasNoRenderBuffersInitially" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="canCreateRenderBuffer" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="canGetRenderBufferProperties" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="canReleaseRenderBuffer" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="canCreateMultipleRenderBuffers" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="deletingRenderBufferDoesNotAffectOtherRenderBuffers" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="canCreateRenderGroup" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="canReleaseRenderGroup" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="canAddRenderableToRenderGroup" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="canRemoveRenderableFromRenderGroup" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="canAddRenderGroupToRenderGroup" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="canRemoveRenderGroupFromRenderGroup" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="doesNotContainRenderGroupWhichWasNotCreated" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="canReaddRenderableWithDifferentOrder" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="canReaddRenderGroupToRenderGroupWithDifferentOrder" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="RenderPassCreated" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="RenderPassHasDefaultValues" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="RenderPassReleased" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="setsCameraToRenderPass" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="DoesNotContainRenderPassWhichWasNotCreated" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="RenderPassRenderTarget" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="DisableRenderPass" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="createsRenderPassWithOrderZeroAndSetsOrderTwice" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="AssignsDefaultClearValuesToRenderPass" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="ReturnsClearParameterOfRenderPassWhichWereSetBefore" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="canAddRenderGroupToRenderPass" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="canRemoveRenderGroupFromRenderPass" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="canReaddRenderGroupWithDifferentOrder" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="canSetRenderOnce" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="CreateMultipleTargetsAndCheckTheirValidity" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="DeleteRenderTargetsAndCheckScene" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="ContainsRenderTargetInSceneKnowsExactlyAboutAllCreatedRenderTargets" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="canAddRenderBufferToRenderTarget" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="ContainsCreatedRenderable" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="ReleasesRenderable" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="ReturnsNodeOfRenderable" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="ReturnsInvalidRenderStateForNewRenderable" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="SetsRenderStateForRenderable" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="SetsDataInstanceToRenderable" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="DrawsNothingIfIndicesRangeNotSpecified" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="SetsStartIndexOfRenderable" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="SetsIndexCountOfRenderable" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="SetsRenderableVisible" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="ContainsZeroTotalRenderablesUponCreation" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="CreatingRenderableIncreasesRenderableCount" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="SetsStartVertexOfRenderable" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="ContainsCreatedState" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="ContainsZeroTotalStatesUponCreation" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="CreatingStateIncreasesStateCount" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="AssignsDefaultValuesToNewlyCreatedState" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="SetsStateBlendFactors" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="SetsStateBlendOperations" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="SetsStateCullMode" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="SetsStateDrawMode" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="SetsStateDepthWrite" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="SetsStateDepthFunc" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="SetsStateScissorTest" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="SetsStateStencilFunc" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="SetsStateStencilOps" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="SetsStateColorWriteMask" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="CreatesStreamTextureAndCheckItsValidity" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="SetsStreamTextureForceFallbackImageSetting" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="DeleteStreamTextureAndCheckScene" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="CreatesTextureBuffer" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="ReleasesTextureBuffer" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="DoesNotContainTextureBufferWhichWasNotCreated" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="StoresTextureBufferProperties" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="UpdatesTextureBufferDataPartially" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="TextureBufferDoesNotHaveUsedRegionsUponCreation" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="UpdatesUsedRegionsWhenTextureBufferDataGetsUpdated" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="TextureSamplerCreated" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="TextureSamplerReleased" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="CalledContainsTextureSamplerOnNotExistingTextureSampler" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="AllocatedTextureSamplerHasGivenStates" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="AllocatedTextureSamplerHasGivenReferencesToResources_TextureResrouce" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="AllocatedTextureSamplerHasGivenReferencesToResources_RenderBuffer" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="AllocatedTextureSamplerHasGivenReferencesToResources_StreamTexture" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="AllocatedTextureSamplerHasGivenReferencesToResources_TextureBuffer" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="ContainsCreatedTransform" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="ReleasesTransform" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="ContainsZeroTotalTransformsUponCreation" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="CreatingTransformsIncreasesTransformsCount" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="DoesNotContainUnexistingTransform" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="SetsTranslationForTransform" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="SetsRotationForTransform" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="SetsScalingForTransform" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
    <testcase name="CanGetAssignedNodeHandle" type_param="ramses_internal::ActionCollectingScene" status="run" time="0" classname="AScene/2" />
  </testsuite>
  <testsuite name="AScene/3" tests="142" failures="0" disabled="0" errors="0" time="0.001">
    <testcase name="BlitPassCreated" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="BlitPassReleased" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="DoesNotContainBlitPassWhichWasNotCreated" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="BlitPassCanGetSourceAndDestinationRenderBuffers" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="BlitPassCanGetSourceAndDestinationRegions" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="CanDisableBlitPass" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="createsBlitPassWithOrderZeroAndSetsOrderTwice" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="DoesNotHaveAnyCamerasInitially" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="CountsItsCamerasCorrectly" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="ContainsCreatedCamera" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="GetsAssignedCameraNode" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="GetsAssignedDataInstance" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="CreatesARendererTypeCameraByDefault" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="ReleaseCamera" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="SetsOrthoCameraPlanes" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="SetsPerspectiveCameraPlanes" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="DataBufferCreated" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="DataBufferReleased" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="DoesNotContainDataBufferWhichWasNotCreated" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="CanGetDataBufferType" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="CanGetDataBufferDataType" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="CanGetDataBufferSize" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="CanUpdateDataBuffer" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="ContainsZeroTotalDataInstancesUponCreation" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="InitializesDataInstanceFieldsWithZero" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="InitializesDataInstanceBufferFieldsWithInvalidHashAndDataBufferAndZeroDivisor" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="SetsTheValueOfADataInstanceProperty" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="CreatingDataInstanceIncreasesDataInstanceCount" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="DataInstanceWithFieldWithElementCountGreaterOneReturnsSameValue" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="DataInstanceFieldsWithElementCountGreaterOneDoesNotInfluenceOtherField" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="ContainsZeroTotalDataLayoutsUponCreation" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="CreatingDataLayoutIncreasesDataLayoutCount" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="CanGetAndSetEffectHash" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="CanGetNumberOfDataFieldsInLayout" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="ReturnsCorrectDataFieldType" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="ReturnsCorrectDataFieldElements" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="SemanticCanBeSetAndRetrieved" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="ContainsZeroTotalDataSlotsUponCreation" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="CreatesATransformDataSlot" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="ReleasesDataSlot" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="PreallocatesMemoryPoolsBasedOnSizeInformation" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="MemoryPoolSizesInUseStayZeroUponCreation" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="PreallocatesMemoryPoolsBasedOnSizeInformationNeverShrink" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="InitializesCorrectly" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="ContainsCreatedNode" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="ContainsZeroTotalNodesUponCreation" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="CreatingNodeIncreasesNodeCount" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="PickableObjectCreated" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="PickableObjectReleased" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="DoesNotContainPickableObjectWhichWasNotCreated" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="PickableObjectCanGetPropertiesGivenAtAllocationTime" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="PickableObjectCanSetId" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="PickableObjectCanSetCamera" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="CanDisablePickableObject" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="PickableObjectEnabledByDefault" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="hasNoRenderBuffersInitially" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="canCreateRenderBuffer" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="canGetRenderBufferProperties" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="canReleaseRenderBuffer" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="canCreateMultipleRenderBuffers" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="deletingRenderBufferDoesNotAffectOtherRenderBuffers" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="canCreateRenderGroup" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="canReleaseRenderGroup" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="canAddRenderableToRenderGroup" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="canRemoveRenderableFromRenderGroup" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="canAddRenderGroupToRenderGroup" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="canRemoveRenderGroupFromRenderGroup" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="doesNotContainRenderGroupWhichWasNotCreated" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="canReaddRenderableWithDifferentOrder" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="canReaddRenderGroupToRenderGroupWithDifferentOrder" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="RenderPassCreated" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="RenderPassHasDefaultValues" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="RenderPassReleased" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="setsCameraToRenderPass" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="DoesNotContainRenderPassWhichWasNotCreated" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="RenderPassRenderTarget" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="DisableRenderPass" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="createsRenderPassWithOrderZeroAndSetsOrderTwice" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="AssignsDefaultClearValuesToRenderPass" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="ReturnsClearParameterOfRenderPassWhichWereSetBefore" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="canAddRenderGroupToRenderPass" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="canRemoveRenderGroupFromRenderPass" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="canReaddRenderGroupWithDifferentOrder" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="canSetRenderOnce" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="CreateMultipleTargetsAndCheckTheirValidity" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="DeleteRenderTargetsAndCheckScene" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="ContainsRenderTargetInSceneKnowsExactlyAboutAllCreatedRenderTargets" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="canAddRenderBufferToRenderTarget" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="ContainsCreatedRenderable" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="ReleasesRenderable" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="ReturnsNodeOfRenderable" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="ReturnsInvalidRenderStateForNewRenderable" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="SetsRenderStateForRenderable" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="SetsDataInstanceToRenderable" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="DrawsNothingIfIndicesRangeNotSpecified" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="SetsStartIndexOfRenderable" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="SetsIndexCountOfRenderable" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="SetsRenderableVisible" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="ContainsZeroTotalRenderablesUponCreation" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="CreatingRenderableIncreasesRenderableCount" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="SetsStartVertexOfRenderable" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="ContainsCreatedState" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="ContainsZeroTotalStatesUponCreation" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="CreatingStateIncreasesStateCount" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="AssignsDefaultValuesToNewlyCreatedState" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="SetsStateBlendFactors" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="SetsStateBlendOperations" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="SetsStateCullMode" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="SetsStateDrawMode" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="SetsStateDepthWrite" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="SetsStateDepthFunc" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="SetsStateScissorTest" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="SetsStateStencilFunc" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="SetsStateStencilOps" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="SetsStateColorWriteMask" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="CreatesStreamTextureAndCheckItsValidity" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="SetsStreamTextureForceFallbackImageSetting" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="DeleteStreamTextureAndCheckScene" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="CreatesTextureBuffer" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="ReleasesTextureBuffer" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="DoesNotContainTextureBufferWhichWasNotCreated" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="StoresTextureBufferProperties" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="UpdatesTextureBufferDataPartially" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="TextureBufferDoesNotHaveUsedRegionsUponCreation" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="UpdatesUsedRegionsWhenTextureBufferDataGetsUpdated" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="TextureSamplerCreated" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="TextureSamplerReleased" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="CalledContainsTextureSamplerOnNotExistingTextureSampler" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="AllocatedTextureSamplerHasGivenStates" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="AllocatedTextureSamplerHasGivenReferencesToResources_TextureResrouce" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="AllocatedTextureSamplerHasGivenReferencesToResources_RenderBuffer" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="AllocatedTextureSamplerHasGivenReferencesToResources_StreamTexture" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="AllocatedTextureSamplerHasGivenReferencesToResources_TextureBuffer" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="ContainsCreatedTransform" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="ReleasesTransform" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="ContainsZeroTotalTransformsUponCreation" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="CreatingTransformsIncreasesTransformsCount" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="DoesNotContainUnexistingTransform" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="SetsTranslationForTransform" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="SetsRotationForTransform" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="SetsScalingForTransform" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
    <testcase name="CanGetAssignedNodeHandle" type_param="ramses_internal::ResourceChangeCollectingScene" status="run" time="0" classname="AScene/3" />
  </testsuite>
  <testsuite name="AScene/4" tests="142" failures="0" disabled="0" errors="0" time="0.002">
    <testcase name="BlitPassCreated" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="BlitPassReleased" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="DoesNotContainBlitPassWhichWasNotCreated" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="BlitPassCanGetSourceAndDestinationRenderBuffers" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="BlitPassCanGetSourceAndDestinationRegions" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="CanDisableBlitPass" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="createsBlitPassWithOrderZeroAndSetsOrderTwice" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="DoesNotHaveAnyCamerasInitially" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="CountsItsCamerasCorrectly" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="ContainsCreatedCamera" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="GetsAssignedCameraNode" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="GetsAssignedDataInstance" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="CreatesARendererTypeCameraByDefault" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="ReleaseCamera" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="SetsOrthoCameraPlanes" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="SetsPerspectiveCameraPlanes" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="DataBufferCreated" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="DataBufferReleased" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="DoesNotContainDataBufferWhichWasNotCreated" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="CanGetDataBufferType" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="CanGetDataBufferDataType" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="CanGetDataBufferSize" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="CanUpdateDataBuffer" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="ContainsZeroTotalDataInstancesUponCreation" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="InitializesDataInstanceFieldsWithZero" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="InitializesDataInstanceBufferFieldsWithInvalidHashAndDataBufferAndZeroDivisor" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="SetsTheValueOfADataInstanceProperty" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="CreatingDataInstanceIncreasesDataInstanceCount" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="DataInstanceWithFieldWithElementCountGreaterOneReturnsSameValue" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="DataInstanceFieldsWithElementCountGreaterOneDoesNotInfluenceOtherField" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="ContainsZeroTotalDataLayoutsUponCreation" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="CreatingDataLayoutIncreasesDataLayoutCount" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="CanGetAndSetEffectHash" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="CanGetNumberOfDataFieldsInLayout" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="ReturnsCorrectDataFieldType" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="ReturnsCorrectDataFieldElements" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="SemanticCanBeSetAndRetrieved" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="ContainsZeroTotalDataSlotsUponCreation" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="CreatesATransformDataSlot" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="ReleasesDataSlot" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="PreallocatesMemoryPoolsBasedOnSizeInformation" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="MemoryPoolSizesInUseStayZeroUponCreation" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="PreallocatesMemoryPoolsBasedOnSizeInformationNeverShrink" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="InitializesCorrectly" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0.001" classname="AScene/4" />
    <testcase name="ContainsCreatedNode" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="ContainsZeroTotalNodesUponCreation" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="CreatingNodeIncreasesNodeCount" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="PickableObjectCreated" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="PickableObjectReleased" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="DoesNotContainPickableObjectWhichWasNotCreated" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="PickableObjectCanGetPropertiesGivenAtAllocationTime" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="PickableObjectCanSetId" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="PickableObjectCanSetCamera" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="CanDisablePickableObject" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="PickableObjectEnabledByDefault" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="hasNoRenderBuffersInitially" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="canCreateRenderBuffer" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="canGetRenderBufferProperties" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="canReleaseRenderBuffer" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="canCreateMultipleRenderBuffers" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="deletingRenderBufferDoesNotAffectOtherRenderBuffers" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="canCreateRenderGroup" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="canReleaseRenderGroup" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="canAddRenderableToRenderGroup" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="canRemoveRenderableFromRenderGroup" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="canAddRenderGroupToRenderGroup" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="canRemoveRenderGroupFromRenderGroup" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="doesNotContainRenderGroupWhichWasNotCreated" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="canReaddRenderableWithDifferentOrder" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="canReaddRenderGroupToRenderGroupWithDifferentOrder" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="RenderPassCreated" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="RenderPassHasDefaultValues" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="RenderPassReleased" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="setsCameraToRenderPass" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="DoesNotContainRenderPassWhichWasNotCreated" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="RenderPassRenderTarget" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="DisableRenderPass" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="createsRenderPassWithOrderZeroAndSetsOrderTwice" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="AssignsDefaultClearValuesToRenderPass" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="ReturnsClearParameterOfRenderPassWhichWereSetBefore" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="canAddRenderGroupToRenderPass" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="canRemoveRenderGroupFromRenderPass" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="canReaddRenderGroupWithDifferentOrder" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="canSetRenderOnce" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="CreateMultipleTargetsAndCheckTheirValidity" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="DeleteRenderTargetsAndCheckScene" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="ContainsRenderTargetInSceneKnowsExactlyAboutAllCreatedRenderTargets" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="canAddRenderBufferToRenderTarget" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="ContainsCreatedRenderable" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="ReleasesRenderable" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="ReturnsNodeOfRenderable" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="ReturnsInvalidRenderStateForNewRenderable" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="SetsRenderStateForRenderable" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="SetsDataInstanceToRenderable" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="DrawsNothingIfIndicesRangeNotSpecified" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="SetsStartIndexOfRenderable" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="SetsIndexCountOfRenderable" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="SetsRenderableVisible" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="ContainsZeroTotalRenderablesUponCreation" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="CreatingRenderableIncreasesRenderableCount" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="SetsStartVertexOfRenderable" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="ContainsCreatedState" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0.001" classname="AScene/4" />
    <testcase name="ContainsZeroTotalStatesUponCreation" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="CreatingStateIncreasesStateCount" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="AssignsDefaultValuesToNewlyCreatedState" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="SetsStateBlendFactors" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="SetsStateBlendOperations" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="SetsStateCullMode" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="SetsStateDrawMode" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="SetsStateDepthWrite" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="SetsStateDepthFunc" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="SetsStateScissorTest" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="SetsStateStencilFunc" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="SetsStateStencilOps" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="SetsStateColorWriteMask" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="CreatesStreamTextureAndCheckItsValidity" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="SetsStreamTextureForceFallbackImageSetting" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="DeleteStreamTextureAndCheckScene" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="CreatesTextureBuffer" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="ReleasesTextureBuffer" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="DoesNotContainTextureBufferWhichWasNotCreated" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="StoresTextureBufferProperties" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="UpdatesTextureBufferDataPartially" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="TextureBufferDoesNotHaveUsedRegionsUponCreation" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="UpdatesUsedRegionsWhenTextureBufferDataGetsUpdated" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="TextureSamplerCreated" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="TextureSamplerReleased" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="CalledContainsTextureSamplerOnNotExistingTextureSampler" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="AllocatedTextureSamplerHasGivenStates" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="AllocatedTextureSamplerHasGivenReferencesToResources_TextureResrouce" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="AllocatedTextureSamplerHasGivenReferencesToResources_RenderBuffer" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="AllocatedTextureSamplerHasGivenReferencesToResources_StreamTexture" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="AllocatedTextureSamplerHasGivenReferencesToResources_TextureBuffer" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="ContainsCreatedTransform" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="ReleasesTransform" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="ContainsZeroTotalTransformsUponCreation" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="CreatingTransformsIncreasesTransformsCount" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="DoesNotContainUnexistingTransform" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="SetsTranslationForTransform" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="SetsRotationForTransform" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="SetsScalingForTransform" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
    <testcase name="CanGetAssignedNodeHandle" type_param="ramses_internal::DataLayoutCachedScene" status="run" time="0" classname="AScene/4" />
  </testsuite>
  <testsuite name="AScene/5" tests="142" failures="0" disabled="0" errors="0" time="0.001">
    <testcase name="BlitPassCreated" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="BlitPassReleased" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="DoesNotContainBlitPassWhichWasNotCreated" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="BlitPassCanGetSourceAndDestinationRenderBuffers" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="BlitPassCanGetSourceAndDestinationRegions" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="CanDisableBlitPass" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="createsBlitPassWithOrderZeroAndSetsOrderTwice" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="DoesNotHaveAnyCamerasInitially" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="CountsItsCamerasCorrectly" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="ContainsCreatedCamera" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="GetsAssignedCameraNode" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="GetsAssignedDataInstance" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="CreatesARendererTypeCameraByDefault" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="ReleaseCamera" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="SetsOrthoCameraPlanes" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="SetsPerspectiveCameraPlanes" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="DataBufferCreated" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="DataBufferReleased" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="DoesNotContainDataBufferWhichWasNotCreated" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="CanGetDataBufferType" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="CanGetDataBufferDataType" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="CanGetDataBufferSize" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="CanUpdateDataBuffer" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="ContainsZeroTotalDataInstancesUponCreation" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="InitializesDataInstanceFieldsWithZero" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="InitializesDataInstanceBufferFieldsWithInvalidHashAndDataBufferAndZeroDivisor" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="SetsTheValueOfADataInstanceProperty" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="CreatingDataInstanceIncreasesDataInstanceCount" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="DataInstanceWithFieldWithElementCountGreaterOneReturnsSameValue" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="DataInstanceFieldsWithElementCountGreaterOneDoesNotInfluenceOtherField" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="ContainsZeroTotalDataLayoutsUponCreation" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="CreatingDataLayoutIncreasesDataLayoutCount" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="CanGetAndSetEffectHash" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="CanGetNumberOfDataFieldsInLayout" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="ReturnsCorrectDataFieldType" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="ReturnsCorrectDataFieldElements" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="SemanticCanBeSetAndRetrieved" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="ContainsZeroTotalDataSlotsUponCreation" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="CreatesATransformDataSlot" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="ReleasesDataSlot" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="PreallocatesMemoryPoolsBasedOnSizeInformation" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="MemoryPoolSizesInUseStayZeroUponCreation" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="PreallocatesMemoryPoolsBasedOnSizeInformationNeverShrink" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="InitializesCorrectly" type_param="ramses_internal::ActionTestScene" status="run" time="0.001" classname="AScene/5" />
    <testcase name="ContainsCreatedNode" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="ContainsZeroTotalNodesUponCreation" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="CreatingNodeIncreasesNodeCount" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="PickableObjectCreated" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="PickableObjectReleased" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="DoesNotContainPickableObjectWhichWasNotCreated" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="PickableObjectCanGetPropertiesGivenAtAllocationTime" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="PickableObjectCanSetId" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="PickableObjectCanSetCamera" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="CanDisablePickableObject" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="PickableObjectEnabledByDefault" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="hasNoRenderBuffersInitially" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="canCreateRenderBuffer" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="canGetRenderBufferProperties" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="canReleaseRenderBuffer" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="canCreateMultipleRenderBuffers" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="deletingRenderBufferDoesNotAffectOtherRenderBuffers" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="canCreateRenderGroup" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="canReleaseRenderGroup" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="canAddRenderableToRenderGroup" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="canRemoveRenderableFromRenderGroup" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="canAddRenderGroupToRenderGroup" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="canRemoveRenderGroupFromRenderGroup" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="doesNotContainRenderGroupWhichWasNotCreated" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="canReaddRenderableWithDifferentOrder" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="canReaddRenderGroupToRenderGroupWithDifferentOrder" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="RenderPassCreated" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="RenderPassHasDefaultValues" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="RenderPassReleased" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="setsCameraToRenderPass" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="DoesNotContainRenderPassWhichWasNotCreated" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="RenderPassRenderTarget" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="DisableRenderPass" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="createsRenderPassWithOrderZeroAndSetsOrderTwice" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="AssignsDefaultClearValuesToRenderPass" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="ReturnsClearParameterOfRenderPassWhichWereSetBefore" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="canAddRenderGroupToRenderPass" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="canRemoveRenderGroupFromRenderPass" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="canReaddRenderGroupWithDifferentOrder" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="canSetRenderOnce" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="CreateMultipleTargetsAndCheckTheirValidity" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="DeleteRenderTargetsAndCheckScene" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="ContainsRenderTargetInSceneKnowsExactlyAboutAllCreatedRenderTargets" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="canAddRenderBufferToRenderTarget" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="ContainsCreatedRenderable" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="ReleasesRenderable" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="ReturnsNodeOfRenderable" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="ReturnsInvalidRenderStateForNewRenderable" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="SetsRenderStateForRenderable" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="SetsDataInstanceToRenderable" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="DrawsNothingIfIndicesRangeNotSpecified" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="SetsStartIndexOfRenderable" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="SetsIndexCountOfRenderable" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="SetsRenderableVisible" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="ContainsZeroTotalRenderablesUponCreation" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="CreatingRenderableIncreasesRenderableCount" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="SetsStartVertexOfRenderable" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="ContainsCreatedState" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="ContainsZeroTotalStatesUponCreation" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="CreatingStateIncreasesStateCount" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="AssignsDefaultValuesToNewlyCreatedState" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="SetsStateBlendFactors" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="SetsStateBlendOperations" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="SetsStateCullMode" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="SetsStateDrawMode" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="SetsStateDepthWrite" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="SetsStateDepthFunc" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="SetsStateScissorTest" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="SetsStateStencilFunc" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="SetsStateStencilOps" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="SetsStateColorWriteMask" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="CreatesStreamTextureAndCheckItsValidity" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="SetsStreamTextureForceFallbackImageSetting" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="DeleteStreamTextureAndCheckScene" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="CreatesTextureBuffer" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="ReleasesTextureBuffer" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="DoesNotContainTextureBufferWhichWasNotCreated" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="StoresTextureBufferProperties" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="UpdatesTextureBufferDataPartially" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="TextureBufferDoesNotHaveUsedRegionsUponCreation" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="UpdatesUsedRegionsWhenTextureBufferDataGetsUpdated" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="TextureSamplerCreated" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="TextureSamplerReleased" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="CalledContainsTextureSamplerOnNotExistingTextureSampler" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="AllocatedTextureSamplerHasGivenStates" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="AllocatedTextureSamplerHasGivenReferencesToResources_TextureResrouce" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="AllocatedTextureSamplerHasGivenReferencesToResources_RenderBuffer" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="AllocatedTextureSamplerHasGivenReferencesToResources_StreamTexture" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="AllocatedTextureSamplerHasGivenReferencesToResources_TextureBuffer" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="ContainsCreatedTransform" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="ReleasesTransform" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="ContainsZeroTotalTransformsUponCreation" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="CreatingTransformsIncreasesTransformsCount" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="DoesNotContainUnexistingTransform" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="SetsTranslationForTransform" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="SetsRotationForTransform" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="SetsScalingForTransform" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
    <testcase name="CanGetAssignedNodeHandle" type_param="ramses_internal::ActionTestScene" status="run" time="0" classname="AScene/5" />
  </testsuite>
  <testsuite name="ATransformationCachedScene" tests="14" failures="0" disabled="0" errors="0" time="0">
    <testcase name="GivesIdentityMatricesForNodesWithoutTransform" status="run" time="0" classname="ATransformationCachedScene" />
    <testcase name="GivesIdentityMatricesForInvalidNodes" status="run" time="0" classname="ATransformationCachedScene" />
    <testcase name="GivesIdentityMatricesForNodeWithEmptyTransform" status="run" time="0" classname="ATransformationCachedScene" />
    <testcase name="GivesCorrectValueWhenTransformOfNodeIsScaled" status="run" time="0" classname="ATransformationCachedScene" />
    <testcase name="GivesCorrectValueWhenTransformOfNodeIsTranslated" status="run" time="0" classname="ATransformationCachedScene" />
    <testcase name="GivesCorrectValueWhenTransformOfNodeIsRotated" status="run" time="0" classname="ATransformationCachedScene" />
    <testcase name="UpdatesMatrixCacheAfterAddingParentWithTransform" status="run" time="0" classname="ATransformationCachedScene" />
    <testcase name="UpdatesMatrixCacheAfterChangingTransformOfParent" status="run" time="0" classname="ATransformationCachedScene" />
    <testcase name="ReturnsIdentityMatrixForUntransformedNodeAfterRemovingParentWithTransform" status="run" time="0" classname="ATransformationCachedScene" />
    <testcase name="PropagatesMatricesToMultipleChildNodes" status="run" time="0" classname="ATransformationCachedScene" />
    <testcase name="confidenceTest_UpdatesMatricesOfMultipleChildNodesWithTransform" status="run" time="0" classname="ATransformationCachedScene" />
    <testcase name="DoesNotAffectNodeWithoutTransformAfterAddingChildWithTransform" status="run" time="0" classname="ATransformationCachedScene" />
    <testcase name="UpdatesNodeMatricesWhenItHasAParentWithTransform" status="run" time="0" classname="ATransformationCachedScene" />
    <testcase name="UpdatesMatricesWhenAddingNodeAsChildOfOtherNode" status="run" time="0" classname="ATransformationCachedScene" />
  </testsuite>
  <testsuite name="AArrayResource" tests="4" failures="0" disabled="0" errors="0" time="0">
    <testcase name="hasCorrectArrayType" status="run" time="0" classname="AArrayResource" />
    <testcase name="hasCorrectElementCount" status="run" time="0" classname="AArrayResource" />
    <testcase name="hasCorrectElementType" status="run" time="0" classname="AArrayResource" />
    <testcase name="hasCorrectCacheFlag" status="run" time="0" classname="AArrayResource" />
  </testsuite>
  <testsuite name="Cityhash" tests="1" failures="0" disabled="0" errors="0" time="0.004">
    <testcase name="CalculateCorrectHashForDifferentDataSizes" status="run" time="0.004" classname="Cityhash" />
  </testsuite>
  <testsuite name="AEffectResource" tests="13" failures="0" disabled="0" errors="0" time="0">
    <testcase name="canBeCreatedWithName" status="run" time="0" classname="AEffectResource" />
    <testcase name="canBeCreatedWithShaders" status="run" time="0" classname="AEffectResource" />
    <testcase name="canBeCreatedWithInputs" status="run" time="0" classname="AEffectResource" />
    <testcase name="canGetInputsByName" status="run" time="0" classname="AEffectResource" />
    <testcase name="sameParametersGiveSameHash" status="run" time="0" classname="AEffectResource" />
    <testcase name="differentVertexShaderResultsInDifferentHash" status="run" time="0" classname="AEffectResource" />
    <testcase name="differentFragmentShaderResultsInDifferentHash" status="run" time="0" classname="AEffectResource" />
    <testcase name="differentUniformInputResultsInDifferentHash" status="run" time="0" classname="AEffectResource" />
    <testcase name="differentAttributeInputResultsInDifferentHash" status="run" time="0" classname="AEffectResource" />
    <testcase name="differentNameDoesNotChangeHash" status="run" time="0" classname="AEffectResource" />
    <testcase name="hasCorrectTypeAfterSerializeAndDeserialize" status="run" time="0" classname="AEffectResource" />
    <testcase name="isEqualAfterSerializeAndDeserialize" status="run" time="0" classname="AEffectResource" />
    <testcase name="hasNameProvidedToSerializeAfterSerializeAndDeserialize" status="run" time="0" classname="AEffectResource" />
  </testsuite>
  <testsuite name="LZ4CompressionUtilsTest" tests="6" failures="0" disabled="0" errors="0" time="0">
    <testcase name="TestEmptyCompressionFast" status="run" time="0" classname="LZ4CompressionUtilsTest" />
    <testcase name="TestEmptyCompressionHigh" status="run" time="0" classname="LZ4CompressionUtilsTest" />
    <testcase name="TestEmptyDecompression" status="run" time="0" classname="LZ4CompressionUtilsTest" />
    <testcase name="TestDecompressionZeroUncompressedSize" status="run" time="0" classname="LZ4CompressionUtilsTest" />
    <testcase name="TestSmallData" status="run" time="0" classname="LZ4CompressionUtilsTest" />
    <testcase name="TestBigData" status="run" time="0" classname="LZ4CompressionUtilsTest" />
  </testsuite>
  <testsuite name="AResource" tests="15" failures="0" disabled="0" errors="0" time="0.003">
    <testcase name="noCompressionForCompressionLevelNone" status="run" time="0.003" classname="AResource" />
    <testcase name="canGetEmptyName" status="run" time="0" classname="AResource" />
    <testcase name="canGetNonEmptyName" status="run" time="0" classname="AResource" />
    <testcase name="givesSameHashForDifferentNames" status="run" time="0" classname="AResource" />
    <testcase name="canGetType" status="run" time="0" classname="AResource" />
    <testcase name="canGetCacheFlag" status="run" time="0" classname="AResource" />
    <testcase name="returnsInvalidHashForEmptyResources" status="run" time="0" classname="AResource" />
    <testcase name="hasGivenHashWhenExplicitlySet" status="run" time="0" classname="AResource" />
    <testcase name="hasGivenHashWhenExplicitlySetForCompressed" status="run" time="0" classname="AResource" />
    <testcase name="calculatesValidHashWhenNoneSet" status="run" time="0" classname="AResource" />
    <testcase name="hashChangesWhenContentChanges" status="run" time="0" classname="AResource" />
    <testcase name="givesSameHashForSameContent" status="run" time="0" classname="AResource" />
    <testcase name="hashIsDifferentForSameContentButDifferentMetadata" status="run" time="0" classname="AResource" />
    <testcase name="contentSameAfterCompressDecompress" status="run" time="0" classname="AResource" />
    <testcase name="canCompressDecompressSameResource" status="run" time="0" classname="AResource" />
  </testsuite>
  <testsuite name="TextureResourceTest" tests="2" failures="0" disabled="0" errors="0" time="0">
    <testcase name="textureResourceStoresMetaInfo" status="run" time="0" classname="TextureResourceTest" />
    <testcase name="textureResourceStoresMetaInfoWithCorrectSizeForCubeTexture" status="run" time="0" classname="TextureResourceTest" />
  </testsuite>
  <testsuite name="AResourceContentHash" tests="7" failures="0" disabled="0" errors="0" time="0">
    <testcase name="canDefaultConstruct" status="run" time="0" classname="AResourceContentHash" />
    <testcase name="InvalidIsDefault" status="run" time="0" classname="AResourceContentHash" />
    <testcase name="canValueConstruct" status="run" time="0" classname="AResourceContentHash" />
    <testcase name="canCompare" status="run" time="0" classname="AResourceContentHash" />
    <testcase name="canSerializeDeserializeBinary" status="run" time="0" classname="AResourceContentHash" />
    <testcase name="canPrintToStream" status="run" time="0" classname="AResourceContentHash" />
    <testcase name="canBeUsedInHashContainers" status="run" time="0" classname="AResourceContentHash" />
  </testsuite>
  <testsuite name="AConnectionStatusUpdateNotifier" tests="7" failures="0" disabled="0" errors="0" time="0">
    <testcase name="doesNotNotifyAnyoneIfNooneRegistered" status="run" time="0" classname="AConnectionStatusUpdateNotifier" />
    <testcase name="doesNotNotifyListenerOfNooneConnected" status="run" time="0" classname="AConnectionStatusUpdateNotifier" />
    <testcase name="notifiesAboutAllCurrentlyConnectedParticipants" status="run" time="0" classname="AConnectionStatusUpdateNotifier" />
    <testcase name="notifiesAboutNewlyConnectedParticipants" status="run" time="0" classname="AConnectionStatusUpdateNotifier" />
    <testcase name="doesNotNotifyAfterUnregister" status="run" time="0" classname="AConnectionStatusUpdateNotifier" />
    <testcase name="notifiesAboutDisconnectingParticipants" status="run" time="0" classname="AConnectionStatusUpdateNotifier" />
    <testcase name="doesNotNotifyForAlreadyDisconnectedParticipants" status="run" time="0" classname="AConnectionStatusUpdateNotifier" />
  </testsuite>
  <testsuite name="TransportUtilitiesTest" tests="7" failures="0" disabled="0" errors="0" time="0">
    <testcase name="getSingleCallbackForSingleAction" status="run" time="0" classname="TransportUtilitiesTest" />
    <testcase name="getSingleCallbackForAllActionsWhenSendSizesLargeEnough" status="run" time="0" classname="TransportUtilitiesTest" />
    <testcase name="getMultipleCallbacksWhenNumberOfActionsIsTooSmall" status="run" time="0" classname="TransportUtilitiesTest" />
    <testcase name="getMultipleSingleActionsWhenNumberLimitSetToOne" status="run" time="0" classname="TransportUtilitiesTest" />
    <testcase name="getMultipleCompleteActionsWhenDataSizeFitsExactly" status="run" time="0" classname="TransportUtilitiesTest" />
    <testcase name="getMultipleCallbacksWhenSizeOfActionArrayIsTooSmall" status="run" time="0" classname="TransportUtilitiesTest" />
    <testcase name="getMultipleIncompleteCallbacksWhenSizeTooSmall" status="run" time="0" classname="TransportUtilitiesTest" />
  </testsuite>
  <testsuite name="RamshAPI" tests="9" failures="0" disabled="0" errors="0" time="0">
    <testcase name="printHelp" status="run" time="0" classname="RamshAPI" />
    <testcase name="triggerCommandWithOneKeyword" status="run" time="0" classname="RamshAPI" />
    <testcase name="triggerCommandWithMultipleKeywordsUsingFirstKeyword" status="run" time="0" classname="RamshAPI" />
    <testcase name="triggerCommandWithMultipleKeywordsUsingMiddleKeyword" status="run" time="0" classname="RamshAPI" />
    <testcase name="triggerCommandWithMultipleKeywordsUsingLastKeyword" status="run" time="0" classname="RamshAPI" />
    <testcase name="triggerInvalidCommand" status="run" time="0" classname="RamshAPI" />
    <testcase name="parseCommandStringTest" status="run" time="0" classname="RamshAPI" />
    <testcase name="typedCommand" status="run" time="0" classname="RamshAPI" />
    <testcase name="typedCommandWithDefaultValues" status="run" time="0" classname="RamshAPI" />
  </testsuite>
  <testsuite name="RamshCommunicationChannelConsoleTest" tests="2" failures="0" disabled="0" errors="0" time="0">
    <testcase name="processInput" status="run" time="0" classname="RamshCommunicationChannelConsoleTest" />
    <testcase name="checkPossibleLogDeadlock" status="run" time="0" classname="RamshCommunicationChannelConsoleTest" />
  </testsuite>
  <testsuite name="AClientSceneLogic_All/0" tests="37" failures="0" disabled="0" errors="0" time="0.002">
    <testcase name="doesNotSendSceneRegistrationWhenCreatingScene" type_param="ramses_internal::ClientSceneLogicShadowCopy" status="run" time="0" classname="AClientSceneLogic_All/0" />
    <testcase name="doesNotSendSceneRegistrationWhenCreatingSceneRegisteringAppAndRemovingScene" type_param="ramses_internal::ClientSceneLogicShadowCopy" status="run" time="0" classname="AClientSceneLogic_All/0" />
    <testcase name="doesNotSendSceneRegistrationWhenCreatingSceneRegisteringAppAndDisablingSceneDistribution" type_param="ramses_internal::ClientSceneLogicShadowCopy" status="run" time="0" classname="AClientSceneLogic_All/0" />
    <testcase name="isNotPublishedInitially" type_param="ramses_internal::ClientSceneLogicShadowCopy" status="run" time="0" classname="AClientSceneLogic_All/0" />
    <testcase name="clearsCollectedActionsOnFlush" type_param="ramses_internal::ClientSceneLogicShadowCopy" status="run" time="0" classname="AClientSceneLogic_All/0" />
    <testcase name="keepsPendingActionIfNotFlushed" type_param="ramses_internal::ClientSceneLogicShadowCopy" status="run" time="0" classname="AClientSceneLogic_All/0" />
    <testcase name="keepsPendingActionVectorIfNotFlushed" type_param="ramses_internal::ClientSceneLogicShadowCopy" status="run" time="0.001" classname="AClientSceneLogic_All/0" />
    <testcase name="doesNothingIfFlushingNonDistributedScene" type_param="ramses_internal::ClientSceneLogicShadowCopy" status="run" time="0" classname="AClientSceneLogic_All/0" />
    <testcase name="doesNotSendSceneOutIfSceneDistributedWithNoSubscribers" type_param="ramses_internal::ClientSceneLogicShadowCopy" status="run" time="0" classname="AClientSceneLogic_All/0" />
    <testcase name="sendsPublishOnlyOnce" type_param="ramses_internal::ClientSceneLogicShadowCopy" status="run" time="0" classname="AClientSceneLogic_All/0" />
    <testcase name="doesNotFlushAnythingForDistributedSceneWithNoSubscribers" type_param="ramses_internal::ClientSceneLogicShadowCopy" status="run" time="0" classname="AClientSceneLogic_All/0" />
    <testcase name="sendsOutSceneToSubscribedRendererWhenDistributionEnabled" type_param="ramses_internal::ClientSceneLogicShadowCopy" status="run" time="0" classname="AClientSceneLogic_All/0" />
    <testcase name="flushesPendingActionsIfSceneDistributedAndHasPendingActions" type_param="ramses_internal::ClientSceneLogicShadowCopy" status="run" time="0" classname="AClientSceneLogic_All/0" />
    <testcase name="everyFlushGeneratesSceneActionSentToSubscriber" type_param="ramses_internal::ClientSceneLogicShadowCopy" status="run" time="0" classname="AClientSceneLogic_All/0" />
    <testcase name="doesNothingIfRemovingSubscriberTwice" type_param="ramses_internal::ClientSceneLogicShadowCopy" status="run" time="0" classname="AClientSceneLogic_All/0" />
    <testcase name="canDisableDistribution" type_param="ramses_internal::ClientSceneLogicShadowCopy" status="run" time="0" classname="AClientSceneLogic_All/0" />
    <testcase name="doesNotSendSceneAgainIfEnablingDistributionSecondTime" type_param="ramses_internal::ClientSceneLogicShadowCopy" status="run" time="0" classname="AClientSceneLogic_All/0" />
    <testcase name="doesNotSendSceneAgainIfReenablingDistribution" type_param="ramses_internal::ClientSceneLogicShadowCopy" status="run" time="0" classname="AClientSceneLogic_All/0" />
    <testcase name="doesNotFlushPendingActionsIfSceneStoppedBeingDistributed" type_param="ramses_internal::ClientSceneLogicShadowCopy" status="run" time="0" classname="AClientSceneLogic_All/0" />
    <testcase name="disablesDistributionTwiceAndDoesNotSendActionsOnSecondDisable" type_param="ramses_internal::ClientSceneLogicShadowCopy" status="run" time="0" classname="AClientSceneLogic_All/0" />
    <testcase name="keepsCollectingPendingActionsIfSceneStoppedBeingDistributed" type_param="ramses_internal::ClientSceneLogicShadowCopy" status="run" time="0" classname="AClientSceneLogic_All/0" />
    <testcase name="publishesSceneAgainAfterRepublish" type_param="ramses_internal::ClientSceneLogicShadowCopy" status="run" time="0" classname="AClientSceneLogic_All/0" />
    <testcase name="doesNotKeepPendingChangesAfterRepublish" type_param="ramses_internal::ClientSceneLogicShadowCopy" status="run" time="0" classname="AClientSceneLogic_All/0" />
    <testcase name="continuesCollectingActionsAfterRepublish" type_param="ramses_internal::ClientSceneLogicShadowCopy" status="run" time="0.001" classname="AClientSceneLogic_All/0" />
    <testcase name="doesAppendFlushActionIfOtherSceneActionsAreFlushed" type_param="ramses_internal::ClientSceneLogicShadowCopy" status="run" time="0" classname="AClientSceneLogic_All/0" />
    <testcase name="flushAfterNoChangeStillProducesSceneActionsSentToSubscriber" type_param="ramses_internal::ClientSceneLogicShadowCopy" status="run" time="0" classname="AClientSceneLogic_All/0" />
    <testcase name="sendSceneSizesTogetherWithFlushIfSceneSizeIncreased" type_param="ramses_internal::ClientSceneLogicShadowCopy" status="run" time="0" classname="AClientSceneLogic_All/0" />
    <testcase name="canUseNullptrWhenReadingFlush" type_param="ramses_internal::ClientSceneLogicShadowCopy" status="run" time="0" classname="AClientSceneLogic_All/0" />
    <testcase name="doesNotSendSceneSizesTogetherWithFlushIfSceneSizeUnchanged" type_param="ramses_internal::ClientSceneLogicShadowCopy" status="run" time="0" classname="AClientSceneLogic_All/0" />
    <testcase name="sendListOfNewResourcesTogetherWithFlush" type_param="ramses_internal::ClientSceneLogicShadowCopy" status="run" time="0" classname="AClientSceneLogic_All/0" />
    <testcase name="flushClearsListsOfChangedResources" type_param="ramses_internal::ClientSceneLogicShadowCopy" status="run" time="0" classname="AClientSceneLogic_All/0" />
    <testcase name="sendListOfObsoleteResourcesTogetherWithFlush" type_param="ramses_internal::ClientSceneLogicShadowCopy" status="run" time="0" classname="AClientSceneLogic_All/0" />
    <testcase name="unpublishesSceneAndDoesNotFlushBeforeRemovingScene" type_param="ramses_internal::ClientSceneLogicShadowCopy" status="run" time="0" classname="AClientSceneLogic_All/0" />
    <testcase name="doesNotSendAnythingToSubscribersWithoutFlush" type_param="ramses_internal::ClientSceneLogicShadowCopy" status="run" time="0" classname="AClientSceneLogic_All/0" />
    <testcase name="doesSendSceneCreationToSubscriberAfterFlush" type_param="ramses_internal::ClientSceneLogicShadowCopy" status="run" time="0" classname="AClientSceneLogic_All/0" />
    <testcase name="doesSendSceneToSubscriberAfterFlush" type_param="ramses_internal::ClientSceneLogicShadowCopy" status="run" time="0" classname="AClientSceneLogic_All/0" />
    <testcase name="increasesStatisticCounterForSceneActionsSentWithFlush" type_param="ramses_internal::ClientSceneLogicShadowCopy" status="run" time="0" classname="AClientSceneLogic_All/0" />
  </testsuite>
  <testsuite name="AClientSceneLogic_All/1" tests="37" failures="0" disabled="0" errors="0" time="0.002">
    <testcase name="doesNotSendSceneRegistrationWhenCreatingScene" type_param="ramses_internal::ClientSceneLogicDirect" status="run" time="0" classname="AClientSceneLogic_All/1" />
    <testcase name="doesNotSendSceneRegistrationWhenCreatingSceneRegisteringAppAndRemovingScene" type_param="ramses_internal::ClientSceneLogicDirect" status="run" time="0" classname="AClientSceneLogic_All/1" />
    <testcase name="doesNotSendSceneRegistrationWhenCreatingSceneRegisteringAppAndDisablingSceneDistribution" type_param="ramses_internal::ClientSceneLogicDirect" status="run" time="0" classname="AClientSceneLogic_All/1" />
    <testcase name="isNotPublishedInitially" type_param="ramses_internal::ClientSceneLogicDirect" status="run" time="0" classname="AClientSceneLogic_All/1" />
    <testcase name="clearsCollectedActionsOnFlush" type_param="ramses_internal::ClientSceneLogicDirect" status="run" time="0" classname="AClientSceneLogic_All/1" />
    <testcase name="keepsPendingActionIfNotFlushed" type_param="ramses_internal::ClientSceneLogicDirect" status="run" time="0" classname="AClientSceneLogic_All/1" />
    <testcase name="keepsPendingActionVectorIfNotFlushed" type_param="ramses_internal::ClientSceneLogicDirect" status="run" time="0" classname="AClientSceneLogic_All/1" />
    <testcase name="doesNothingIfFlushingNonDistributedScene" type_param="ramses_internal::ClientSceneLogicDirect" status="run" time="0" classname="AClientSceneLogic_All/1" />
    <testcase name="doesNotSendSceneOutIfSceneDistributedWithNoSubscribers" type_param="ramses_internal::ClientSceneLogicDirect" status="run" time="0" classname="AClientSceneLogic_All/1" />
    <testcase name="sendsPublishOnlyOnce" type_param="ramses_internal::ClientSceneLogicDirect" status="run" time="0" classname="AClientSceneLogic_All/1" />
    <testcase name="doesNotFlushAnythingForDistributedSceneWithNoSubscribers" type_param="ramses_internal::ClientSceneLogicDirect" status="run" time="0" classname="AClientSceneLogic_All/1" />
    <testcase name="sendsOutSceneToSubscribedRendererWhenDistributionEnabled" type_param="ramses_internal::ClientSceneLogicDirect" status="run" time="0" classname="AClientSceneLogic_All/1" />
    <testcase name="flushesPendingActionsIfSceneDistributedAndHasPendingActions" type_param="ramses_internal::ClientSceneLogicDirect" status="run" time="0" classname="AClientSceneLogic_All/1" />
    <testcase name="everyFlushGeneratesSceneActionSentToSubscriber" type_param="ramses_internal::ClientSceneLogicDirect" status="run" time="0" classname="AClientSceneLogic_All/1" />
    <testcase name="doesNothingIfRemovingSubscriberTwice" type_param="ramses_internal::ClientSceneLogicDirect" status="run" time="0" classname="AClientSceneLogic_All/1" />
    <testcase name="canDisableDistribution" type_param="ramses_internal::ClientSceneLogicDirect" status="run" time="0" classname="AClientSceneLogic_All/1" />
    <testcase name="doesNotSendSceneAgainIfEnablingDistributionSecondTime" type_param="ramses_internal::ClientSceneLogicDirect" status="run" time="0" classname="AClientSceneLogic_All/1" />
    <testcase name="doesNotSendSceneAgainIfReenablingDistribution" type_param="ramses_internal::ClientSceneLogicDirect" status="run" time="0" classname="AClientSceneLogic_All/1" />
    <testcase name="doesNotFlushPendingActionsIfSceneStoppedBeingDistributed" type_param="ramses_internal::ClientSceneLogicDirect" status="run" time="0" classname="AClientSceneLogic_All/1" />
    <testcase name="disablesDistributionTwiceAndDoesNotSendActionsOnSecondDisable" type_param="ramses_internal::ClientSceneLogicDirect" status="run" time="0" classname="AClientSceneLogic_All/1" />
    <testcase name="keepsCollectingPendingActionsIfSceneStoppedBeingDistributed" type_param="ramses_internal::ClientSceneLogicDirect" status="run" time="0.001" classname="AClientSceneLogic_All/1" />
    <testcase name="publishesSceneAgainAfterRepublish" type_param="ramses_internal::ClientSceneLogicDirect" status="run" time="0" classname="AClientSceneLogic_All/1" />
    <testcase name="doesNotKeepPendingChangesAfterRepublish" type_param="ramses_internal::ClientSceneLogicDirect" status="run" time="0" classname="AClientSceneLogic_All/1" />
    <testcase name="continuesCollectingActionsAfterRepublish" type_param="ramses_internal::ClientSceneLogicDirect" status="run" time="0" classname="AClientSceneLogic_All/1" />
    <testcase name="doesAppendFlushActionIfOtherSceneActionsAreFlushed" type_param="ramses_internal::ClientSceneLogicDirect" status="run" time="0" classname="AClientSceneLogic_All/1" />
    <testcase name="flushAfterNoChangeStillProducesSceneActionsSentToSubscriber" type_param="ramses_internal::ClientSceneLogicDirect" status="run" time="0" classname="AClientSceneLogic_All/1" />
    <testcase name="sendSceneSizesTogetherWithFlushIfSceneSizeIncreased" type_param="ramses_internal::ClientSceneLogicDirect" status="run" time="0" classname="AClientSceneLogic_All/1" />
    <testcase name="canUseNullptrWhenReadingFlush" type_param="ramses_internal::ClientSceneLogicDirect" status="run" time="0" classname="AClientSceneLogic_All/1" />
    <testcase name="doesNotSendSceneSizesTogetherWithFlushIfSceneSizeUnchanged" type_param="ramses_internal::ClientSceneLogicDirect" status="run" time="0" classname="AClientSceneLogic_All/1" />
    <testcase name="sendListOfNewResourcesTogetherWithFlush" type_param="ramses_internal::ClientSceneLogicDirect" status="run" time="0" classname="AClientSceneLogic_All/1" />
    <testcase name="flushClearsListsOfChangedResources" type_param="ramses_internal::ClientSceneLogicDirect" status="run" time="0" classname="AClientSceneLogic_All/1" />
    <testcase name="sendListOfObsoleteResourcesTogetherWithFlush" type_param="ramses_internal::ClientSceneLogicDirect" status="run" time="0" classname="AClientSceneLogic_All/1" />
    <testcase name="unpublishesSceneAndDoesNotFlushBeforeRemovingScene" type_param="ramses_internal::ClientSceneLogicDirect" status="run" time="0" classname="AClientSceneLogic_All/1" />
    <testcase name="doesNotSendAnythingToSubscribersWithoutFlush" type_param="ramses_internal::ClientSceneLogicDirect" status="run" time="0" classname="AClientSceneLogic_All/1" />
    <testcase name="doesSendSceneCreationToSubscriberAfterFlush" type_param="ramses_internal::ClientSceneLogicDirect" status="run" time="0.001" classname="AClientSceneLogic_All/1" />
    <testcase name="doesSendSceneToSubscriberAfterFlush" type_param="ramses_internal::ClientSceneLogicDirect" status="run" time="0" classname="AClientSceneLogic_All/1" />
    <testcase name="increasesStatisticCounterForSceneActionsSentWithFlush" type_param="ramses_internal::ClientSceneLogicDirect" status="run" time="0" classname="AClientSceneLogic_All/1" />
  </testsuite>
  <testsuite name="AClientSceneLogic_ShadowCopy" tests="17" failures="0" disabled="0" errors="0" time="0.001">
    <testcase name="doesNotClearPendingActionsIfWaitingSubscriberRemoved" status="run" time="0" classname="AClientSceneLogic_ShadowCopy" />
    <testcase name="doesNotClearPendingActionsIfSubscriberRemovedIsNotLast" status="run" time="0" classname="AClientSceneLogic_ShadowCopy" />
    <testcase name="willSendSceneAgainToSubscriberThatUnsubscribedAndSubscribedAgain" status="run" time="0" classname="AClientSceneLogic_ShadowCopy" />
    <testcase name="resendsSceneAfterRepublishToReaddedSubscriber" status="run" time="0" classname="AClientSceneLogic_ShadowCopy" />
    <testcase name="sendsOutDistributedSceneToNewlySubscribedRenderer" status="run" time="0" classname="AClientSceneLogic_ShadowCopy" />
    <testcase name="doesNothingIfExistingSubscriberAddedAgain" status="run" time="0" classname="AClientSceneLogic_ShadowCopy" />
    <testcase name="canSubscribeToSceneEvenWithPendingActions" status="run" time="0" classname="AClientSceneLogic_ShadowCopy" />
    <testcase name="SendCleanSceneToNewSubscriber" status="run" time="0" classname="AClientSceneLogic_ShadowCopy" />
    <testcase name="appendsDefaultFlushInfoWhenSendingSceneToNewSubscriber" status="run" time="0" classname="AClientSceneLogic_ShadowCopy" />
    <testcase name="sendsSceneToNewlySubscribedRendererAfterFlushIfThereArePendingActions" status="run" time="0.001" classname="AClientSceneLogic_ShadowCopy" />
    <testcase name="sendsSceneToNewlySubscribedRendererWithNewResources" status="run" time="0" classname="AClientSceneLogic_ShadowCopy" />
    <testcase name="sendsSceneToNewlySubscribedRendererWithValidTimeInfoAndVersion" status="run" time="0" classname="AClientSceneLogic_ShadowCopy" />
    <testcase name="sendsSceneToNewlySubscribedRendererWithLastAppliedTimeInfoAndVersion" status="run" time="0" classname="AClientSceneLogic_ShadowCopy" />
    <testcase name="doesNotSendSceneUpdatesToNewSubscriberThatUnsubscribedBeforeFlush" status="run" time="0" classname="AClientSceneLogic_ShadowCopy" />
    <testcase name="doesSendSceneAfterFlushToLateSubscribers" status="run" time="0" classname="AClientSceneLogic_ShadowCopy" />
    <testcase name="sceneActionsAreNotModifiedWhenLastRendererUnsubscribed" status="run" time="0" classname="AClientSceneLogic_ShadowCopy" />
    <testcase name="increasesStatisticCounterForSceneActionsSentWithSendShadowCopySceneToWaitingSubscribers" status="run" time="0" classname="AClientSceneLogic_ShadowCopy" />
  </testsuite>
  <testsuite name="AClientSceneLogic_Direct" tests="15" failures="0" disabled="0" errors="0" time="0.001">
    <testcase name="doesNotClearPendingActionsIfWaitingSubscriberRemoved" status="run" time="0" classname="AClientSceneLogic_Direct" />
    <testcase name="doesNotClearPendingActionsIfSubscriberRemovedIsNotLast" status="run" time="0" classname="AClientSceneLogic_Direct" />
    <testcase name="willSendSceneAgainToSubscriberThatUnsubscribedAndSubscribedAgain" status="run" time="0" classname="AClientSceneLogic_Direct" />
    <testcase name="resendsSceneAfterRepublishToReaddedSubscriber" status="run" time="0" classname="AClientSceneLogic_Direct" />
    <testcase name="sendsOutDistributedSceneToNewlySubscribedRenderer" status="run" time="0" classname="AClientSceneLogic_Direct" />
    <testcase name="doesNotAddAgainIfExistingSubscriberAddedAgain" status="run" time="0" classname="AClientSceneLogic_Direct" />
    <testcase name="canSubscribeToSceneEvenWithPendingActions" status="run" time="0.001" classname="AClientSceneLogic_Direct" />
    <testcase name="SendCleanSceneToNewSubscriber" status="run" time="0" classname="AClientSceneLogic_Direct" />
    <testcase name="appendsDefaultFlushInfoWhenSendingSceneToNewSubscriber" status="run" time="0" classname="AClientSceneLogic_Direct" />
    <testcase name="sendsSceneToNewlySubscribedRendererWithNewResources" status="run" time="0" classname="AClientSceneLogic_Direct" />
    <testcase name="doesNotSendAnythingToNewSubscriberThatUnsubscribedBeforeFlush" status="run" time="0" classname="AClientSceneLogic_Direct" />
    <testcase name="doesSendSceneAfterFlushToLateSubscribers" status="run" time="0" classname="AClientSceneLogic_Direct" />
    <testcase name="sceneActionsAreNotModifiedWhenLastRendererUnsubscribed" status="run" time="0" classname="AClientSceneLogic_Direct" />
    <testcase name="getWaitingAndActiveSubscribersDoesWhatItSays" status="run" time="0" classname="AClientSceneLogic_Direct" />
    <testcase name="removeSubscriberRemoveOnlyGivenSubscriber" status="run" time="0" classname="AClientSceneLogic_Direct" />
  </testsuite>
  <testsuite name="ADcsmComponent" tests="119" failures="0" disabled="0" errors="0" time="0.01">
    <testcase name="registeresAndUnregistersForConnectionUpdates" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="participantConnectDisconnectDoesNoEvent" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="unknownParticipantDisconnect" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="lateConsumerGetsRemoteRegister" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="earlyConsumerGetsRemoteRegister" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="lateProviderDoesNotGetEventFromRemoteRegister" status="run" time="0.001" classname="ADcsmComponent" />
    <testcase name="earlyProviderDoesNotGetEventFromRemoteRegister" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="connectRegisterDisconnectDoesNoEvent" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="noConsumerEventWhenRemoteRegisterAfterRemove" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="noUnregisterAfterConsumerRemoved" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="localRegisterToNetworkAndLateConsumer" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="localRegisterToNetworkAndEarlyConsumer" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="localRegisterLateNetworkGetsRegister" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="localRegisterEarlyNetworkGetsbroadcastRegister" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="duplicateConnectSendRegisterAgain" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="multipleConnectDisconnectGetsRegister" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="onlyLocalRegistrationsAreSentOut" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="multipleRegistrationsArriveAtLateConsumer" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="multipleRegistrationsArriveAtEarlyConsumer" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="localProviderDoesNotLeaveTracesAfterRemoval" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="localProviderDoesNotLeaveTracesAfterUnregister" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="remoteProviderDoesNotLeaveTracesAfterUnregister" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="clearsProviderQueueWhenEnabledAndDisabled" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="clearsConsumerQueueWhenEnabledAndDisabled" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="errorWhenLocalProviderStateSetToCurrentState" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="errorWhenLocalConsumerStateSetToCurrentState" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="ignoresRemoteConnectWithSameidAsLocal" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="ignoresRemoteDisconnectWithSameidAsLocal" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="stateFlow_LocalProviderLocalConsumer_Unknown_Offered_Unknown" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="stateFlow_LocalProviderLocalConsumer_Offered_Assigned" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="stateFlow_LocalProviderLocalConsumer_Assigned_Offered" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="stateFlow_LocalProviderLocalConsumer_Assigned_ReadyRequested" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="stateFlow_LocalProviderLocalConsumer_Assigned_StopOfferRequested_Unknown" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="stateFlow_LocalProviderLocalConsumer_ReadyRequested_Assigned" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="stateFlow_LocalProviderLocalConsumer_ReadyRequested_Offered" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="stateFlow_LocalProviderLocalConsumer_ReadyRequested_StopOfferRequested_Unknown" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="stateFlow_LocalProviderLocalConsumer_ReadyRequested_Ready" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="stateFlow_LocalProviderLocalConsumer_Ready_Offered" status="run" time="0.001" classname="ADcsmComponent" />
    <testcase name="stateFlow_LocalProviderLocalConsumer_Ready_Assigned" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="stateFlow_LocalProviderLocalConsumer_Ready_StopOfferRequested" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="stateFlow_LocalProviderLocalConsumer_Ready_Shown" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="stateFlow_LocalProviderLocalConsumer_Shown_Ready" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="stateFlow_LocalProviderLocalConsumer_Shown_Assigned" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="stateFlow_LocalProviderLocalConsumer_Shown_Offered" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="stateFlow_LocalProviderLocalConsumer_Shown_StopOfferRequested" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="stateFlow_LocalProviderLocalConsumer_StopOfferRequested_Offered" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="localProvider_nonTransitions_Unknown" status="run" time="0.001" classname="ADcsmComponent" />
    <testcase name="localProvider_nonTransitions_Offered" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="localProvider_nonTransitions_Assigned" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="localProvider_nonTransitions_ReadyRequested" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="localProvider_nonTransitions_Ready" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="localProvider_nonTransitions_Shown" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="localProvider_nonTransitions_StopOfferRequested" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="stateFlow_LocalProviderRemoteConsumer_AllStates" status="run" time="0.001" classname="ADcsmComponent" />
    <testcase name="stateFlow_RemoteProviderLocalConsumer_Unknown_Offered_Unknown" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="stateFlow_RemoteProviderLocalConsumer_Offered_Assigned" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="stateFlow_RemoteProviderLocalConsumer_Assigned_Offered" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="stateFlow_RemoteProviderLocalConsumer_Assigned_ReadyRequested" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="stateFlow_RemoteProviderLocalConsumer_Assigned_StopOfferRequested_Unknown" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="stateFlow_RemoteProviderLocalConsumer_ReadyRequested_Assigned" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="stateFlow_RemoteProviderLocalConsumer_ReadyRequested_Offered" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="stateFlow_RemoteProviderLocalConsumer_ReadyRequested_StopOfferRequested_Unknown" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="stateFlow_RemoteProviderLocalConsumer_ReadyRequested_Ready" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="stateFlow_RemoteProviderLocalConsumer_Ready_Offered" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="stateFlow_RemoteProviderLocalConsumer_Ready_Assigned" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="stateFlow_RemoteProviderLocalConsumer_Ready_StopOfferRequested" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="stateFlow_RemoteProviderLocalConsumer_Ready_Shown" status="run" time="0.001" classname="ADcsmComponent" />
    <testcase name="stateFlow_RemoteProviderLocalConsumer_Shown_Ready" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="stateFlow_RemoteProviderLocalConsumer_Shown_Assigned" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="stateFlow_RemoteProviderLocalConsumer_Shown_Offered" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="stateFlow_RemoteProviderLocalConsumer_Shown_StopOfferRequested" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="stateFlow_RemoteProviderLocalConsumer_StopOfferRequested_Offered" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="handleFunctionsDoNothingWithoutLocalReceiver" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="remoteProviderDisconnectRemovesAllContent" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="localProviderDisconnectRemovesAllContent" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="sendFailsWithoutActiveProvider" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="sendFailsWithoutActiveConsumer" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="stateFlow_LocalProviderLocalConsumer_Offered_Disable_Consumer" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="stateFlow_RemoteProviderLocalConsumer_Offered_Disable_Consumer" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="stateFlow_LocalProviderLocalConsumer_Offered_Disable_Provider" status="run" time="0.001" classname="ADcsmComponent" />
    <testcase name="stateFlow_RemoteProviderLocalConsumer_Offered_Disconnect_Provider" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="stateFlow_LocalProviderRemoteConsumer_Offered_Disable_Provider" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="stateFlow_LocalProviderRemoteConsumer_Offered_Disconnect_Consumer" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="stateFlow_LocalProviderLocalConsumer_Assigned_Disable_Consumer" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="stateFlow_RemoteProviderLocalConsumer_Assigned_Disable_Consumer" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="stateFlow_LocalProviderLocalConsumer_Assigned_Disable_Provider" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="stateFlow_RemoteProviderLocalConsumer_Assigned_Disconnect_Provider" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="stateFlow_LocalProviderRemoteConsumer_Assigned_Disable_Provider" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="stateFlow_LocalProviderRemoteConsumer_Assigned_Disconnect_Consumer" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="stateFlow_LocalProviderLocalConsumer_StopOfferRequested_Disable_Consumer" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="stateFlow_RemoteProviderLocalConsumer_StopOfferRequested_Disable_Consumer" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="stateFlow_LocalProviderLocalConsumer_StopOfferRequested_Disable_Provider" status="run" time="0.001" classname="ADcsmComponent" />
    <testcase name="stateFlow_RemoteProviderLocalConsumer_StopOfferRequested_Disconnect_Provider" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="stateFlow_LocalProviderRemoteConsumer_StopOfferRequested_Disable_Provider" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="stateFlow_LocalProviderRemoteConsumer_StopOfferRequested_Disconnect_Consumer" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="canLocallyOfferContentPreviouslyOfferedByRemote" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="canRemotelyOfferContentPreviouslyOfferedByLocal" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="canRemotelyOfferContentPreviouslyOfferedByOtherRemote" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="sendContentReadyFailsWhenContentNotKnown" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="sendContentReadyFailsWhenContentStateUnknown" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="sendContentReadyFailsWhenContentProvidedByOther" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="sendContentReadyFailsWithOInvalidTechnicalContentType" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="sendContentFocusRequestFailsWhenNotProvidingContent" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="sendCanvasSizeChangeFailsForContentStateUnknown" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="canSendCanvasSizeChangeToRemoteProvider" status="run" time="0.001" classname="ADcsmComponent" />
    <testcase name="sendContentStateChangeFailsForInvalidState" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="canCallLogFunctions" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="forceStopOfferForLocalContentOnDisconnect" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="canSendMetadataUpdateWithoutConsumer" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="cannotSendMetadataUpdateForUnknownContent" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="storesMetadataUpdateForLateLocalConsumerAndSendsUpdatesAfterwards" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="storesMetadataUpdateForLateRemoteConsumerAndSendsUpdatesAfterwards" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="canHandleMetadataUpdateFromRemote" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="ignoredMetadataUpdateInOfferedFromRemote" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="ignoresMetadataUpdateFromUnknownRemote" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="ignoresMetadataUpdateForUnknownContentFromRemote" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="ignoresMetadataUpdateFromWrongRemote" status="run" time="0" classname="ADcsmComponent" />
    <testcase name="metadataClearedWhenLocalProviderGone" status="run" time="0.001" classname="ADcsmComponent" />
    <testcase name="metadataClearedWhenLocalProviderUnoffers" status="run" time="0" classname="ADcsmComponent" />
  </testsuite>
  <testsuite name="ADcsmComponentNotConnected" tests="3" failures="0" disabled="0" errors="0" time="0">
    <testcase name="hasProperConnectDisconnectChecking" status="run" time="0" classname="ADcsmComponentNotConnected" />
    <testcase name="doesNotSendBroadcastsBeforeConnected" status="run" time="0" classname="ADcsmComponentNotConnected" />
    <testcase name="doesNotSendBroadcastsAfterDisconnect" status="run" time="0" classname="ADcsmComponentNotConnected" />
  </testsuite>
  <testsuite name="ADcsmComponentThreadTest" tests="1" failures="0" disabled="0" errors="0" time="0.606">
    <testcase name="run" status="run" time="0.606" classname="ADcsmComponentThreadTest" />
  </testsuite>
  <testsuite name="ADcsmMetadata" tests="41" failures="0" disabled="0" errors="0" time="0">
    <testcase name="initiallyEmpty" status="run" time="0" classname="ADcsmMetadata" />
    <testcase name="canSetGetPreviewImagePngHeader" status="run" time="0" classname="ADcsmMetadata" />
    <testcase name="canSetGetPreviewImagePngShort" status="run" time="0" classname="ADcsmMetadata" />
    <testcase name="canSetGetPreviewImagePngLong" status="run" time="0" classname="ADcsmMetadata" />
    <testcase name="cannotSetInvalidPng" status="run" time="0" classname="ADcsmMetadata" />
    <testcase name="canHandleTooShortPngData" status="run" time="0" classname="ADcsmMetadata" />
    <testcase name="canSetGetRealPngImage" status="run" time="0" classname="ADcsmMetadata" />
    <testcase name="canSetGetPreviewDescription" status="run" time="0" classname="ADcsmMetadata" />
    <testcase name="canSetGetWidgetOrder" status="run" time="0" classname="ADcsmMetadata" />
    <testcase name="canSetGetWidgetHUDline" status="run" time="0" classname="ADcsmMetadata" />
    <testcase name="canSetGetCarModel" status="run" time="0" classname="ADcsmMetadata" />
    <testcase name="canSetGetCarModelView" status="run" time="0" classname="ADcsmMetadata" />
    <testcase name="canSetGetCarModelVisibility" status="run" time="0" classname="ADcsmMetadata" />
    <testcase name="canCompare" status="run" time="0" classname="ADcsmMetadata" />
    <testcase name="canCopyConstruct" status="run" time="0" classname="ADcsmMetadata" />
    <testcase name="canCopyAssign" status="run" time="0" classname="ADcsmMetadata" />
    <testcase name="canMoveContruct" status="run" time="0" classname="ADcsmMetadata" />
    <testcase name="canMoveAssign" status="run" time="0" classname="ADcsmMetadata" />
    <testcase name="canSerializeDeserializeEmpty" status="run" time="0" classname="ADcsmMetadata" />
    <testcase name="canSerializeDeserializeFilled" status="run" time="0" classname="ADcsmMetadata" />
    <testcase name="canSerializeDeserializeSomeSet" status="run" time="0" classname="ADcsmMetadata" />
    <testcase name="canSetPngToNewValue" status="run" time="0" classname="ADcsmMetadata" />
    <testcase name="canSetDescriptionToNewValue" status="run" time="0" classname="ADcsmMetadata" />
    <testcase name="canSetWidgetOrderToNewValue" status="run" time="0" classname="ADcsmMetadata" />
    <testcase name="canSetWidgetbackgroundIDToNewValue" status="run" time="0" classname="ADcsmMetadata" />
    <testcase name="canSetWidgetHUDlineIDToNewValue" status="run" time="0" classname="ADcsmMetadata" />
    <testcase name="canSetCarModelToNewValue" status="run" time="0" classname="ADcsmMetadata" />
    <testcase name="canSetCarModelViewToNewValue" status="run" time="0" classname="ADcsmMetadata" />
    <testcase name="canSetCarModelVisibilityToNewValue" status="run" time="0" classname="ADcsmMetadata" />
    <testcase name="canUpdatePngFromOther" status="run" time="0" classname="ADcsmMetadata" />
    <testcase name="canUpdateDescriptionFromOther" status="run" time="0" classname="ADcsmMetadata" />
    <testcase name="canUpdateWidgetOrderFromOther" status="run" time="0" classname="ADcsmMetadata" />
    <testcase name="canUpdateWidgetbackgroundIDFromOther" status="run" time="0" classname="ADcsmMetadata" />
    <testcase name="canUpdateWidgetHUDLineFromOther" status="run" time="0" classname="ADcsmMetadata" />
    <testcase name="canUpdateCarModelFromOther" status="run" time="0" classname="ADcsmMetadata" />
    <testcase name="canUpdateCarModelViewLineFromOther" status="run" time="0" classname="ADcsmMetadata" />
    <testcase name="canUpdateCarModelVisibilityFromOther" status="run" time="0" classname="ADcsmMetadata" />
    <testcase name="canUpdateEmptyWithValues" status="run" time="0" classname="ADcsmMetadata" />
    <testcase name="canSkipDeserializeUnknownTypes" status="run" time="0" classname="ADcsmMetadata" />
    <testcase name="ignoresUnexpectedMetadataVersion" status="run" time="0" classname="ADcsmMetadata" />
    <testcase name="canUseInLogs" status="run" time="0" classname="ADcsmMetadata" />
  </testsuite>
  <testsuite name="AResourceComponentTest" tests="45" failures="0" disabled="0" errors="0" time="0.003">
    <testcase name="ResolveResources_CallsResourceAvailableForCompletedObjectHandlerForExistingObjects" status="run" time="0" classname="AResourceComponentTest" />
    <testcase name="CanGetAlreadyManagedResource" status="run" time="0" classname="AResourceComponentTest" />
    <testcase name="ResolveResources_RequestResourceFromProviderIfNotAvailableLocaly" status="run" time="0" classname="AResourceComponentTest" />
    <testcase name="ResolveResources_RequestResourceFromProviderIfNotAvailableLocalyAnymore" status="run" time="0.001" classname="AResourceComponentTest" />
    <testcase name="ResolveResources_TriggersLoadingOfAvailableResourceFromFile" status="run" time="0" classname="AResourceComponentTest" />
    <testcase name="RequestHashMultipleTimesAsyncBeforeLoadingThreadExecutes" status="run" time="0" classname="AResourceComponentTest" />
    <testcase name="HandleRequestHashMultipleTimesBeforeLoadingThreadExecutes" status="run" time="0" classname="AResourceComponentTest" />
    <testcase name="ReloadFromSameResourceFile_doesntLeak" status="run" time="0" classname="AResourceComponentTest" />
    <testcase name="ReloadFromSameResourceFileWhileKeepingHashReference_doesntLeak" status="run" time="0" classname="AResourceComponentTest" />
    <testcase name="RequestResourcesAsync_RequestResourceFromProviderIfNotAvailableLocalyAnymore" status="run" time="0" classname="AResourceComponentTest" />
    <testcase name="CancelResourceRequest_IgnoresResourceReceivedIfRequestCanceled" status="run" time="0" classname="AResourceComponentTest" />
    <testcase name="CancelResourceRequest_StillHandleWhenOnlyOneOutOfTwoRequestsGotCancelled" status="run" time="0" classname="AResourceComponentTest" />
    <testcase name="CancelResourceRequest_IgnoresResourceReceivedIfAllRequestsCanceled" status="run" time="0" classname="AResourceComponentTest" />
    <testcase name="CancelResourceRequest_ResourceWillBeRetrievedAgainAfterCancelledRetrieval" status="run" time="0" classname="AResourceComponentTest" />
    <testcase name="handleResourcesNotAvailableCancelsAllResourceRequestsForThisResource" status="run" time="0" classname="AResourceComponentTest" />
    <testcase name="CanHandleMultipleResourceHashesInOneRequest" status="run" time="0" classname="AResourceComponentTest" />
    <testcase name="DoesNotRequestAlreadyRequestedResource" status="run" time="0" classname="AResourceComponentTest" />
    <testcase name="FiltersOutAlreadyRequestedResourcesFromProvider" status="run" time="0" classname="AResourceComponentTest" />
    <testcase name="FiltersOutAlreadyRequestedResourcesFromDifferentProvider" status="run" time="0" classname="AResourceComponentTest" />
    <testcase name="AllowsRequestingResourceAgainIfClientAnsweredResourceNotAvailable" status="run" time="0" classname="AResourceComponentTest" />
    <testcase name="RequestFromSceneProviderIfResourceLocationIsNotGiven" status="run" time="0" classname="AResourceComponentTest" />
    <testcase name="CanHandleResourceReceivedFromSource" status="run" time="0" classname="AResourceComponentTest" />
    <testcase name="PartiallyReceivedResourcesAreNotPassedToArrivedResources" status="run" time="0" classname="AResourceComponentTest" />
    <testcase name="ResourcesArePassedToArrivedResourcesWhenAllFragmentsAreReceived" status="run" time="0" classname="AResourceComponentTest" />
    <testcase name="ResourceFragmentsFromOtherParticipantsAreIgnored" status="run" time="0" classname="AResourceComponentTest" />
    <testcase name="DropReceivedResourceFragmentsWhenProvidingParticipantDisconnects" status="run" time="0" classname="AResourceComponentTest" />
    <testcase name="CanDeleteResourcesLoadedFromFile" status="run" time="0" classname="AResourceComponentTest" />
    <testcase name="HandleResourceRequest_SendsExistingResource" status="run" time="0" classname="AResourceComponentTest" />
    <testcase name="HandleResourceRequest_SendsMultipleExistingResourcesAtOnce" status="run" time="0" classname="AResourceComponentTest" />
    <testcase name="HandleResourceRequest_LoadsResourceFromFileAndSendsIt" status="run" time="0" classname="AResourceComponentTest" />
    <testcase name="HandleResourceRequest_LoadsMultipleResourcesFromFileAndSendsThem" status="run" time="0" classname="AResourceComponentTest" />
    <testcase name="HandleResourceRequest_handlesMixedRequestOfExistingAndFromFileResources" status="run" time="0" classname="AResourceComponentTest" />
    <testcase name="HandleResourceRequest_TriesToLoadResourceFromNonExistentFile" status="run" time="0" classname="AResourceComponentTest" />
    <testcase name="HandleResourceRequest_sendNotAvailableForUnknownResources" status="run" time="0" classname="AResourceComponentTest" />
    <testcase name="SendsRemoteRequestToProviderIfAvailabilityUnknown" status="run" time="0" classname="AResourceComponentTest" />
    <testcase name="AfterInitResourcesAreEmpty" status="run" time="0" classname="AResourceComponentTest" />
    <testcase name="ManageResourcesTakesOwnership" status="run" time="0" classname="AResourceComponentTest" />
    <testcase name="canReturnAllResourcesManaged" status="run" time="0" classname="AResourceComponentTest" />
    <testcase name="canReturnHashUsageReferringToKnownResource" status="run" time="0" classname="AResourceComponentTest" />
    <testcase name="DoesNotSendsInformationAboutAvailableResourcesToNewParticant" status="run" time="0" classname="AResourceComponentTest" />
    <testcase name="hasNoArrivedResourcesInitially" status="run" time="0" classname="AResourceComponentTest" />
    <testcase name="keepsTrackOfArrivedResources" status="run" time="0" classname="AResourceComponentTest" />
    <testcase name="keepsTrackOfArrivedResourcesPerRequesterEach" status="run" time="0" classname="AResourceComponentTest" />
    <testcase name="popsArrivedResources" status="run" time="0" classname="AResourceComponentTest" />
    <testcase name="canRemoveResourceFile" status="run" time="0.001" classname="AResourceComponentTest" />
  </testsuite>
  <testsuite name="AResourceComponentWithThreadedTaskExecutorTest" tests="1" failures="0" disabled="0" errors="0" time="0.005">
    <testcase name="HandleResourceRequest_AsynchronousLoadingResourceFromFileAndSendsIt" status="run" time="0.005" classname="AResourceComponentWithThreadedTaskExecutorTest" />
  </testsuite>
  <testsuite name="AResourceComponentWithSingleResourceLoadLimitTest" tests="2" failures="0" disabled="0" errors="0" time="0">
    <testcase name="LoadsOnlySingleResourceAtATimeWhenTriggeredFromLocal" status="run" time="0" classname="AResourceComponentWithSingleResourceLoadLimitTest" />
    <testcase name="LoadsOnlySingleResourceAtATimeWhenTriggeredFromRemote" status="run" time="0" classname="AResourceComponentWithSingleResourceLoadLimitTest" />
  </testsuite>
  <testsuite name="AResourceFileRegistry" tests="4" failures="0" disabled="0" errors="0" time="0">
    <testcase name="CannotFindNotRegisteredResourceFile" status="run" time="0" classname="AResourceFileRegistry" />
    <testcase name="FindRegisteredResourceFile" status="run" time="0" classname="AResourceFileRegistry" />
    <testcase name="keepsHashUsageOfRegisteredResources" status="run" time="0" classname="AResourceFileRegistry" />
    <testcase name="storesResourceFileEntryWithResourceInfo" status="run" time="0" classname="AResourceFileRegistry" />
  </testsuite>
  <testsuite name="AResourceHashUsage" tests="5" failures="0" disabled="0" errors="0" time="0">
    <testcase name="callsOnZeroCallbackWhenGoingOutOfScope" status="run" time="0" classname="AResourceHashUsage" />
    <testcase name="callsOnZeroCallbackWhenLastUsageGoesOutOfScope" status="run" time="0" classname="AResourceHashUsage" />
    <testcase name="isNotEqualWhenPointingDifferentHashes" status="run" time="0" classname="AResourceHashUsage" />
    <testcase name="isEqualWhenPointingToSameHash" status="run" time="0" classname="AResourceHashUsage" />
    <testcase name="ReturnsCorrectHash" status="run" time="0" classname="AResourceHashUsage" />
  </testsuite>
  <testsuite name="AResourcePersistation" tests="6" failures="0" disabled="0" errors="0" time="0.001">
    <testcase name="WriteRead_TextureResource" status="run" time="0" classname="AResourcePersistation" />
    <testcase name="WriteRead_TextureResourceCube" status="run" time="0" classname="AResourcePersistation" />
    <testcase name="WriteRead_VertexArrayResource" status="run" time="0" classname="AResourcePersistation" />
    <testcase name="WriteRead_Index16ArrayResource" status="run" time="0" classname="AResourcePersistation" />
    <testcase name="WriteRead_Index32ArrayResource" status="run" time="0" classname="AResourcePersistation" />
    <testcase name="WriteRead_EffectResource" status="run" time="0.001" classname="AResourcePersistation" />
  </testsuite>
  <testsuite name="ResourcePersistation" tests="1" failures="0" disabled="0" errors="0" time="0">
    <testcase name="sandwich_writeThreeResources_ReadOneBackBasedTableOfContentsInformation" status="run" time="0" classname="ResourcePersistation" />
  </testsuite>
  <testsuite name="AResourceProviderAndConsumerTest" tests="3" failures="0" disabled="0" errors="0" time="0">
    <testcase name="InformOfAvailableResourceCanDeclareLocationOfResource" status="run" time="0" classname="AResourceProviderAndConsumerTest" />
    <testcase name="ConsumerResourcesIsValidEvenAfterProviderResourceDeleted" status="run" time="0" classname="AResourceProviderAndConsumerTest" />
    <testcase name="IgnoresResourceRequestIfProviderDeletedResourceBeforeRequestIsMade" status="run" time="0" classname="AResourceProviderAndConsumerTest" />
  </testsuite>
  <testsuite name="AResourceStorage" tests="18" failures="0" disabled="0" errors="0" time="0">
    <testcase name="InitiallyContainsNoResources" status="run" time="0" classname="AResourceStorage" />
    <testcase name="DeletesResourceWhenManagedResourceGoesOutOfScope" status="run" time="0" classname="AResourceStorage" />
    <testcase name="ReturnsNumberOfBytesUsedByRegisteredResources" status="run" time="0" classname="AResourceStorage" />
    <testcase name="ManageSameResourceContentMultipleTimesCountsBytescorrectly" status="run" time="0" classname="AResourceStorage" />
    <testcase name="CanInformListenerHowManyBytesAreCurrentlyUsed" status="run" time="0" classname="AResourceStorage" />
    <testcase name="DoesNotDeleteResourceWhenManagedResourceGoesOutOfScopeUntilHashUsageIsAlsoGone" status="run" time="0" classname="AResourceStorage" />
    <testcase name="DeletesResourceWhenOnlyHashUsageIsLeftButDeletionOK" status="run" time="0" classname="AResourceStorage" />
    <testcase name="StillMaintainsDeletionAllowedWhenSecondResourceWithNotAllowedIsCreated" status="run" time="0" classname="AResourceStorage" />
    <testcase name="DeletionAllowedCanButUpgradedToTrueByFollowupResourceWhereItIsAllowed" status="run" time="0" classname="AResourceStorage" />
    <testcase name="DeletionAllowedStateIsMaintainedEvenWhenResourceWasAlreadyDeletedOnce" status="run" time="0" classname="AResourceStorage" />
    <testcase name="DeletesResourceAfterAllManagedResourcesGoOutOfScope" status="run" time="0" classname="AResourceStorage" />
    <testcase name="ReturnsAManagedResource" status="run" time="0" classname="AResourceStorage" />
    <testcase name="CanReturnAHashUsageForAPreviouslyUnknownHash" status="run" time="0" classname="AResourceStorage" />
    <testcase name="ReturnEmptyManagedResourceAlsoWhenAlreadyExistingAsHashUsage" status="run" time="0" classname="AResourceStorage" />
    <testcase name="ReturnsEmptyWhenAskesForUnavailableResourceHash" status="run" time="0" classname="AResourceStorage" />
    <testcase name="ReturnsAllManagedResources" status="run" time="0" classname="AResourceStorage" />
    <testcase name="StoresAndReturnsResourceInfo" status="run" time="0" classname="AResourceStorage" />
    <testcase name="StoresResourceInfoFromProvidedResource" status="run" time="0" classname="AResourceStorage" />
  </testsuite>
  <testsuite name="AResourceStreamSerialization" tests="20" failures="0" disabled="0" errors="0" time="0.008">
    <testcase name="canSerializeSingleResourceIntoLargerPacket" status="run" time="0" classname="AResourceStreamSerialization" />
    <testcase name="packetWithSingleResourceHasExpectedSize" status="run" time="0" classname="AResourceStreamSerialization" />
    <testcase name="canSerializeMultipleResourceIntoLargerPacket" status="run" time="0" classname="AResourceStreamSerialization" />
    <testcase name="packetWithMultipleResourceHasExpectedSize" status="run" time="0" classname="AResourceStreamSerialization" />
    <testcase name="canSerializeMultipleResourcesIntoMultiplePackets" status="run" time="0.002" classname="AResourceStreamSerialization" />
    <testcase name="canSpreadSingleLargeResourceOverMultiplePackets" status="run" time="0" classname="AResourceStreamSerialization" />
    <testcase name="canSerializeSingleBigResourceFollowedByMultipleSmallOnes" status="run" time="0.002" classname="AResourceStreamSerialization" />
    <testcase name="canSerializeSingleSmallResourceFollowedByBigOne" status="run" time="0.001" classname="AResourceStreamSerialization" />
    <testcase name="canSerializeSingleResourceIntoExactlyFittingPacket" status="run" time="0" classname="AResourceStreamSerialization" />
    <testcase name="onlyUsesSizeReallyNeededForResourceEvenIfPacketIsLarger" status="run" time="0" classname="AResourceStreamSerialization" />
    <testcase name="usesSecondPacketIfResourceNeedsOneByteMoreThanAvailable" status="run" time="0" classname="AResourceStreamSerialization" />
    <testcase name="serializeDoesNotFullyUsePacketIfFrameInfoWouldBeSplit" status="run" time="0" classname="AResourceStreamSerialization" />
    <testcase name="serializeSplitsExactlyAfterFrameInfo" status="run" time="0" classname="AResourceStreamSerialization" />
    <testcase name="splitSerializeInResourceMetadata" status="run" time="0" classname="AResourceStreamSerialization" />
    <testcase name="splitSerializeExactlyAfterResourceMetadata" status="run" time="0" classname="AResourceStreamSerialization" />
    <testcase name="canSerializeTwoConsecutiveIndependantStreams" status="run" time="0" classname="AResourceStreamSerialization" />
    <testcase name="deserializeFailsOnWrongOrderOfPackets" status="run" time="0.001" classname="AResourceStreamSerialization" />
    <testcase name="deserializeFailsWhenPacketInMiddleMissing" status="run" time="0" classname="AResourceStreamSerialization" />
    <testcase name="deserializeFailsWhenFirstPacketMissing" status="run" time="0.001" classname="AResourceStreamSerialization" />
    <testcase name="deserializeFailsWhenLastPacketMissingAndNewStreamIsStarted" status="run" time="0.001" classname="AResourceStreamSerialization" />
  </testsuite>
  <testsuite name="AResourceStreamSerializationTyped/0" tests="2" failures="0" disabled="0" errors="0" time="0">
    <testcase name="canSerializeDeserializeToSameResources" type_param="ramses_internal::TextureResource" status="run" time="0" classname="AResourceStreamSerializationTyped/0" />
    <testcase name="canSerializeCompressedResourceSAndResultsInSameResourceSAfterDecompression" type_param="ramses_internal::TextureResource" status="run" time="0" classname="AResourceStreamSerializationTyped/0" />
  </testsuite>
  <testsuite name="AResourceStreamSerializationTyped/1" tests="2" failures="0" disabled="0" errors="0" time="0.001">
    <testcase name="canSerializeDeserializeToSameResources" type_param="ramses_internal::ArrayResource" status="run" time="0.001" classname="AResourceStreamSerializationTyped/1" />
    <testcase name="canSerializeCompressedResourceSAndResultsInSameResourceSAfterDecompression" type_param="ramses_internal::ArrayResource" status="run" time="0" classname="AResourceStreamSerializationTyped/1" />
  </testsuite>
  <testsuite name="AResourceStreamSerializationTyped/2" tests="2" failures="0" disabled="0" errors="0" time="0.001">
    <testcase name="canSerializeDeserializeToSameResources" type_param="ramses_internal::EffectResource" status="run" time="0" classname="AResourceStreamSerializationTyped/2" />
    <testcase name="canSerializeCompressedResourceSAndResultsInSameResourceSAfterDecompression" type_param="ramses_internal::EffectResource" status="run" time="0.001" classname="AResourceStreamSerializationTyped/2" />
  </testsuite>
  <testsuite name="AResourceTableOfContents" tests="4" failures="0" disabled="0" errors="0" time="0">
    <testcase name="doesNotContainUnregisteredHash" status="run" time="0" classname="AResourceTableOfContents" />
    <testcase name="containsRegisteredContents" status="run" time="0" classname="AResourceTableOfContents" />
    <testcase name="canWriteAndReadTableOfContentsWithStreams" status="run" time="0" classname="AResourceTableOfContents" />
    <testcase name="returnFalseIfReadingTableOfContentsWasNotSuccessfull" status="run" time="0" classname="AResourceTableOfContents" />
  </testsuite>
  <testsuite name="ASceneGraphComponent" tests="36" failures="0" disabled="0" errors="0" time="0.033">
    <testcase name="sendsSceneToLocalConsumer" status="run" time="0" classname="ASceneGraphComponent" />
    <testcase name="doesntSendSceneIfLocalConsumerIsntSet" status="run" time="0" classname="ASceneGraphComponent" />
    <testcase name="sendsSceneToRemoteProvider" status="run" time="0" classname="ASceneGraphComponent" />
    <testcase name="publishesSceneAtLocalConsumerInLocalAndRemoteMode" status="run" time="0" classname="ASceneGraphComponent" />
    <testcase name="publishesSceneAtLocalConsumerInLocalOnlyMode" status="run" time="0" classname="ASceneGraphComponent" />
    <testcase name="doesntPublishSceneIfLocalConsumerIsntSet" status="run" time="0" classname="ASceneGraphComponent" />
    <testcase name="doesNotPublishSceneToRemoteProviderInLocalOnlyMode" status="run" time="0" classname="ASceneGraphComponent" />
    <testcase name="publishesSceneAtRemoteProvider" status="run" time="0" classname="ASceneGraphComponent" />
    <testcase name="alreadyPublishedSceneGetsRepublishedWhenLocalConsumerIsSet" status="run" time="0" classname="ASceneGraphComponent" />
    <testcase name="unpublishesSceneAtLocalConsumer" status="run" time="0" classname="ASceneGraphComponent" />
    <testcase name="doesntUnpublishSceneIfLocalConsumerIsntSet" status="run" time="0" classname="ASceneGraphComponent" />
    <testcase name="doesNotUnpublishesSceneAtRemoteProviderIfSceneWasPublishedLocalOnly" status="run" time="0" classname="ASceneGraphComponent" />
    <testcase name="unpublishesSceneAtRemoteProvider" status="run" time="0" classname="ASceneGraphComponent" />
    <testcase name="sendsAvailableScenesToNewParticipant" status="run" time="0" classname="ASceneGraphComponent" />
    <testcase name="doesNotSendAvailableSceneToNewParticipantIfLocalOnlyScene" status="run" time="0" classname="ASceneGraphComponent" />
    <testcase name="subscribeSceneAtLocalProvider" status="run" time="0" classname="ASceneGraphComponent" />
    <testcase name="doesntSubscribeSceneIfLocalProviderIsntSet" status="run" time="0" classname="ASceneGraphComponent" />
    <testcase name="subscribeSceneAtRemoteConsumer" status="run" time="0" classname="ASceneGraphComponent" />
    <testcase name="unsubscribesSceneAtLocalProvider" status="run" time="0" classname="ASceneGraphComponent" />
    <testcase name="doesntUnsubscribeSceneIfLocalProviderIsntSet" status="run" time="0" classname="ASceneGraphComponent" />
    <testcase name="unsubscribesSceneAtRemoteConsumer" status="run" time="0" classname="ASceneGraphComponent" />
    <testcase name="sendsSceneActionToLocalConsumer" status="run" time="0" classname="ASceneGraphComponent" />
    <testcase name="doesntSendSceneActionIfLocalConsumerIsntSet" status="run" time="0" classname="ASceneGraphComponent" />
    <testcase name="sendsSceneActionToRemoteProvider" status="run" time="0" classname="ASceneGraphComponent" />
    <testcase name="sendsAllSceneActionsAtOnceToRemoteProvider" status="run" time="0.001" classname="ASceneGraphComponent" />
    <testcase name="doesNotsendSceneActionListToRemoteIfSceneWasPublishedLocalOnly" status="run" time="0" classname="ASceneGraphComponent" />
    <testcase name="canRepublishALocalOnlySceneToBeDistributedRemotely" status="run" time="0" classname="ASceneGraphComponent" />
    <testcase name="canRepublishARemoteSceneToBeLocalOnly" status="run" time="0" classname="ASceneGraphComponent" />
    <testcase name="sceneactionCounterIsAlwaysZeroWithLocalScenes" status="run" time="0" classname="ASceneGraphComponent" />
    <testcase name="sceneactionCounterIsCountingUpForNOnLocalScenes" status="run" time="0" classname="ASceneGraphComponent" />
    <testcase name="sceneactionCounterIsCountingAccordingToNumberOfSentChunks" status="run" time="0" classname="ASceneGraphComponent" />
    <testcase name="sceneactionCounterIsWrappedAround" status="run" time="0.031" classname="ASceneGraphComponent" />
    <testcase name="disconnectFromNetworkBroadcastsScenesUnavailableOnNetworkOnly" status="run" time="0" classname="ASceneGraphComponent" />
    <testcase name="disconnectFromNetworkBroadcastsScenesUnavailableOnNetworkForAllRemoteScenes" status="run" time="0" classname="ASceneGraphComponent" />
    <testcase name="sendsPublishForNewParticipantsAfterDisconnect" status="run" time="0" classname="ASceneGraphComponent" />
    <testcase name="disconnectDoesNotAffectLocalScenesAtAllButUnpublishesAndResetsCountersForRemoteScenes" status="run" time="0.001" classname="ASceneGraphComponent" />
  </testsuite>
  <testsuite name="ASceneGraphProviderAndConsumerTest" tests="1" failures="0" disabled="0" errors="0" time="0">
    <testcase name="sceneactionlistCounterStartsWith1" status="run" time="0" classname="ASceneGraphProviderAndConsumerTest" />
  </testsuite>
  <testsuite name="ASingleResourceSerializationTyped/0" tests="3" failures="0" disabled="0" errors="0" time="0">
    <testcase name="canSerializeDeserializeToSameResource" type_param="ramses_internal::TextureResource" status="run" time="0" classname="ASingleResourceSerializationTyped/0" />
    <testcase name="calculatesSameHashAfterDeserializationIfNoneGiven" type_param="ramses_internal::TextureResource" status="run" time="0" classname="ASingleResourceSerializationTyped/0" />
    <testcase name="canSerializeCompressedResourceAndResultsInSameResourceAfterDecompression" type_param="ramses_internal::TextureResource" status="run" time="0" classname="ASingleResourceSerializationTyped/0" />
  </testsuite>
  <testsuite name="ASingleResourceSerializationTyped/1" tests="3" failures="0" disabled="0" errors="0" time="0">
    <testcase name="canSerializeDeserializeToSameResource" type_param="ramses_internal::ArrayResource" status="run" time="0" classname="ASingleResourceSerializationTyped/1" />
    <testcase name="calculatesSameHashAfterDeserializationIfNoneGiven" type_param="ramses_internal::ArrayResource" status="run" time="0" classname="ASingleResourceSerializationTyped/1" />
    <testcase name="canSerializeCompressedResourceAndResultsInSameResourceAfterDecompression" type_param="ramses_internal::ArrayResource" status="run" time="0" classname="ASingleResourceSerializationTyped/1" />
  </testsuite>
  <testsuite name="ASingleResourceSerializationTyped/2" tests="3" failures="0" disabled="0" errors="0" time="0">
    <testcase name="canSerializeDeserializeToSameResource" type_param="ramses_internal::EffectResource" status="run" time="0" classname="ASingleResourceSerializationTyped/2" />
    <testcase name="calculatesSameHashAfterDeserializationIfNoneGiven" type_param="ramses_internal::EffectResource" status="run" time="0" classname="ASingleResourceSerializationTyped/2" />
    <testcase name="canSerializeCompressedResourceAndResultsInSameResourceAfterDecompression" type_param="ramses_internal::EffectResource" status="run" time="0" classname="ASingleResourceSerializationTyped/2" />
  </testsuite>
  <testsuite name="DltAdapter" tests="3" failures="0" disabled="0" errors="0" time="0">
    <testcase name="RegisterAndUnregisterApplication" status="run" time="0" classname="DltAdapter" />
    <testcase name="RegisterApplicationWithAppNameTooLarge" status="run" time="0" classname="DltAdapter" />
    <testcase name="SingletonNotNull" status="run" time="0" classname="DltAdapter" />
  </testsuite>
  <testsuite name="DltAdapterWithRegisteredApplication" tests="3" failures="0" disabled="0" errors="0" time="0">
    <testcase name="DltInitialized" status="run" time="0" classname="DltAdapterWithRegisteredApplication" />
    <testcase name="RegisterandUnregisterContext" status="run" time="0" classname="DltAdapterWithRegisteredApplication" />
    <testcase name="LogMessageInDltAdapter" status="run" time="0" classname="DltAdapterWithRegisteredApplication" />
  </testsuite>
  <testsuite name="PlatformWatchDogTest" tests="4" failures="0" disabled="0" errors="0" time="0.5">
    <testcase name="callsRegisterAndUnregister" status="run" time="0" classname="PlatformWatchDogTest" />
    <testcase name="callsThePlatformFunctionRightAway" status="run" time="0" classname="PlatformWatchDogTest" />
    <testcase name="debouncesCallsToPlatformWatchdog" status="run" time="0" classname="PlatformWatchDogTest" />
    <testcase name="againCallsPlatformAfterDebounceTime" status="run" time="0.5" classname="PlatformWatchDogTest" />
  </testsuite>
  <testsuite name="ATCPConnectionSystem" tests="1" failures="0" disabled="0" errors="0" time="1.004">
    <testcase name="threadStressTest" status="run" time="1.004" classname="ATCPConnectionSystem" />
  </testsuite>
  <testsuite name="TestRotationConsistency/Matrix33fParamTest" tests="10" failures="0" disabled="0" errors="0" time="0">
    <testcase name="SetAndRecreateRotationXYZ/0" value_param="12-byte object &lt;00-00 34-42 00-00 AA-42 00-00 70-41&gt;" status="run" time="0" classname="TestRotationConsistency/Matrix33fParamTest" />
    <testcase name="SetAndRecreateRotationXYZ/1" value_param="12-byte object &lt;00-00 34-C2 00-00 AA-C2 00-00 70-C1&gt;" status="run" time="0" classname="TestRotationConsistency/Matrix33fParamTest" />
    <testcase name="SetAndRecreateRotationXYZ/2" value_param="12-byte object &lt;00-00 34-C2 00-00 1B-43 00-80 AC-43&gt;" status="run" time="0" classname="TestRotationConsistency/Matrix33fParamTest" />
    <testcase name="SetAndRecreateRotationXYZ/3" value_param="12-byte object &lt;00-00 A0-43 00-00 1B-C3 00-00 70-C1&gt;" status="run" time="0" classname="TestRotationConsistency/Matrix33fParamTest" />
    <testcase name="SetAndRecreateRotationXYZ/4" value_param="12-byte object &lt;00-00 B4-42 00-00 1B-C3 00-00 70-C1&gt;" status="run" time="0" classname="TestRotationConsistency/Matrix33fParamTest" />
    <testcase name="SetAndRecreateRotationZYX/0" value_param="12-byte object &lt;00-00 34-42 00-00 AA-42 00-00 70-41&gt;" status="run" time="0" classname="TestRotationConsistency/Matrix33fParamTest" />
    <testcase name="SetAndRecreateRotationZYX/1" value_param="12-byte object &lt;00-00 34-C2 00-00 AA-C2 00-00 70-C1&gt;" status="run" time="0" classname="TestRotationConsistency/Matrix33fParamTest" />
    <testcase name="SetAndRecreateRotationZYX/2" value_param="12-byte object &lt;00-00 34-C2 00-00 1B-43 00-80 AC-43&gt;" status="run" time="0" classname="TestRotationConsistency/Matrix33fParamTest" />
    <testcase name="SetAndRecreateRotationZYX/3" value_param="12-byte object &lt;00-00 A0-43 00-00 1B-C3 00-00 70-C1&gt;" status="run" time="0" classname="TestRotationConsistency/Matrix33fParamTest" />
    <testcase name="SetAndRecreateRotationZYX/4" value_param="12-byte object &lt;00-00 B4-42 00-00 1B-C3 00-00 70-C1&gt;" status="run" time="0" classname="TestRotationConsistency/Matrix33fParamTest" />
  </testsuite>
  <testsuite name="AResourceTest/ResourceCompression" tests="4" failures="0" disabled="0" errors="0" time="0.025">
    <testcase name="compressUncompressGivesInitialDataForSmallSizes/0" value_param="1-byte object &lt;01&gt;" status="run" time="0.004" classname="AResourceTest/ResourceCompression" />
    <testcase name="compressUncompressGivesInitialDataForSmallSizes/1" value_param="1-byte object &lt;02&gt;" status="run" time="0.019" classname="AResourceTest/ResourceCompression" />
    <testcase name="noCompressionForSmallSizes/0" value_param="1-byte object &lt;01&gt;" status="run" time="0.001" classname="AResourceTest/ResourceCompression" />
    <testcase name="noCompressionForSmallSizes/1" value_param="1-byte object &lt;02&gt;" status="run" time="0.001" classname="AResourceTest/ResourceCompression" />
  </testsuite>
  <testsuite name="TypedCommunicationTest/ACommunicationSystem" tests="4" failures="0" disabled="0" errors="0" time="0">
    <testcase name="canStartStopDiscoveryDaemon/0" value_param="1 (ECommunicationSystemType_Tcp)" status="run" time="0" classname="TypedCommunicationTest/ACommunicationSystem" />
    <testcase name="canRegisterAndUnregisterForConnectionUpdates/0" value_param="1 (ECommunicationSystemType_Tcp)" status="run" time="0" classname="TypedCommunicationTest/ACommunicationSystem" />
    <testcase name="sendFunctionsFailWhenNotYetConnected/0" value_param="1 (ECommunicationSystemType_Tcp)" status="run" time="0" classname="TypedCommunicationTest/ACommunicationSystem" />
    <testcase name="sendFunctionsFailAfterCallingDisconnect/0" value_param="1 (ECommunicationSystemType_Tcp)" status="run" time="0" classname="TypedCommunicationTest/ACommunicationSystem" />
  </testsuite>
  <testsuite name="TypedCommunicationTest/ACommunicationSystemWithDaemon" tests="2" failures="0" disabled="0" errors="0" time="0.001">
    <testcase name="canConnectAndDisconnectWithoutBlocking/0" value_param="(1 (ECommunicationSystemType_Tcp), 4-byte object &lt;00-00 00-00&gt;)" status="run" time="0" classname="TypedCommunicationTest/ACommunicationSystemWithDaemon" />
    <testcase name="canSendMessageToConnectedParticipant/0" value_param="(1 (ECommunicationSystemType_Tcp), 4-byte object &lt;00-00 00-00&gt;)" status="run" time="0.001" classname="TypedCommunicationTest/ACommunicationSystemWithDaemon" />
  </testsuite>
  <testsuite name="TypedCommunicationTest_ramses/ACommunicationSystemWithDaemonConnectionSetup" tests="2" failures="0" disabled="0" errors="0" time="0.002">
    <testcase name="receivedParticipantConnectedAndDisconnectedNotifications/0" value_param="(1 (ECommunicationSystemType_Tcp), 4-byte object &lt;00-00 00-00&gt;)" status="run" time="0" classname="TypedCommunicationTest_ramses/ACommunicationSystemWithDaemonConnectionSetup" />
    <testcase name="doesNotReceiveNotificationsAfterUnregistering/0" value_param="(1 (ECommunicationSystemType_Tcp), 4-byte object &lt;00-00 00-00&gt;)" status="run" time="0.001" classname="TypedCommunicationTest_ramses/ACommunicationSystemWithDaemonConnectionSetup" />
  </testsuite>
  <testsuite name="TypedCommunicationTest_dcsm/ACommunicationSystemWithDaemonConnectionSetup" tests="2" failures="0" disabled="0" errors="0" time="0.002">
    <testcase name="receivedParticipantConnectedAndDisconnectedNotifications/0" value_param="(1 (ECommunicationSystemType_Tcp), 4-byte object &lt;01-00 00-00&gt;)" status="run" time="0.001" classname="TypedCommunicationTest_dcsm/ACommunicationSystemWithDaemonConnectionSetup" />
    <testcase name="doesNotReceiveNotificationsAfterUnregistering/0" value_param="(1 (ECommunicationSystemType_Tcp), 4-byte object &lt;01-00 00-00&gt;)" status="run" time="0.001" classname="TypedCommunicationTest_dcsm/ACommunicationSystemWithDaemonConnectionSetup" />
  </testsuite>
  <testsuite name="TypedCommunicationTest/ACommunicationSystemWithDaemonMultiParticipant" tests="8" failures="0" disabled="3" errors="0" time="0.207">
    <testcase name="canConnectAndDisconnectMultipleTimes/0" value_param="(1 (ECommunicationSystemType_Tcp), 4-byte object &lt;00-00 00-00&gt;)" status="run" time="0" classname="TypedCommunicationTest/ACommunicationSystemWithDaemonMultiParticipant" />
    <testcase name="canSendMessageInBothDirectionBetweenTwoParticipants/0" value_param="(1 (ECommunicationSystemType_Tcp), 4-byte object &lt;00-00 00-00&gt;)" status="run" time="0.101" classname="TypedCommunicationTest/ACommunicationSystemWithDaemonMultiParticipant" />
    <testcase name="canSendMessageToOnlyOneOutOfTwoParticipants/0" value_param="(1 (ECommunicationSystemType_Tcp), 4-byte object &lt;00-00 00-00&gt;)" status="run" time="0.102" classname="TypedCommunicationTest/ACommunicationSystemWithDaemonMultiParticipant" />
    <testcase name="canSendAndReceiveLargeMessageInOneChunk/0" value_param="(1 (ECommunicationSystemType_Tcp), 4-byte object &lt;00-00 00-00&gt;)" status="run" time="0.003" classname="TypedCommunicationTest/ACommunicationSystemWithDaemonMultiParticipant" />
    <testcase name="DISABLED_canBroadcastMessageToTwoOthers/0" value_param="(1 (ECommunicationSystemType_Tcp), 4-byte object &lt;00-00 00-00&gt;)" status="notrun" time="0" classname="TypedCommunicationTest/ACommunicationSystemWithDaemonMultiParticipant" />
    <testcase name="DISABLED_getsParticipantConnectedNotificationsAfterConnectAndDisconnectMultipleTimes/0" value_param="(1 (ECommunicationSystemType_Tcp), 4-byte object &lt;00-00 00-00&gt;)" status="notrun" time="0" classname="TypedCommunicationTest/ACommunicationSystemWithDaemonMultiParticipant" />
    <testcase name="DISABLED_canSendMessageAfterConnectAndDisconnectMultipleTimes/0" value_param="(1 (ECommunicationSystemType_Tcp), 4-byte object &lt;00-00 00-00&gt;)" status="notrun" time="0" classname="TypedCommunicationTest/ACommunicationSystemWithDaemonMultiParticipant" />
    <testcase name="canEstablishConnectionToNewParticipantWithSameGuid/0" value_param="(1 (ECommunicationSystemType_Tcp), 4-byte object &lt;00-00 00-00&gt;)" status="run" time="0.001" classname="TypedCommunicationTest/ACommunicationSystemWithDaemonMultiParticipant" />
  </testsuite>
  <testsuite name="TypedCommunicationTest/ACommunicationSystemWithDaemonTcpOnly" tests="1" failures="0" disabled="0" errors="0" time="0.016">
    <testcase name="canSendAndReceiveLargeMessageInMultipleChunks/0" value_param="(1 (ECommunicationSystemType_Tcp), 4-byte object &lt;00-00 00-00&gt;)" status="run" time="0.016" classname="TypedCommunicationTest/ACommunicationSystemWithDaemonTcpOnly" />
  </testsuite>
  <testsuite name="TypedCommunicationTest/ADcsmSenderAndReceiverTest" tests="8" failures="0" disabled="0" errors="0" time="0.007">
    <testcase name="broadcastOfferContent/0" value_param="1 (ECommunicationSystemType_Tcp)" status="run" time="0.001" classname="TypedCommunicationTest/ADcsmSenderAndReceiverTest" />
    <testcase name="sendOfferContent/0" value_param="1 (ECommunicationSystemType_Tcp)" status="run" time="0.001" classname="TypedCommunicationTest/ADcsmSenderAndReceiverTest" />
    <testcase name="sendContentReady/0" value_param="1 (ECommunicationSystemType_Tcp)" status="run" time="0.001" classname="TypedCommunicationTest/ADcsmSenderAndReceiverTest" />
    <testcase name="sendBroadcastRequestStopOfferContent/0" value_param="1 (ECommunicationSystemType_Tcp)" status="run" time="0.001" classname="TypedCommunicationTest/ADcsmSenderAndReceiverTest" />
    <testcase name="sendBroadcastForceStopOfferContent/0" value_param="1 (ECommunicationSystemType_Tcp)" status="run" time="0.001" classname="TypedCommunicationTest/ADcsmSenderAndReceiverTest" />
    <testcase name="sendContentFocusRequest/0" value_param="1 (ECommunicationSystemType_Tcp)" status="run" time="0.001" classname="TypedCommunicationTest/ADcsmSenderAndReceiverTest" />
    <testcase name="sendCanvasSizeChange/0" value_param="1 (ECommunicationSystemType_Tcp)" status="run" time="0" classname="TypedCommunicationTest/ADcsmSenderAndReceiverTest" />
    <testcase name="sendContentStateChange/0" value_param="1 (ECommunicationSystemType_Tcp)" status="run" time="0.001" classname="TypedCommunicationTest/ADcsmSenderAndReceiverTest" />
  </testsuite>
  <testsuite name="TypedCommunicationTest/ADcsmSenderAndReceiverTestTcp" tests="1" failures="0" disabled="0" errors="0" time="0.001">
    <testcase name="sendUpdateContentMetadata/0" value_param="1 (ECommunicationSystemType_Tcp)" status="run" time="0.001" classname="TypedCommunicationTest/ADcsmSenderAndReceiverTestTcp" />
  </testsuite>
  <testsuite name="TypedCommunicationTest/AResourceManagementSenderAndReceiverTest" tests="1" failures="0" disabled="0" errors="0" time="0.001">
    <testcase name="RequestResources/0" value_param="1 (ECommunicationSystemType_Tcp)" status="run" time="0.001" classname="TypedCommunicationTest/AResourceManagementSenderAndReceiverTest" />
  </testsuite>
  <testsuite name="TypedCommunicationTest/AResourceSenderAndReceiverTest" tests="9" failures="0" disabled="0" errors="0" time="0.007">
    <testcase name="ReceivesTheSameTexture2DSentByTheSender/0" value_param="1 (ECommunicationSystemType_Tcp)" status="run" time="0.001" classname="TypedCommunicationTest/AResourceSenderAndReceiverTest" />
    <testcase name="ReceivesTheSameTexture3DSentByTheSender/0" value_param="1 (ECommunicationSystemType_Tcp)" status="run" time="0" classname="TypedCommunicationTest/AResourceSenderAndReceiverTest" />
    <testcase name="ReceivesTheSameTextureCubeSentByTheSender/0" value_param="1 (ECommunicationSystemType_Tcp)" status="run" time="0.001" classname="TypedCommunicationTest/AResourceSenderAndReceiverTest" />
    <testcase name="ReceivesTheSameVertexArraySentByTheSender/0" value_param="1 (ECommunicationSystemType_Tcp)" status="run" time="0.001" classname="TypedCommunicationTest/AResourceSenderAndReceiverTest" />
    <testcase name="ReceivesTheSameEffectResourceSentByTheSender/0" value_param="1 (ECommunicationSystemType_Tcp)" status="run" time="0.001" classname="TypedCommunicationTest/AResourceSenderAndReceiverTest" />
    <testcase name="SendResourceNotAvailable/0" value_param="1 (ECommunicationSystemType_Tcp)" status="run" time="0" classname="TypedCommunicationTest/AResourceSenderAndReceiverTest" />
    <testcase name="ResourceRequestIsSplitInSeveralMessages/0" value_param="1 (ECommunicationSystemType_Tcp)" status="run" time="0.002" classname="TypedCommunicationTest/AResourceSenderAndReceiverTest" />
    <testcase name="sendingResourceVectorResultsInCorrectNumberOfReceiveCallbacks/0" value_param="1 (ECommunicationSystemType_Tcp)" status="run" time="0" classname="TypedCommunicationTest/AResourceSenderAndReceiverTest" />
    <testcase name="sendingResourceVectorWithDifferenttypeOfResourcesResultsInMultipleReceiveCallbacks/0" value_param="1 (ECommunicationSystemType_Tcp)" status="run" time="0.001" classname="TypedCommunicationTest/AResourceSenderAndReceiverTest" />
  </testsuite>
  <testsuite name="TypedCommunicationTest/ASceneGraphProtocolSenderAndReceiverTest" tests="11" failures="0" disabled="1" errors="0" time="0.008">
    <testcase name="broadcastNewScenesAvailable/0" value_param="1 (ECommunicationSystemType_Tcp)" status="run" time="0.001" classname="TypedCommunicationTest/ASceneGraphProtocolSenderAndReceiverTest" />
    <testcase name="sendInitializeScene/0" value_param="1 (ECommunicationSystemType_Tcp)" status="run" time="0" classname="TypedCommunicationTest/ASceneGraphProtocolSenderAndReceiverTest" />
    <testcase name="DISABLED_broadcastScenesBecameUnavailable/0" value_param="1 (ECommunicationSystemType_Tcp)" status="notrun" time="0" classname="TypedCommunicationTest/ASceneGraphProtocolSenderAndReceiverTest" />
    <testcase name="sendSceneActionList/0" value_param="1 (ECommunicationSystemType_Tcp)" status="run" time="0.001" classname="TypedCommunicationTest/ASceneGraphProtocolSenderAndReceiverTest" />
    <testcase name="sendScenesAvailable/0" value_param="1 (ECommunicationSystemType_Tcp)" status="run" time="0.001" classname="TypedCommunicationTest/ASceneGraphProtocolSenderAndReceiverTest" />
    <testcase name="sendSubscribeScene/0" value_param="1 (ECommunicationSystemType_Tcp)" status="run" time="0.001" classname="TypedCommunicationTest/ASceneGraphProtocolSenderAndReceiverTest" />
    <testcase name="sendUnsubscribeScene/0" value_param="1 (ECommunicationSystemType_Tcp)" status="run" time="0.001" classname="TypedCommunicationTest/ASceneGraphProtocolSenderAndReceiverTest" />
    <testcase name="sendSceneNotAvailable/0" value_param="1 (ECommunicationSystemType_Tcp)" status="run" time="0" classname="TypedCommunicationTest/ASceneGraphProtocolSenderAndReceiverTest" />
    <testcase name="sendSceneActionListIsSplitUpIfMaxNumberIsExceeded/0" value_param="1 (ECommunicationSystemType_Tcp)" status="run" time="0.001" classname="TypedCommunicationTest/ASceneGraphProtocolSenderAndReceiverTest" />
    <testcase name="sendSceneActionListIsSplitUpIfMaxSizeIsExceeded/0" value_param="1 (ECommunicationSystemType_Tcp)" status="run" time="0.001" classname="TypedCommunicationTest/ASceneGraphProtocolSenderAndReceiverTest" />
    <testcase name="SendCorrectCounterValuesViaAllCommunicationSystems/0" value_param="1 (ECommunicationSystemType_Tcp)" status="run" time="0.001" classname="TypedCommunicationTest/ASceneGraphProtocolSenderAndReceiverTest" />
  </testsuite>
</testsuites>
